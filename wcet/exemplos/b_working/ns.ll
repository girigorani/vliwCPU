; ModuleID = 'ns.c'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-redhat-linux-gnu"

@keys = global [5 x [5 x [5 x [5 x i32]]]] [[5 x [5 x [5 x i32]]] zeroinitializer, [5 x [5 x [5 x i32]]] [[5 x [5 x i32]] [[5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1]], [5 x [5 x i32]] [[5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1]], [5 x [5 x i32]] [[5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1]], [5 x [5 x i32]] [[5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1]], [5 x [5 x i32]] [[5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1]]], [5 x [5 x [5 x i32]]] [[5 x [5 x i32]] [[5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2]], [5 x [5 x i32]] [[5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2]], [5 x [5 x i32]] [[5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2]], [5 x [5 x i32]] [[5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2]], [5 x [5 x i32]] [[5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2]]], [5 x [5 x [5 x i32]]] [[5 x [5 x i32]] [[5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3]], [5 x [5 x i32]] [[5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3]], [5 x [5 x i32]] [[5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3]], [5 x [5 x i32]] [[5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3]], [5 x [5 x i32]] [[5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3]]], [5 x [5 x [5 x i32]]] [[5 x [5 x i32]] [[5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4]], [5 x [5 x i32]] [[5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4]], [5 x [5 x i32]] [[5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4]], [5 x [5 x i32]] [[5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4]], [5 x [5 x i32]] [[5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 401]]]], align 16
@answer = global [5 x [5 x [5 x [5 x i32]]]] [[5 x [5 x [5 x i32]]] [[5 x [5 x i32]] [[5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123]], [5 x [5 x i32]] [[5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123]], [5 x [5 x i32]] [[5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123]], [5 x [5 x i32]] [[5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123]], [5 x [5 x i32]] [[5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123]]], [5 x [5 x [5 x i32]]] [[5 x [5 x i32]] [[5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234]], [5 x [5 x i32]] [[5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234]], [5 x [5 x i32]] [[5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234]], [5 x [5 x i32]] [[5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234]], [5 x [5 x i32]] [[5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234]]], [5 x [5 x [5 x i32]]] [[5 x [5 x i32]] [[5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0]], [5 x [5 x i32]] [[5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0]], [5 x [5 x i32]] [[5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0]], [5 x [5 x i32]] [[5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0]], [5 x [5 x i32]] [[5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0]]], [5 x [5 x [5 x i32]]] [[5 x [5 x i32]] [[5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456]], [5 x [5 x i32]] [[5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456]], [5 x [5 x i32]] [[5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456]], [5 x [5 x i32]] [[5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456]], [5 x [5 x i32]] [[5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456]]], [5 x [5 x [5 x i32]]] [[5 x [5 x i32]] [[5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567]], [5 x [5 x i32]] [[5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567]], [5 x [5 x i32]] [[5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567]], [5 x [5 x i32]] [[5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567]], [5 x [5 x i32]] [[5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 1111]]]], align 16
@result = global i32 0, align 4

; Function Attrs: nounwind uwtable
define i32 @foo(i32 %x) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  store i32 %x, i32* %2, align 4
  store i32 0, i32* %i, align 4
  br label %3

; <label>:3                                       ; preds = %75, %0
  %4 = load i32* %i, align 4
  %5 = icmp slt i32 %4, 5
  br i1 %5, label %6, label %78

; <label>:6                                       ; preds = %3
  store i32 0, i32* %j, align 4
  br label %7

; <label>:7                                       ; preds = %71, %6
  %8 = load i32* %j, align 4
  %9 = icmp slt i32 %8, 5
  br i1 %9, label %10, label %74

; <label>:10                                      ; preds = %7
  store i32 0, i32* %k, align 4
  br label %11

; <label>:11                                      ; preds = %67, %10
  %12 = load i32* %k, align 4
  %13 = icmp slt i32 %12, 5
  br i1 %13, label %14, label %70

; <label>:14                                      ; preds = %11
  store i32 0, i32* %l, align 4
  br label %15

; <label>:15                                      ; preds = %63, %14
  %16 = load i32* %l, align 4
  %17 = icmp slt i32 %16, 5
  br i1 %17, label %18, label %66

; <label>:18                                      ; preds = %15
  %19 = load i32* %l, align 4
  %20 = sext i32 %19 to i64
  %21 = load i32* %k, align 4
  %22 = sext i32 %21 to i64
  %23 = load i32* %j, align 4
  %24 = sext i32 %23 to i64
  %25 = load i32* %i, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [5 x [5 x [5 x [5 x i32]]]]* @keys, i32 0, i64 %26
  %28 = getelementptr inbounds [5 x [5 x [5 x i32]]]* %27, i32 0, i64 %24
  %29 = getelementptr inbounds [5 x [5 x i32]]* %28, i32 0, i64 %22
  %30 = getelementptr inbounds [5 x i32]* %29, i32 0, i64 %20
  %31 = load i32* %30, align 4
  %32 = load i32* %2, align 4
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %34, label %62

; <label>:34                                      ; preds = %18
  %35 = load i32* %l, align 4
  %36 = sext i32 %35 to i64
  %37 = load i32* %k, align 4
  %38 = sext i32 %37 to i64
  %39 = load i32* %j, align 4
  %40 = sext i32 %39 to i64
  %41 = load i32* %i, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [5 x [5 x [5 x [5 x i32]]]]* @answer, i32 0, i64 %42
  %44 = getelementptr inbounds [5 x [5 x [5 x i32]]]* %43, i32 0, i64 %40
  %45 = getelementptr inbounds [5 x [5 x i32]]* %44, i32 0, i64 %38
  %46 = getelementptr inbounds [5 x i32]* %45, i32 0, i64 %36
  %47 = load i32* %46, align 4
  %48 = load i32* %l, align 4
  %49 = sext i32 %48 to i64
  %50 = load i32* %k, align 4
  %51 = sext i32 %50 to i64
  %52 = load i32* %j, align 4
  %53 = sext i32 %52 to i64
  %54 = load i32* %i, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [5 x [5 x [5 x [5 x i32]]]]* @keys, i32 0, i64 %55
  %57 = getelementptr inbounds [5 x [5 x [5 x i32]]]* %56, i32 0, i64 %53
  %58 = getelementptr inbounds [5 x [5 x i32]]* %57, i32 0, i64 %51
  %59 = getelementptr inbounds [5 x i32]* %58, i32 0, i64 %49
  %60 = load i32* %59, align 4
  %61 = add nsw i32 %47, %60
  store i32 %61, i32* %1
  br label %79

; <label>:62                                      ; preds = %18
  br label %63

; <label>:63                                      ; preds = %62
  %64 = load i32* %l, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %l, align 4
  br label %15

; <label>:66                                      ; preds = %15
  br label %67

; <label>:67                                      ; preds = %66
  %68 = load i32* %k, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %k, align 4
  br label %11

; <label>:70                                      ; preds = %11
  br label %71

; <label>:71                                      ; preds = %70
  %72 = load i32* %j, align 4
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %j, align 4
  br label %7

; <label>:74                                      ; preds = %7
  br label %75

; <label>:75                                      ; preds = %74
  %76 = load i32* %i, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %i, align 4
  br label %3

; <label>:78                                      ; preds = %3
  store i32 -1, i32* %1
  br label %79

; <label>:79                                      ; preds = %78, %34
  %80 = load i32* %1
  ret i32 %80
}

; Function Attrs: nounwind uwtable
define void @main() #0 {
  %1 = call i32 @foo(i32 400)
  store i32 %1, i32* @result, align 4
  ret void
}

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
