./unittests/Support/FileOutputBufferTest.cpp:#include "llvm/Support/raw_ostream.h"
./unittests/Support/Path.cpp:#include "llvm/Support/raw_ostream.h"
./unittests/Support/formatted_raw_ostream_test.cpp://===- llvm/unittest/Support/formatted_raw_ostream_test.cpp ---------------===//
./unittests/Support/formatted_raw_ostream_test.cpp:#include "llvm/Support/raw_ostream.h"
./unittests/Support/formatted_raw_ostream_test.cpp:TEST(formatted_raw_ostreamTest, Test_Tell) {
./unittests/Support/formatted_raw_ostream_test.cpp:  formatted_raw_ostream C(B);
./unittests/Support/YAMLIOTest.cpp:    static void output(const MyCustomType &value, void* ctxt, llvm::raw_ostream &out) {
./unittests/Support/YAMLIOTest.cpp:    static void output(const MyNumber &value, void *, llvm::raw_ostream &out) {
./unittests/Support/raw_ostream_test.cpp://===- llvm/unittest/Support/raw_ostream_test.cpp - raw_ostream tests -----===//
./unittests/Support/raw_ostream_test.cpp:#include "llvm/Support/raw_ostream.h"
./unittests/Support/raw_ostream_test.cpp:  // FIXME: This is relying on internal knowledge of how raw_ostream works to
./unittests/Support/raw_ostream_test.cpp:TEST(raw_ostreamTest, Types_Buffered) {
./unittests/Support/raw_ostream_test.cpp:TEST(raw_ostreamTest, Types_Unbuffered) {  
./unittests/Support/raw_ostream_test.cpp:TEST(raw_ostreamTest, BufferEdge) {  
./unittests/Support/raw_ostream_test.cpp:TEST(raw_ostreamTest, TinyBuffer) {
./unittests/Support/raw_ostream_test.cpp:TEST(raw_ostreamTest, WriteEscaped) {
./unittests/Support/Casting.cpp:#include "llvm/Support/raw_ostream.h"
./unittests/Support/CMakeLists.txt:  formatted_raw_ostream_test.cpp
./unittests/Support/CMakeLists.txt:  raw_ostream_test.cpp
./unittests/ADT/TwineTest.cpp:#include "llvm/Support/raw_ostream.h"
./unittests/ADT/StringRefTest.cpp:#include "llvm/Support/raw_ostream.h"
./unittests/ADT/APFloatTest.cpp:#include "llvm/Support/raw_ostream.h"
./unittests/IR/PassManagerTest.cpp:#include "llvm/Support/raw_ostream.h"
./unittests/IR/MetadataTest.cpp:#include "llvm/Support/raw_ostream.h"
./cmake/modules/AddLLVM.cmake:    LLVMSupport # gtest needs it for raw_ostream.
./include/llvm/ExecutionEngine/ObjectBuffer.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/ExecutionEngine/ObjectBuffer.h:  raw_ostream &getOStream() { return OS; }
./include/llvm/Support/PassNameParser.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/Support/PrettyStackTrace.h:  class raw_ostream;
./include/llvm/Support/PrettyStackTrace.h:    virtual void print(raw_ostream &OS) const = 0;
./include/llvm/Support/PrettyStackTrace.h:    virtual void print(raw_ostream &OS) const LLVM_OVERRIDE;
./include/llvm/Support/PrettyStackTrace.h:    virtual void print(raw_ostream &OS) const LLVM_OVERRIDE;
./include/llvm/Support/SystemUtils.h:  class raw_ostream;
./include/llvm/Support/SystemUtils.h:/// Determine if the raw_ostream provided is connected to a terminal. If so,
./include/llvm/Support/SystemUtils.h:  raw_ostream &stream_to_check, ///< The stream to be checked
./include/llvm/Support/circular_raw_ostream.h://===-- llvm/Support/circular_raw_ostream.h - Buffered streams --*- C++ -*-===//
./include/llvm/Support/circular_raw_ostream.h:// This file contains raw_ostream implementations for streams to do circular
./include/llvm/Support/circular_raw_ostream.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/Support/circular_raw_ostream.h:  /// circular_raw_ostream - A raw_ostream which *can* save its data
./include/llvm/Support/circular_raw_ostream.h:  class circular_raw_ostream : public raw_ostream {
./include/llvm/Support/circular_raw_ostream.h:    raw_ostream *TheStream;
./include/llvm/Support/circular_raw_ostream.h:    /// circular_raw_ostream - Construct an optionally
./include/llvm/Support/circular_raw_ostream.h:    /// set to be Unbuffered.  This is because circular_raw_ostream
./include/llvm/Support/circular_raw_ostream.h:    /// "Owns" tells the circular_raw_ostream whether it is
./include/llvm/Support/circular_raw_ostream.h:    circular_raw_ostream(raw_ostream &Stream, const char *Header,
./include/llvm/Support/circular_raw_ostream.h:        : raw_ostream(/*unbuffered*/true),
./include/llvm/Support/circular_raw_ostream.h:    explicit circular_raw_ostream()
./include/llvm/Support/circular_raw_ostream.h:        : raw_ostream(/*unbuffered*/true),
./include/llvm/Support/circular_raw_ostream.h:    ~circular_raw_ostream() {
./include/llvm/Support/circular_raw_ostream.h:    /// setStream - Tell the circular_raw_ostream to output a
./include/llvm/Support/circular_raw_ostream.h:    /// different stream.  "Owns" tells circular_raw_ostream whether
./include/llvm/Support/circular_raw_ostream.h:    void setStream(raw_ostream &Stream, bool Owns = REFERENCE_ONLY) {
./include/llvm/Support/circular_raw_ostream.h:    /// transfer the buffer settings from this circular_raw_ostream
./include/llvm/Support/YAMLParser.h:class raw_ostream;
./include/llvm/Support/YAMLParser.h:bool dumpTokens(StringRef Input, raw_ostream &);
./include/llvm/Support/ConstantRange.h:  void print(raw_ostream &OS) const;
./include/llvm/Support/ConstantRange.h:inline raw_ostream &operator<<(raw_ostream &OS, const ConstantRange &CR) {
./include/llvm/Support/GCOV.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/Support/FormattedStream.h:// This file contains raw_ostream implementations for streams to do
./include/llvm/Support/FormattedStream.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/Support/FormattedStream.h:  /// formatted_raw_ostream - Formatted raw_fd_ostream to handle
./include/llvm/Support/FormattedStream.h:  class formatted_raw_ostream : public raw_ostream {
./include/llvm/Support/FormattedStream.h:    raw_ostream *TheStream;
./include/llvm/Support/FormattedStream.h:    /// formatted_raw_ostream - Open the specified file for
./include/llvm/Support/FormattedStream.h:    /// This is because formatted_raw_ostream does its own buffering,
./include/llvm/Support/FormattedStream.h:    formatted_raw_ostream(raw_ostream &Stream, bool Delete = false) 
./include/llvm/Support/FormattedStream.h:      : raw_ostream(), TheStream(0), DeleteStream(false), ColumnScanned(0) {
./include/llvm/Support/FormattedStream.h:    explicit formatted_raw_ostream()
./include/llvm/Support/FormattedStream.h:      : raw_ostream(), TheStream(0), DeleteStream(false), ColumnScanned(0) {
./include/llvm/Support/FormattedStream.h:    ~formatted_raw_ostream() {
./include/llvm/Support/FormattedStream.h:    void setStream(raw_ostream &Stream, bool Delete = false) {
./include/llvm/Support/FormattedStream.h:      // This formatted_raw_ostream inherits from raw_ostream, so it'll do its
./include/llvm/Support/FormattedStream.h:    formatted_raw_ostream &PadToColumn(unsigned NewCol);
./include/llvm/Support/FormattedStream.h:      // settings from this raw_ostream back to the underlying stream.
./include/llvm/Support/FormattedStream.h:/// fouts() - This returns a reference to a formatted_raw_ostream for
./include/llvm/Support/FormattedStream.h:formatted_raw_ostream &fouts();
./include/llvm/Support/FormattedStream.h:/// ferrs() - This returns a reference to a formatted_raw_ostream for
./include/llvm/Support/FormattedStream.h:formatted_raw_ostream &ferrs();
./include/llvm/Support/FormattedStream.h:/// fdbgs() - This returns a reference to a formatted_raw_ostream for
./include/llvm/Support/FormattedStream.h:formatted_raw_ostream &fdbgs();
./include/llvm/Support/Timer.h:class raw_ostream;
./include/llvm/Support/Timer.h:  void print(const TimeRecord &Total, raw_ostream &OS) const;
./include/llvm/Support/Timer.h:  void print(raw_ostream &OS);
./include/llvm/Support/Timer.h:  static void printAll(raw_ostream &OS);
./include/llvm/Support/Timer.h:  void PrintQueuedTimers(raw_ostream &OS);
./include/llvm/Support/raw_ostream.h://===--- raw_ostream.h - Raw output stream ----------------------*- C++ -*-===//
./include/llvm/Support/raw_ostream.h://  This file defines the raw_ostream class.
./include/llvm/Support/raw_ostream.h:/// raw_ostream - This class implements an extremely fast bulk output stream
./include/llvm/Support/raw_ostream.h:class raw_ostream {
./include/llvm/Support/raw_ostream.h:  void operator=(const raw_ostream &) LLVM_DELETED_FUNCTION;
./include/llvm/Support/raw_ostream.h:  raw_ostream(const raw_ostream &) LLVM_DELETED_FUNCTION;
./include/llvm/Support/raw_ostream.h:  /// If buffered, then the raw_ostream owns the buffer if (BufferMode ==
./include/llvm/Support/raw_ostream.h:  explicit raw_ostream(bool unbuffered=false)
./include/llvm/Support/raw_ostream.h:  virtual ~raw_ostream();
./include/llvm/Support/raw_ostream.h:  raw_ostream &operator<<(char C) {
./include/llvm/Support/raw_ostream.h:  raw_ostream &operator<<(unsigned char C) {
./include/llvm/Support/raw_ostream.h:  raw_ostream &operator<<(signed char C) {
./include/llvm/Support/raw_ostream.h:  raw_ostream &operator<<(StringRef Str) {
./include/llvm/Support/raw_ostream.h:  raw_ostream &operator<<(const char *Str) {
./include/llvm/Support/raw_ostream.h:  raw_ostream &operator<<(const std::string &Str) {
./include/llvm/Support/raw_ostream.h:  raw_ostream &operator<<(unsigned long N);
./include/llvm/Support/raw_ostream.h:  raw_ostream &operator<<(long N);
./include/llvm/Support/raw_ostream.h:  raw_ostream &operator<<(unsigned long long N);
./include/llvm/Support/raw_ostream.h:  raw_ostream &operator<<(long long N);
./include/llvm/Support/raw_ostream.h:  raw_ostream &operator<<(const void *P);
./include/llvm/Support/raw_ostream.h:  raw_ostream &operator<<(unsigned int N) {
./include/llvm/Support/raw_ostream.h:  raw_ostream &operator<<(int N) {
./include/llvm/Support/raw_ostream.h:  raw_ostream &operator<<(double N);
./include/llvm/Support/raw_ostream.h:  raw_ostream &write_hex(unsigned long long N);
./include/llvm/Support/raw_ostream.h:  raw_ostream &write_escaped(StringRef Str, bool UseHexEscapes = false);
./include/llvm/Support/raw_ostream.h:  raw_ostream &write(unsigned char C);
./include/llvm/Support/raw_ostream.h:  raw_ostream &write(const char *Ptr, size_t Size);
./include/llvm/Support/raw_ostream.h:  raw_ostream &operator<<(const format_object_base &Fmt);
./include/llvm/Support/raw_ostream.h:  raw_ostream &indent(unsigned NumSpaces);
./include/llvm/Support/raw_ostream.h:  virtual raw_ostream &changeColor(enum Colors Color,
./include/llvm/Support/raw_ostream.h:  virtual raw_ostream &resetColor() { return *this; }
./include/llvm/Support/raw_ostream.h:  virtual raw_ostream &reverseColor() { return *this; }
./include/llvm/Support/raw_ostream.h:  /// SetBuffer - Use the provided buffer as the raw_ostream buffer. This is
./include/llvm/Support/raw_ostream.h:/// raw_fd_ostream - A raw_ostream that writes to a file descriptor.
./include/llvm/Support/raw_ostream.h:class raw_fd_ostream : public raw_ostream {
./include/llvm/Support/raw_ostream.h:  /// write_impl - See raw_ostream::write_impl.
./include/llvm/Support/raw_ostream.h:  /// Note that because raw_ostream's are typically buffered, this flag is only
./include/llvm/Support/raw_ostream.h:  virtual raw_ostream &changeColor(enum Colors colors, bool bold=false,
./include/llvm/Support/raw_ostream.h:  virtual raw_ostream &resetColor() LLVM_OVERRIDE;
./include/llvm/Support/raw_ostream.h:  virtual raw_ostream &reverseColor() LLVM_OVERRIDE;
./include/llvm/Support/raw_ostream.h:  /// flag is set at the time when this raw_ostream's destructor is called,
./include/llvm/Support/raw_ostream.h:/// outs() - This returns a reference to a raw_ostream for standard output.
./include/llvm/Support/raw_ostream.h:raw_ostream &outs();
./include/llvm/Support/raw_ostream.h:/// errs() - This returns a reference to a raw_ostream for standard error.
./include/llvm/Support/raw_ostream.h:raw_ostream &errs();
./include/llvm/Support/raw_ostream.h:/// nulls() - This returns a reference to a raw_ostream which simply discards
./include/llvm/Support/raw_ostream.h:raw_ostream &nulls();
./include/llvm/Support/raw_ostream.h:/// raw_string_ostream - A raw_ostream that writes to an std::string.  This is a
./include/llvm/Support/raw_ostream.h:class raw_string_ostream : public raw_ostream {
./include/llvm/Support/raw_ostream.h:  /// write_impl - See raw_ostream::write_impl.
./include/llvm/Support/raw_ostream.h:/// raw_svector_ostream - A raw_ostream that writes to an SmallVector or
./include/llvm/Support/raw_ostream.h:class raw_svector_ostream : public raw_ostream {
./include/llvm/Support/raw_ostream.h:  /// write_impl - See raw_ostream::write_impl.
./include/llvm/Support/raw_ostream.h:/// raw_null_ostream - A raw_ostream that discards all output.
./include/llvm/Support/raw_ostream.h:class raw_null_ostream : public raw_ostream {
./include/llvm/Support/raw_ostream.h:  /// write_impl - See raw_ostream::write_impl.
./include/llvm/Support/SourceMgr.h:  class raw_ostream;
./include/llvm/Support/SourceMgr.h:  /// @param OS the raw_ostream to print on.
./include/llvm/Support/SourceMgr.h:  void PrintIncludeStack(SMLoc IncludeLoc, raw_ostream &OS) const;
./include/llvm/Support/SourceMgr.h:/// allowing printing to a raw_ostream as a caret diagnostic.
./include/llvm/Support/SourceMgr.h:  void print(const char *ProgName, raw_ostream &S,
./include/llvm/Support/raw_os_ostream.h://===- raw_os_ostream.h - std::ostream adaptor for raw_ostream --*- C++ -*-===//
./include/llvm/Support/raw_os_ostream.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/Support/raw_os_ostream.h:/// raw_os_ostream - A raw_ostream that writes to an std::ostream.  This is a
./include/llvm/Support/raw_os_ostream.h:class raw_os_ostream : public raw_ostream {
./include/llvm/Support/raw_os_ostream.h:  /// write_impl - See raw_ostream::write_impl.
./include/llvm/Support/ToolOutputFile.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/Support/Debug.h:class raw_ostream;
./include/llvm/Support/Debug.h:/// dbgs() - This returns a reference to a raw_ostream for debugging
./include/llvm/Support/Debug.h:raw_ostream &dbgs();
./include/llvm/Support/YAMLTraits.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/Support/YAMLTraits.h:///      static void output(const MyType &val, void*, llvm::raw_ostream &out) {
./include/llvm/Support/YAMLTraits.h:  //static void output(const T &value, void *ctxt, llvm::raw_ostream &out);
./include/llvm/Support/YAMLTraits.h:  typedef void (*Signature_output)(const T&, void*, llvm::raw_ostream&);
./include/llvm/Support/YAMLTraits.h:  static void output(const bool &, void*, llvm::raw_ostream &);
./include/llvm/Support/YAMLTraits.h:  static void output(const StringRef &, void*, llvm::raw_ostream &);
./include/llvm/Support/YAMLTraits.h:  static void output(const uint8_t &, void*, llvm::raw_ostream &);
./include/llvm/Support/YAMLTraits.h:  static void output(const uint16_t &, void*, llvm::raw_ostream &);
./include/llvm/Support/YAMLTraits.h:  static void output(const uint32_t &, void*, llvm::raw_ostream &);
./include/llvm/Support/YAMLTraits.h:  static void output(const uint64_t &, void*, llvm::raw_ostream &);
./include/llvm/Support/YAMLTraits.h:  static void output(const int8_t &, void*, llvm::raw_ostream &);
./include/llvm/Support/YAMLTraits.h:  static void output(const int16_t &, void*, llvm::raw_ostream &);
./include/llvm/Support/YAMLTraits.h:  static void output(const int32_t &, void*, llvm::raw_ostream &);
./include/llvm/Support/YAMLTraits.h:  static void output(const int64_t &, void*, llvm::raw_ostream &);
./include/llvm/Support/YAMLTraits.h:  static void output(const float &, void*, llvm::raw_ostream &);
./include/llvm/Support/YAMLTraits.h:  static void output(const double &, void*, llvm::raw_ostream &);
./include/llvm/Support/YAMLTraits.h:  Output(llvm::raw_ostream &, void *Ctxt=NULL);
./include/llvm/Support/YAMLTraits.h:  llvm::raw_ostream       &Out;
./include/llvm/Support/YAMLTraits.h:  static void output(const Hex8 &, void*, llvm::raw_ostream &);
./include/llvm/Support/YAMLTraits.h:  static void output(const Hex16 &, void*, llvm::raw_ostream &);
./include/llvm/Support/YAMLTraits.h:  static void output(const Hex32 &, void*, llvm::raw_ostream &);
./include/llvm/Support/YAMLTraits.h:  static void output(const Hex64 &, void*, llvm::raw_ostream &);
./include/llvm/Support/TargetRegistry.h:  class raw_ostream;
./include/llvm/Support/TargetRegistry.h:  class formatted_raw_ostream;
./include/llvm/Support/TargetRegistry.h:  MCStreamer *createAsmStreamer(MCContext &Ctx, formatted_raw_ostream &OS,
./include/llvm/Support/TargetRegistry.h:                                                  raw_ostream &_OS,
./include/llvm/Support/TargetRegistry.h:                                             formatted_raw_ostream &OS,
./include/llvm/Support/TargetRegistry.h:                                       raw_ostream &_OS,
./include/llvm/Support/TargetRegistry.h:                                  formatted_raw_ostream &OS,
./include/llvm/Support/Format.h:// and risk of printf.  This can be used like this (with raw_ostreams as an
./include/llvm/Support/BlockFrequency.h:class raw_ostream;
./include/llvm/Support/BlockFrequency.h:  void print(raw_ostream &OS) const;
./include/llvm/Support/BlockFrequency.h:raw_ostream &operator<<(raw_ostream &OS, const BlockFrequency &Freq);
./include/llvm/Support/BranchProbability.h:class raw_ostream;
./include/llvm/Support/BranchProbability.h:  void print(raw_ostream &OS) const;
./include/llvm/Support/BranchProbability.h:raw_ostream &operator<<(raw_ostream &OS, const BranchProbability &Prob);
./include/llvm/Support/GraphWriter.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/Support/GraphWriter.h:  raw_ostream &O;
./include/llvm/Support/GraphWriter.h:  bool getEdgeSourceLabels(raw_ostream &O, NodeType *Node) {
./include/llvm/Support/GraphWriter.h:  GraphWriter(raw_ostream &o, const GraphType &g, bool SN) : O(o), G(g) {
./include/llvm/Support/GraphWriter.h:  raw_ostream &getOStream() {
./include/llvm/Support/GraphWriter.h:raw_ostream &WriteGraph(raw_ostream &O, const GraphType &G,
./include/llvm/Support/LEB128.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/Support/LEB128.h:static inline void encodeSLEB128(int64_t Value, raw_ostream &OS) {
./include/llvm/Support/LEB128.h:static inline void encodeULEB128(uint64_t Value, raw_ostream &OS,
./include/llvm/CodeGen/MachineBasicBlock.h:class raw_ostream;
./include/llvm/CodeGen/MachineBasicBlock.h:  void print(raw_ostream &OS, SlotIndexes* = 0) const;
./include/llvm/CodeGen/MachineBasicBlock.h:raw_ostream& operator<<(raw_ostream &OS, const MachineBasicBlock &MBB);
./include/llvm/CodeGen/MachineBasicBlock.h:void WriteAsOperand(raw_ostream &, const MachineBasicBlock*, bool t);
./include/llvm/CodeGen/MachineConstantPool.h:class raw_ostream;
./include/llvm/CodeGen/MachineConstantPool.h:  virtual void print(raw_ostream &O) const = 0;
./include/llvm/CodeGen/MachineConstantPool.h:inline raw_ostream &operator<<(raw_ostream &OS,
./include/llvm/CodeGen/MachineConstantPool.h:  void print(raw_ostream &OS) const;
./include/llvm/CodeGen/MachineDominators.h:  virtual void print(raw_ostream &OS, const Module*) const;
./include/llvm/CodeGen/VirtRegMap.h:  class raw_ostream;
./include/llvm/CodeGen/VirtRegMap.h:    void print(raw_ostream &OS, const Module* M = 0) const;
./include/llvm/CodeGen/VirtRegMap.h:  inline raw_ostream &operator<<(raw_ostream &OS, const VirtRegMap &VRM) {
./include/llvm/CodeGen/LiveInterval.h:  class raw_ostream;
./include/llvm/CodeGen/LiveInterval.h:    void print(raw_ostream &os) const;
./include/llvm/CodeGen/LiveInterval.h:  raw_ostream& operator<<(raw_ostream& os, const LiveRange &LR);
./include/llvm/CodeGen/LiveInterval.h:    void print(raw_ostream &OS) const;
./include/llvm/CodeGen/LiveInterval.h:  inline raw_ostream &operator<<(raw_ostream &OS, const LiveInterval &LI) {
./include/llvm/CodeGen/LiveInterval.h:    void print(raw_ostream&) const;
./include/llvm/CodeGen/LiveInterval.h:  inline raw_ostream &operator<<(raw_ostream &OS, const LiveRangeUpdater &X) {
./include/llvm/CodeGen/LiveIntervalAnalysis.h:    virtual void print(raw_ostream &O, const Module* = 0) const;
./include/llvm/CodeGen/LiveIntervalAnalysis.h:    void printInstrs(raw_ostream &O) const;
./include/llvm/CodeGen/MachineFrameInfo.h:class raw_ostream;
./include/llvm/CodeGen/MachineFrameInfo.h:  void print(const MachineFunction &MF, raw_ostream &OS) const;
./include/llvm/CodeGen/LiveStackAnalysis.h:    virtual void print(raw_ostream &O, const Module* = 0) const;
./include/llvm/CodeGen/EdgeBundles.h:raw_ostream &WriteGraph(raw_ostream &O, const EdgeBundles &G,
./include/llvm/CodeGen/MachineMemOperand.h:class raw_ostream;
./include/llvm/CodeGen/MachineMemOperand.h:raw_ostream &operator<<(raw_ostream &OS, const MachineMemOperand &MRO);
./include/llvm/CodeGen/MachineOperand.h:class raw_ostream;
./include/llvm/CodeGen/MachineOperand.h:  void print(raw_ostream &os, const TargetMachine *TM = 0) const;
./include/llvm/CodeGen/MachineOperand.h:inline raw_ostream &operator<<(raw_ostream &OS, const MachineOperand& MO) {
./include/llvm/CodeGen/Passes.h:  class raw_ostream;
./include/llvm/CodeGen/Passes.h:  createMachineFunctionPrinterPass(raw_ostream &OS,
./include/llvm/CodeGen/Passes.h:  FunctionPass *createGCInfoPrinter(raw_ostream &OS);
./include/llvm/CodeGen/ScheduleDAG.h:    void print(raw_ostream &O, const ScheduleDAG *G) const;
./include/llvm/CodeGen/MachineFunction.h:  void print(raw_ostream &OS, SlotIndexes* = 0) const;
./include/llvm/CodeGen/MachineFunctionPass.h:  virtual Pass *createPrinterPass(raw_ostream &O,
./include/llvm/CodeGen/PseudoSourceValue.h:  class raw_ostream;
./include/llvm/CodeGen/PseudoSourceValue.h:    virtual void printCustom(raw_ostream &O) const;
./include/llvm/CodeGen/PseudoSourceValue.h:    virtual void printCustom(raw_ostream &OS) const;
./include/llvm/CodeGen/SlotIndexes.h:    /// Print this index to the given raw_ostream.
./include/llvm/CodeGen/SlotIndexes.h:    void print(raw_ostream &os) const;
./include/llvm/CodeGen/SlotIndexes.h:  inline raw_ostream& operator<<(raw_ostream &os, SlotIndex li) {
./include/llvm/CodeGen/MachinePostDominators.h:  virtual void print(llvm::raw_ostream &OS, const Module *M = 0) const;
./include/llvm/CodeGen/SelectionDAGNodes.h:  void print_types(raw_ostream &OS, const SelectionDAG *G) const;
./include/llvm/CodeGen/SelectionDAGNodes.h:  void print_details(raw_ostream &OS, const SelectionDAG *G) const;
./include/llvm/CodeGen/SelectionDAGNodes.h:  void print(raw_ostream &OS, const SelectionDAG *G = 0) const;
./include/llvm/CodeGen/SelectionDAGNodes.h:  void printr(raw_ostream &OS, const SelectionDAG *G = 0) const;
./include/llvm/CodeGen/SelectionDAGNodes.h:  void printrFull(raw_ostream &O, const SelectionDAG *G = 0) const;
./include/llvm/CodeGen/SelectionDAGNodes.h:  void printrWithDepth(raw_ostream &O, const SelectionDAG *G = 0,
./include/llvm/CodeGen/MachineTraceMetrics.h:class raw_ostream;
./include/llvm/CodeGen/MachineTraceMetrics.h:    void print(raw_ostream&) const;
./include/llvm/CodeGen/MachineTraceMetrics.h:    void print(raw_ostream&) const;
./include/llvm/CodeGen/MachineTraceMetrics.h:    void print(raw_ostream&) const;
./include/llvm/CodeGen/MachineTraceMetrics.h:inline raw_ostream &operator<<(raw_ostream &OS,
./include/llvm/CodeGen/MachineTraceMetrics.h:inline raw_ostream &operator<<(raw_ostream &OS,
./include/llvm/CodeGen/ScheduleDFS.h:class raw_ostream;
./include/llvm/CodeGen/ScheduleDFS.h:  void print(raw_ostream &OS) const;
./include/llvm/CodeGen/ScheduleDFS.h:raw_ostream &operator<<(raw_ostream &OS, const ILPValue &Val);
./include/llvm/CodeGen/LiveIntervalUnion.h:  void print(raw_ostream &OS, const TargetRegisterInfo *TRI) const;
./include/llvm/CodeGen/MachineInstr.h:  void print(raw_ostream &OS, const TargetMachine *TM = 0,
./include/llvm/CodeGen/MachineInstr.h:inline raw_ostream& operator<<(raw_ostream &OS, const MachineInstr &MI) {
./include/llvm/CodeGen/MachineJumpTableInfo.h:class raw_ostream;
./include/llvm/CodeGen/MachineJumpTableInfo.h:  void print(raw_ostream &OS) const;
./include/llvm/CodeGen/MachineBranchProbabilityInfo.h:  raw_ostream &printEdgeProbability(raw_ostream &OS, MachineBasicBlock *Src,
./include/llvm/CodeGen/AsmPrinter.h:    void printOffset(int64_t Offset, raw_ostream &OS) const;
./include/llvm/CodeGen/AsmPrinter.h:    virtual void PrintSpecial(const MachineInstr *MI, raw_ostream &OS,
./include/llvm/CodeGen/AsmPrinter.h:                                 raw_ostream &OS);
./include/llvm/CodeGen/AsmPrinter.h:                                       raw_ostream &OS);
./include/llvm/ADT/Statistic.h:class raw_ostream;
./include/llvm/ADT/Statistic.h:void PrintStatistics(raw_ostream &OS);
./include/llvm/ADT/APInt.h:  class raw_ostream;
./include/llvm/ADT/APInt.h:  void print(raw_ostream &OS, bool isSigned) const;
./include/llvm/ADT/APInt.h:inline raw_ostream &operator<<(raw_ostream &OS, const APInt &I) {
./include/llvm/ADT/APSInt.h:inline raw_ostream &operator<<(raw_ostream &OS, const APSInt &I) {
./include/llvm/ADT/SparseBitVector.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/ADT/SparseBitVector.h:void dump(const SparseBitVector<ElementSize> &LHS, raw_ostream &out) {
./include/llvm/ADT/Twine.h:  class raw_ostream;
./include/llvm/ADT/Twine.h:    void printOneChild(raw_ostream &OS, Child Ptr, NodeKind Kind) const;
./include/llvm/ADT/Twine.h:    void printOneChildRepr(raw_ostream &OS, Child Ptr,
./include/llvm/ADT/Twine.h:    void print(raw_ostream &OS) const;
./include/llvm/ADT/Twine.h:    void printRepr(raw_ostream &OS) const;
./include/llvm/ADT/Twine.h:  inline raw_ostream &operator<<(raw_ostream &OS, const Twine &RHS) {
./include/llvm/IR/Type.h:class raw_ostream;
./include/llvm/IR/Type.h:  void print(raw_ostream &O) const;
./include/llvm/IR/Type.h:static inline raw_ostream &operator<<(raw_ostream &OS, Type &T) {
./include/llvm/IR/Module.h:  void print(raw_ostream &OS, AssemblyAnnotationWriter *AAW) const;
./include/llvm/IR/Module.h:/// An raw_ostream inserter for modules.
./include/llvm/IR/Module.h:inline raw_ostream &operator<<(raw_ostream &O, const Module &M) {
./include/llvm/IR/Value.h:class raw_ostream;
./include/llvm/IR/Value.h:  virtual void printCustom(raw_ostream &O) const;
./include/llvm/IR/Value.h:  void print(raw_ostream &O, AssemblyAnnotationWriter *AAW = 0) const;
./include/llvm/IR/Value.h:inline raw_ostream &operator<<(raw_ostream &OS, const Value &V) {
./include/llvm/IR/Metadata.h:  void print(raw_ostream &ROS, AssemblyAnnotationWriter *AAW = 0) const;
./include/llvm/Assembly/Writer.h:class raw_ostream;
./include/llvm/Assembly/Writer.h:void WriteAsOperand(raw_ostream &, const Value *, bool PrintTy = true,
./include/llvm/Assembly/AssemblyAnnotationWriter.h:class formatted_raw_ostream;
./include/llvm/Assembly/AssemblyAnnotationWriter.h:                                 formatted_raw_ostream &) {}
./include/llvm/Assembly/AssemblyAnnotationWriter.h:                                        formatted_raw_ostream &) {
./include/llvm/Assembly/AssemblyAnnotationWriter.h:                                      formatted_raw_ostream &) {
./include/llvm/Assembly/AssemblyAnnotationWriter.h:                                    formatted_raw_ostream &) {}
./include/llvm/Assembly/AssemblyAnnotationWriter.h:  virtual void printInfoComment(const Value &, formatted_raw_ostream &) {}
./include/llvm/Assembly/PrintModulePass.h:  class raw_ostream;
./include/llvm/Assembly/PrintModulePass.h:  /// module to the specified raw_ostream.
./include/llvm/Assembly/PrintModulePass.h:  ModulePass *createPrintModulePass(raw_ostream *OS,
./include/llvm/Assembly/PrintModulePass.h:  /// functions to the specified raw_ostream as they are processed.
./include/llvm/Assembly/PrintModulePass.h:                                        raw_ostream *OS, 
./include/llvm/Assembly/PrintModulePass.h:  /// BB to the specified raw_ostream.
./include/llvm/Assembly/PrintModulePass.h:  BasicBlockPass *createPrintBasicBlockPass(raw_ostream *OS,
./include/llvm/Object/MachO.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/Object/MachOObject.h:class raw_ostream;
./include/llvm/Object/MachOObject.h:  void print(raw_ostream &O) const;
./include/llvm/Object/MachOObject.h:  void printHeader(raw_ostream &O) const;
./include/llvm/Object/MachOObject.h:inline raw_ostream &operator<<(raw_ostream &OS, const MachOObject &V) {
./include/llvm/Object/RelocVisitor.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/Object/ELF.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/PassManagers.h:  virtual void print(raw_ostream &OS) const;
./include/llvm/DebugInfo/DIContext.h:class raw_ostream;
./include/llvm/DebugInfo/DIContext.h:  virtual void dump(raw_ostream &OS, DIDumpType DumpType = DIDT_All) = 0;
./include/llvm/Bitcode/ReaderWriter.h:  class raw_ostream;
./include/llvm/Bitcode/ReaderWriter.h:  void WriteBitcodeToFile(const Module *M, raw_ostream &Out);
./include/llvm/Bitcode/ReaderWriter.h:  ModulePass *createBitcodeWriterPass(raw_ostream &Str);
./include/llvm/Option/OptTable.h:class raw_ostream;
./include/llvm/Option/OptTable.h:  void PrintHelp(raw_ostream &OS, const char *Name,
./include/llvm/Pass.h:class raw_ostream;
./include/llvm/Pass.h:  virtual void print(raw_ostream &O, const Module *M) const;
./include/llvm/Pass.h:  virtual Pass *createPrinterPass(raw_ostream &O,
./include/llvm/Pass.h:  Pass *createPrinterPass(raw_ostream &O, const std::string &Banner) const;
./include/llvm/Pass.h:  Pass *createPrinterPass(raw_ostream &O, const std::string &Banner) const;
./include/llvm/Pass.h:  Pass *createPrinterPass(raw_ostream &O, const std::string &Banner) const;
./include/llvm/Analysis/RegionPass.h:  Pass *createPrinterPass(raw_ostream &O, const std::string &Banner) const;
./include/llvm/Analysis/LoopInfo.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/Analysis/LoopInfo.h:  void print(raw_ostream &OS, unsigned Depth = 0) const;
./include/llvm/Analysis/LoopInfo.h:raw_ostream& operator<<(raw_ostream &OS, const LoopBase<BlockT, LoopT> &Loop) {
./include/llvm/Analysis/LoopInfo.h:  void print(raw_ostream &OS) const;
./include/llvm/Analysis/LoopInfo.h:  virtual void print(raw_ostream &O, const Module* M = 0) const;
./include/llvm/Analysis/DependenceAnalysis.h:  class raw_ostream;
./include/llvm/Analysis/DependenceAnalysis.h:    void dump(raw_ostream &OS) const;
./include/llvm/Analysis/DependenceAnalysis.h:      void dump(raw_ostream &OS) const;
./include/llvm/Analysis/DependenceAnalysis.h:    void print(raw_ostream &, const Module * = 0) const;
./include/llvm/Analysis/SparsePropagation.h:  class raw_ostream;
./include/llvm/Analysis/SparsePropagation.h:  virtual void PrintValue(LatticeVal V, raw_ostream &OS);
./include/llvm/Analysis/SparsePropagation.h:  void Print(Function &F, raw_ostream &OS) const;
./include/llvm/Analysis/ProfileInfo.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/Analysis/ProfileInfo.h:  class raw_ostream;
./include/llvm/Analysis/ProfileInfo.h:  raw_ostream& operator<<(raw_ostream &O, std::pair<const BasicBlock *, const BasicBlock *> E);
./include/llvm/Analysis/ProfileInfo.h:  raw_ostream& operator<<(raw_ostream &O, std::pair<const MachineBasicBlock *, const MachineBasicBlock *> E);
./include/llvm/Analysis/ProfileInfo.h:  raw_ostream& operator<<(raw_ostream &O, const BasicBlock *BB);
./include/llvm/Analysis/ProfileInfo.h:  raw_ostream& operator<<(raw_ostream &O, const MachineBasicBlock *MBB);
./include/llvm/Analysis/ProfileInfo.h:  raw_ostream& operator<<(raw_ostream &O, const Function *F);
./include/llvm/Analysis/ProfileInfo.h:  raw_ostream& operator<<(raw_ostream &O, const MachineFunction *MF);
./include/llvm/Analysis/ScalarEvolution.h:    void print(raw_ostream &OS) const;
./include/llvm/Analysis/ScalarEvolution.h:  inline raw_ostream &operator<<(raw_ostream &OS, const SCEV &S) {
./include/llvm/Analysis/ScalarEvolution.h:    virtual void print(raw_ostream &OS, const Module* = 0) const;
./include/llvm/Analysis/Interval.h:class raw_ostream;
./include/llvm/Analysis/Interval.h:  void print(raw_ostream &O) const;
./include/llvm/Analysis/IVUsers.h:  void print(raw_ostream &OS, const Module* = 0) const;
./include/llvm/Analysis/DominanceFrontier.h:  virtual void print(raw_ostream &OS, const Module* = 0) const;
./include/llvm/Analysis/IntervalPartition.h:  virtual void print(raw_ostream &O, const Module* = 0) const;
./include/llvm/Analysis/LoopInfoImpl.h:void LoopBase<BlockT, LoopT>::print(raw_ostream &OS, unsigned Depth) const {
./include/llvm/Analysis/LoopInfoImpl.h:void LoopInfoBase<BlockT, LoopT>::print(raw_ostream &OS) const {
./include/llvm/Analysis/RegionInfo.h:class raw_ostream;
./include/llvm/Analysis/RegionInfo.h:inline raw_ostream &operator<<(raw_ostream &OS, const RegionNode &Node);
./include/llvm/Analysis/RegionInfo.h:  void print(raw_ostream& OS, bool printTree = true, unsigned level = 0,
./include/llvm/Analysis/RegionInfo.h:  virtual void print(raw_ostream &OS, const Module *) const;
./include/llvm/Analysis/RegionInfo.h:inline raw_ostream &operator<<(raw_ostream &OS, const RegionNode &Node) {
./include/llvm/Analysis/FindUsedTypes.h:  void print(raw_ostream &o, const Module *M) const;
./include/llvm/Analysis/BlockFrequencyInfo.h:  void print(raw_ostream &O, const Module *M) const;
./include/llvm/Analysis/CallGraph.h:  void print(raw_ostream &o, Module *) const;
./include/llvm/Analysis/CallGraph.h:  void print(raw_ostream &OS) const;
./include/llvm/Analysis/Trace.h:  class raw_ostream;
./include/llvm/Analysis/Trace.h:  void print(raw_ostream &O) const;
./include/llvm/Analysis/BranchProbabilityInfo.h:class raw_ostream;
./include/llvm/Analysis/BranchProbabilityInfo.h:  void print(raw_ostream &OS, const Module *M = 0) const;
./include/llvm/Analysis/BranchProbabilityInfo.h:  raw_ostream &printEdgeProbability(raw_ostream &OS, const BasicBlock *Src,
./include/llvm/Analysis/Dominators.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/Analysis/Dominators.h:inline raw_ostream &operator<<(raw_ostream &o,
./include/llvm/Analysis/Dominators.h:inline void PrintDomTree(const DomTreeNodeBase<NodeT> *N, raw_ostream &o,
./include/llvm/Analysis/Dominators.h:  void print(raw_ostream &o) const {
./include/llvm/Analysis/Dominators.h:  virtual void print(raw_ostream &OS, const Module* M= 0) const;
./include/llvm/Analysis/PostDominators.h:  virtual void print(raw_ostream &OS, const Module*) const;
./include/llvm/Analysis/ProfileDataLoader.h:raw_ostream& operator<<(raw_ostream &O, std::pair<const BasicBlock *,
./include/llvm/Analysis/LoopPass.h:  Pass *createPrinterPass(raw_ostream &O, const std::string &Banner) const;
./include/llvm/Analysis/BlockFrequencyImpl.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/Analysis/BlockFrequencyImpl.h:  void print(raw_ostream &OS) const {
./include/llvm/Analysis/RegionIterator.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/Analysis/CallGraphSCCPass.h:  Pass *createPrinterPass(raw_ostream &O, const std::string &Banner) const;
./include/llvm/Analysis/AliasSetTracker.h:  void print(raw_ostream &OS) const;
./include/llvm/Analysis/AliasSetTracker.h:inline raw_ostream& operator<<(raw_ostream &OS, const AliasSet &AS) {
./include/llvm/Analysis/AliasSetTracker.h:  void print(raw_ostream &OS) const;
./include/llvm/Analysis/AliasSetTracker.h:inline raw_ostream& operator<<(raw_ostream &OS, const AliasSetTracker &AST) {
./include/llvm/MC/MCObjectStreamer.h:class raw_ostream;
./include/llvm/MC/MCObjectStreamer.h:                   raw_ostream &_OS, MCCodeEmitter *_Emitter);
./include/llvm/MC/MCObjectStreamer.h:                   raw_ostream &_OS, MCCodeEmitter *_Emitter,
./include/llvm/MC/MCSectionCOFF.h:                                      raw_ostream &OS) const;
./include/llvm/MC/MCELFObjectWriter.h:                                      raw_ostream &OS, bool IsLittleEndian);
./include/llvm/MC/MCLabel.h:  class raw_ostream;
./include/llvm/MC/MCLabel.h:    void print(raw_ostream &OS) const;
./include/llvm/MC/MCLabel.h:  inline raw_ostream &operator<<(raw_ostream &OS, const MCLabel &Label) {
./include/llvm/MC/MCMachObjectWriter.h:  MachObjectWriter(MCMachObjectTargetWriter *MOTW, raw_ostream &_OS,
./include/llvm/MC/MCMachObjectWriter.h:                                       raw_ostream &OS, bool IsLittleEndian);
./include/llvm/MC/MCObjectWriter.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/MC/MCObjectWriter.h:  raw_ostream &OS;
./include/llvm/MC/MCObjectWriter.h:  MCObjectWriter(raw_ostream &_OS, bool _IsLittleEndian)
./include/llvm/MC/MCObjectWriter.h:  raw_ostream &getStream() { return OS; }
./include/llvm/MC/MCSection.h:  class raw_ostream;
./include/llvm/MC/MCSection.h:                                      raw_ostream &OS) const = 0;
./include/llvm/MC/MCSectionMachO.h:                                    raw_ostream &OS) const;
./include/llvm/MC/MCDwarf.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/MC/MCDwarf.h:    void print(raw_ostream &OS) const;
./include/llvm/MC/MCDwarf.h:  inline raw_ostream &operator<<(raw_ostream &OS, const MCDwarfFile &DwarfFile){
./include/llvm/MC/MCDwarf.h:    static void Encode(int64_t LineDelta, uint64_t AddrDelta, raw_ostream &OS);
./include/llvm/MC/MCDwarf.h:    static void EncodeAdvanceLoc(uint64_t AddrDelta, raw_ostream &OS);
./include/llvm/MC/MCAssembler.h:class raw_ostream;
./include/llvm/MC/MCAssembler.h:  raw_ostream &OS;
./include/llvm/MC/MCAssembler.h:              raw_ostream &OS);
./include/llvm/MC/SubtargetFeature.h:  class raw_ostream;
./include/llvm/MC/SubtargetFeature.h:  void print(raw_ostream &OS) const;
./include/llvm/MC/MCValue.h:class raw_ostream;
./include/llvm/MC/MCValue.h:  void print(raw_ostream &OS, const MCAsmInfo *MAI) const;
./include/llvm/MC/MCELFStreamer.h:class raw_ostream;
./include/llvm/MC/MCELFStreamer.h:                raw_ostream &OS, MCCodeEmitter *Emitter)
./include/llvm/MC/MCELFStreamer.h:  MCELFStreamer(MCContext &Context, MCAsmBackend &TAB, raw_ostream &OS,
./include/llvm/MC/MCELFStreamer.h:  MCELFStreamer(MCContext &Context, MCAsmBackend &TAB, raw_ostream &OS,
./include/llvm/MC/MCCodeEmitter.h:class raw_ostream;
./include/llvm/MC/MCCodeEmitter.h:  virtual void EncodeInstruction(const MCInst &Inst, raw_ostream &OS,
./include/llvm/MC/MCExpr.h:class raw_ostream;
./include/llvm/MC/MCExpr.h:  void print(raw_ostream &OS) const;
./include/llvm/MC/MCExpr.h:inline raw_ostream &operator<<(raw_ostream &OS, const MCExpr &E) {
./include/llvm/MC/MCExpr.h:  virtual void PrintImpl(raw_ostream &OS) const = 0;
./include/llvm/MC/MCWinCOFFObjectWriter.h:  class raw_ostream;
./include/llvm/MC/MCWinCOFFObjectWriter.h:                                            raw_ostream &OS);
./include/llvm/MC/MCAsmBackend.h:class raw_ostream;
./include/llvm/MC/MCAsmBackend.h:  virtual MCObjectWriter *createObjectWriter(raw_ostream &OS) const = 0;
./include/llvm/MC/MCInst.h:class raw_ostream;
./include/llvm/MC/MCInst.h:  void print(raw_ostream &OS, const MCAsmInfo *MAI) const;
./include/llvm/MC/MCInst.h:  void print(raw_ostream &OS, const MCAsmInfo *MAI) const;
./include/llvm/MC/MCInst.h:  void dump_pretty(raw_ostream &OS, const MCAsmInfo *MAI = 0,
./include/llvm/MC/MCInst.h:inline raw_ostream& operator<<(raw_ostream &OS, const MCOperand &MO) {
./include/llvm/MC/MCInst.h:inline raw_ostream& operator<<(raw_ostream &OS, const MCInst &MI) {
./include/llvm/MC/MCStreamer.h:  class raw_ostream;
./include/llvm/MC/MCStreamer.h:  class formatted_raw_ostream;
./include/llvm/MC/MCStreamer.h:    /// GetCommentOS - Return a raw_ostream that comments can be written to.
./include/llvm/MC/MCStreamer.h:    virtual raw_ostream &GetCommentOS();
./include/llvm/MC/MCStreamer.h:  MCStreamer *createAsmStreamer(MCContext &Ctx, formatted_raw_ostream &OS,
./include/llvm/MC/MCStreamer.h:                                  raw_ostream &OS, MCCodeEmitter *CE,
./include/llvm/MC/MCStreamer.h:                                    MCCodeEmitter &CE, raw_ostream &OS,
./include/llvm/MC/MCStreamer.h:                                raw_ostream &OS, MCCodeEmitter *CE,
./include/llvm/MC/MCStreamer.h:                                 raw_ostream &OS, MCCodeEmitter *CE);
./include/llvm/MC/MCInstPrinter.h:class raw_ostream;
./include/llvm/MC/MCInstPrinter.h:  raw_ostream *CommentStream;
./include/llvm/MC/MCInstPrinter.h:  void printAnnotation(raw_ostream &OS, StringRef Annot);
./include/llvm/MC/MCInstPrinter.h:  void setCommentStream(raw_ostream &OS) { CommentStream = &OS; }
./include/llvm/MC/MCInstPrinter.h:  /// printInst - Print the specified MCInst to the specified raw_ostream.
./include/llvm/MC/MCInstPrinter.h:  virtual void printInst(const MCInst *MI, raw_ostream &OS,
./include/llvm/MC/MCInstPrinter.h:  virtual void printRegName(raw_ostream &OS, unsigned RegNo) const;
./include/llvm/MC/MCParser/MCParsedAsmOperand.h:class raw_ostream;
./include/llvm/MC/MCParser/MCParsedAsmOperand.h:  virtual void print(raw_ostream &OS) const = 0;
./include/llvm/MC/MCParser/MCParsedAsmOperand.h:inline raw_ostream& operator<<(raw_ostream &OS, const MCParsedAsmOperand &MO) {
./include/llvm/MC/MCContext.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/MC/MCContext.h:    raw_ostream *SecureLog;
./include/llvm/MC/MCContext.h:    raw_ostream *getSecureLog() { return SecureLog; }
./include/llvm/MC/MCContext.h:    void setSecureLog(raw_ostream *Value) {
./include/llvm/MC/MCDisassembler.h:class raw_ostream;
./include/llvm/MC/MCDisassembler.h:                                       raw_ostream &vStream,
./include/llvm/MC/MCDisassembler.h:                                       raw_ostream &cStream) const = 0;
./include/llvm/MC/MCDisassembler.h:  mutable raw_ostream *CommentStream;
./include/llvm/MC/MCSectionELF.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/MC/MCSectionELF.h:                            raw_ostream &OS) const;
./include/llvm/MC/MCSymbol.h:  class raw_ostream;
./include/llvm/MC/MCSymbol.h:    void print(raw_ostream &OS) const;
./include/llvm/MC/MCSymbol.h:  inline raw_ostream &operator<<(raw_ostream &OS, const MCSymbol &Sym) {
./include/llvm/TableGen/Record.h:#include "llvm/Support/raw_ostream.h"
./include/llvm/TableGen/Record.h:class raw_ostream;
./include/llvm/TableGen/Record.h:  void print(raw_ostream &OS) const { OS << getAsString(); }
./include/llvm/TableGen/Record.h:inline raw_ostream &operator<<(raw_ostream &OS, const RecTy &Ty) {
./include/llvm/TableGen/Record.h:  void print(raw_ostream &OS) const { OS << getAsString(); }
./include/llvm/TableGen/Record.h:inline raw_ostream &operator<<(raw_ostream &OS, const Init &I) {
./include/llvm/TableGen/Record.h:  void print(raw_ostream &OS, bool PrintSem = true) const;
./include/llvm/TableGen/Record.h:inline raw_ostream &operator<<(raw_ostream &OS, const RecordVal &RV) {
./include/llvm/TableGen/Record.h:raw_ostream &operator<<(raw_ostream &OS, const Record &R);
./include/llvm/TableGen/Record.h:raw_ostream &operator<<(raw_ostream &OS, const RecordKeeper &RK);
./include/llvm/TableGen/TableGenBackend.h:class raw_ostream;
./include/llvm/TableGen/TableGenBackend.h:/// raw_ostream.
./include/llvm/TableGen/TableGenBackend.h:void emitSourceFileHeader(StringRef Desc, raw_ostream &OS);
./include/llvm/TableGen/Main.h:class raw_ostream;
./include/llvm/TableGen/Main.h:typedef bool TableGenMainFn(raw_ostream &OS, RecordKeeper &Records);
./include/llvm/TableGen/StringMatcher.h:  class raw_ostream;
./include/llvm/TableGen/StringMatcher.h:  raw_ostream &OS;
./include/llvm/TableGen/StringMatcher.h:                const std::vector<StringPair> &matches, raw_ostream &os)
./include/llvm/DebugInfo.h:  class raw_ostream;
./include/llvm/DebugInfo.h:    void print(raw_ostream &OS) const;
./include/llvm/DebugInfo.h:    void printInternal(raw_ostream &OS) const;
./include/llvm/DebugInfo.h:    void printInternal(raw_ostream &OS) const;
./include/llvm/DebugInfo.h:    void printInternal(raw_ostream &OS) const;
./include/llvm/DebugInfo.h:    void printInternal(raw_ostream &OS) const {} // FIXME: Output something?
./include/llvm/DebugInfo.h:    void printInternal(raw_ostream &OS) const;
./include/llvm/DebugInfo.h:    void printInternal(raw_ostream &OS) const;
./include/llvm/DebugInfo.h:    void printInternal(raw_ostream &OS) const;
./include/llvm/DebugInfo.h:    void printInternal(raw_ostream &OS) const;
./include/llvm/DebugInfo.h:    void printInternal(raw_ostream &OS) const;
./include/llvm/DebugInfo.h:    void printInternal(raw_ostream &OS) const;
./include/llvm/DebugInfo.h:    void printInternal(raw_ostream &OS) const;
./include/llvm/DebugInfo.h:    void printExtendedName(raw_ostream &OS) const;
./include/llvm/DebugInfo.h:    void printInternal(raw_ostream &OS) const;
./include/llvm/Target/TargetMachine.h:class formatted_raw_ostream;
./include/llvm/Target/TargetMachine.h:class raw_ostream;
./include/llvm/Target/TargetMachine.h:                                   formatted_raw_ostream &,
./include/llvm/Target/TargetMachine.h:                                 raw_ostream &,
./include/llvm/Target/TargetMachine.h:                                   formatted_raw_ostream &Out,
./include/llvm/Target/TargetMachine.h:                                 raw_ostream &OS,
./include/llvm/Target/TargetRegisterInfo.h:class raw_ostream;
./include/llvm/Target/TargetRegisterInfo.h:/// PrintReg - Helper class for printing registers on a raw_ostream.
./include/llvm/Target/TargetRegisterInfo.h:  void print(raw_ostream&) const;
./include/llvm/Target/TargetRegisterInfo.h:static inline raw_ostream &operator<<(raw_ostream &OS, const PrintReg &PR) {
./include/llvm/Target/TargetRegisterInfo.h:/// PrintRegUnit - Helper class for printing register units on a raw_ostream.
./include/llvm/Target/TargetRegisterInfo.h:  void print(raw_ostream&) const;
./include/llvm/Target/TargetRegisterInfo.h:static inline raw_ostream &operator<<(raw_ostream &OS, const PrintRegUnit &PR) {
./utils/unittest/googletest/include/gtest/internal/gtest-internal.h:// std::ostreams and LLVM's raw_ostreams, we define a special
./utils/unittest/googletest/include/gtest/internal/gtest-internal.h:// std::ostream with an implicit conversion to raw_ostream& and stream
./utils/unittest/googletest/include/gtest/internal/gtest-internal.h:// but still find raw_ostream& overloads.
./utils/unittest/googletest/include/gtest/internal/gtest-internal.h:  operator raw_ostream&() { return ros_; }
./utils/unittest/googletest/Debug+Asserts/gtest-port.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/unittest/googletest/Debug+Asserts/gtest-port.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/unittest/googletest/Debug+Asserts/gtest.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/unittest/googletest/Debug+Asserts/gtest.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/unittest/googletest/Debug+Asserts/gtest-death-test.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/unittest/googletest/Debug+Asserts/gtest-death-test.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/unittest/googletest/Debug+Asserts/gtest-typed-test.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/unittest/googletest/Debug+Asserts/gtest-typed-test.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/unittest/googletest/Debug+Asserts/gtest-printers.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/unittest/googletest/Debug+Asserts/gtest-printers.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/unittest/googletest/Debug+Asserts/gtest-test-part.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/unittest/googletest/Debug+Asserts/gtest-test-part.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/unittest/UnitTestMain/Debug+Asserts/TestMain.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/unittest/UnitTestMain/Debug+Asserts/TestMain.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/yaml-bench/YAMLBench.cpp:#include "llvm/Support/raw_ostream.h"
./utils/yaml-bench/YAMLBench.cpp:static raw_ostream &operator <<(raw_ostream &os, const indent &in) {
./utils/fpcmp/fpcmp.cpp:#include "llvm/Support/raw_ostream.h"
./utils/fpcmp/Debug+Asserts/fpcmp.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./utils/fpcmp/Debug+Asserts/fpcmp.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/obj2yaml/obj2yaml.cpp:llvm::raw_ostream &writeHexStream(llvm::raw_ostream &Out, 
./utils/obj2yaml/obj2yaml.cpp:llvm::raw_ostream &writeHexNumber(llvm::raw_ostream &Out, unsigned long long N) {
./utils/obj2yaml/obj2yaml.h:#include "llvm/Support/raw_ostream.h"
./utils/obj2yaml/obj2yaml.h:  llvm::raw_ostream &writeHexStream
./utils/obj2yaml/obj2yaml.h:    (llvm::raw_ostream &Out, const llvm::ArrayRef<uint8_t> arr);
./utils/obj2yaml/obj2yaml.h:  llvm::raw_ostream &writeHexNumber
./utils/obj2yaml/obj2yaml.h:    (llvm::raw_ostream &Out, unsigned long long N);
./utils/obj2yaml/obj2yaml.h:llvm::error_code coff2yaml(llvm::raw_ostream &Out, llvm::MemoryBuffer *TheObj);
./utils/obj2yaml/coff2yaml.cpp:static llvm::raw_ostream &writeName(llvm::raw_ostream &Out, 
./utils/obj2yaml/coff2yaml.cpp:static llvm::raw_ostream &writeBitMask(llvm::raw_ostream &Out, 
./utils/obj2yaml/coff2yaml.cpp:static llvm::raw_ostream &yamlCOFFHeader(
./utils/obj2yaml/coff2yaml.cpp:          const llvm::object::coff_file_header *Header,llvm::raw_ostream &Out) {
./utils/obj2yaml/coff2yaml.cpp:static llvm::raw_ostream &yamlCOFFSections(llvm::object::COFFObjectFile &Obj, 
./utils/obj2yaml/coff2yaml.cpp:                            std::size_t NumSections, llvm::raw_ostream &Out) {
./utils/obj2yaml/coff2yaml.cpp:static llvm::raw_ostream& yamlCOFFSymbols(llvm::object::COFFObjectFile &Obj, 
./utils/obj2yaml/coff2yaml.cpp:                              std::size_t NumSymbols, llvm::raw_ostream &Out) {
./utils/obj2yaml/coff2yaml.cpp:llvm::error_code coff2yaml(llvm::raw_ostream &Out, llvm::MemoryBuffer *TheObj) {
./utils/not/not.cpp:#include "llvm/Support/raw_ostream.h"
./utils/not/Debug+Asserts/not.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./utils/not/Debug+Asserts/not.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/yaml2obj/yaml2obj.cpp:#include "llvm/Support/raw_ostream.h"
./utils/yaml2obj/yaml2obj.cpp:raw_ostream &operator <<( raw_ostream &OS
./utils/yaml2obj/yaml2obj.cpp:void writeCOFF(COFFParser &CP, raw_ostream &OS) {
./utils/yaml2obj/Debug+Asserts/yaml2obj.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/yaml2obj/Debug+Asserts/yaml2obj.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/KillTheDoctor/KillTheDoctor.cpp:#include "llvm/Support/raw_ostream.h"
./utils/FileUpdate/Debug+Asserts/FileUpdate.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/FileUpdate/Debug+Asserts/FileUpdate.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/FileCheck/Debug+Asserts/FileCheck.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/FileCheck/Debug+Asserts/FileCheck.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/FileCheck/FileCheck.cpp:#include "llvm/Support/raw_ostream.h"
./utils/TableGen/SequenceToOffsetTable.h:#include "llvm/Support/raw_ostream.h"
./utils/TableGen/SequenceToOffsetTable.h:  void emit(raw_ostream &OS,
./utils/TableGen/SequenceToOffsetTable.h:            void (*Print)(raw_ostream&, ElemT),
./utils/TableGen/SequenceToOffsetTable.h:static inline void printChar(raw_ostream &OS, char C) {
./utils/TableGen/FastISelEmitter.cpp:    void printManglingSuffix(raw_ostream &OS, ImmPredicateSet &ImmPredicates,
./utils/TableGen/FastISelEmitter.cpp:  void emitImmediatePredicate(raw_ostream &OS, ImmPredicateSet &ImmPredicates) {
./utils/TableGen/FastISelEmitter.cpp:  void PrintParameters(raw_ostream &OS) const {
./utils/TableGen/FastISelEmitter.cpp:  void PrintArguments(raw_ostream &OS,
./utils/TableGen/FastISelEmitter.cpp:  void PrintArguments(raw_ostream &OS) const {
./utils/TableGen/FastISelEmitter.cpp:  void PrintManglingSuffix(raw_ostream &OS, const std::vector<std::string> &PR,
./utils/TableGen/FastISelEmitter.cpp:  void PrintManglingSuffix(raw_ostream &OS, ImmPredicateSet &ImmPredicates,
./utils/TableGen/FastISelEmitter.cpp:  void printImmediatePredicates(raw_ostream &OS);
./utils/TableGen/FastISelEmitter.cpp:  void printFunctionDefinitions(raw_ostream &OS);
./utils/TableGen/FastISelEmitter.cpp:void FastISelMap::printImmediatePredicates(raw_ostream &OS) {
./utils/TableGen/FastISelEmitter.cpp:void FastISelMap::printFunctionDefinitions(raw_ostream &OS) {
./utils/TableGen/FastISelEmitter.cpp:void EmitFastISel(RecordKeeper &RK, raw_ostream &OS) {
./utils/TableGen/X86DisassemblerTables.cpp:void DisassemblerTables::emitOneID(raw_ostream &o, unsigned &i, InstrUID id,
./utils/TableGen/X86DisassemblerTables.cpp:static void emitEmptyTable(raw_ostream &o, unsigned &i) {
./utils/TableGen/X86DisassemblerTables.cpp:void DisassemblerTables::emitModRMDecision(raw_ostream &o1, raw_ostream &o2,
./utils/TableGen/X86DisassemblerTables.cpp:void DisassemblerTables::emitOpcodeDecision(raw_ostream &o1, raw_ostream &o2,
./utils/TableGen/X86DisassemblerTables.cpp:void DisassemblerTables::emitContextDecision(raw_ostream &o1, raw_ostream &o2,
./utils/TableGen/X86DisassemblerTables.cpp:void DisassemblerTables::emitInstructionInfo(raw_ostream &o,
./utils/TableGen/X86DisassemblerTables.cpp:void DisassemblerTables::emitContextTable(raw_ostream &o, unsigned &i) const {
./utils/TableGen/X86DisassemblerTables.cpp:void DisassemblerTables::emitContextDecisions(raw_ostream &o1, raw_ostream &o2,
./utils/TableGen/X86DisassemblerTables.cpp:void DisassemblerTables::emit(raw_ostream &o) const {
./utils/TableGen/CodeGenDAGPatterns.cpp:void TreePatternNode::print(raw_ostream &OS) const {
./utils/TableGen/CodeGenDAGPatterns.cpp:void TreePattern::print(raw_ostream &OS) const {
./utils/TableGen/DAGISelEmitter.cpp:  void run(raw_ostream &OS);
./utils/TableGen/DAGISelEmitter.cpp:void DAGISelEmitter::run(raw_ostream &OS) {
./utils/TableGen/DAGISelEmitter.cpp:void EmitDAGISel(RecordKeeper &RK, raw_ostream &OS) {
./utils/TableGen/RegisterInfoEmitter.cpp:  void runEnums(raw_ostream &o, CodeGenTarget &Target, CodeGenRegBank &Bank);
./utils/TableGen/RegisterInfoEmitter.cpp:  void runMCDesc(raw_ostream &o, CodeGenTarget &Target, CodeGenRegBank &Bank);
./utils/TableGen/RegisterInfoEmitter.cpp:  void runTargetHeader(raw_ostream &o, CodeGenTarget &Target,
./utils/TableGen/RegisterInfoEmitter.cpp:  void runTargetDesc(raw_ostream &o, CodeGenTarget &Target,
./utils/TableGen/RegisterInfoEmitter.cpp:  void run(raw_ostream &o);
./utils/TableGen/RegisterInfoEmitter.cpp:  void EmitRegMapping(raw_ostream &o,
./utils/TableGen/RegisterInfoEmitter.cpp:  void EmitRegMappingTables(raw_ostream &o,
./utils/TableGen/RegisterInfoEmitter.cpp:  void EmitRegClasses(raw_ostream &OS, CodeGenTarget &Target);
./utils/TableGen/RegisterInfoEmitter.cpp:  void EmitRegUnitPressure(raw_ostream &OS, const CodeGenRegBank &RegBank,
./utils/TableGen/RegisterInfoEmitter.cpp:  void emitComposeSubRegIndices(raw_ostream &OS, CodeGenRegBank &RegBank,
./utils/TableGen/RegisterInfoEmitter.cpp:void RegisterInfoEmitter::runEnums(raw_ostream &OS,
./utils/TableGen/RegisterInfoEmitter.cpp:EmitRegUnitPressure(raw_ostream &OS, const CodeGenRegBank &RegBank,
./utils/TableGen/RegisterInfoEmitter.cpp:RegisterInfoEmitter::EmitRegMappingTables(raw_ostream &OS,
./utils/TableGen/RegisterInfoEmitter.cpp:RegisterInfoEmitter::EmitRegMapping(raw_ostream &OS,
./utils/TableGen/RegisterInfoEmitter.cpp:static void printBitVectorAsHex(raw_ostream &OS,
./utils/TableGen/RegisterInfoEmitter.cpp:  void print(raw_ostream &OS) {
./utils/TableGen/RegisterInfoEmitter.cpp:static void printSimpleValueType(raw_ostream &OS, MVT::SimpleValueType VT) {
./utils/TableGen/RegisterInfoEmitter.cpp:static void printSubRegIndex(raw_ostream &OS, const CodeGenSubRegIndex *Idx) {
./utils/TableGen/RegisterInfoEmitter.cpp:static void printDiff16(raw_ostream &OS, uint16_t Val) {
./utils/TableGen/RegisterInfoEmitter.cpp:RegisterInfoEmitter::emitComposeSubRegIndices(raw_ostream &OS,
./utils/TableGen/RegisterInfoEmitter.cpp:RegisterInfoEmitter::runMCDesc(raw_ostream &OS, CodeGenTarget &Target,
./utils/TableGen/RegisterInfoEmitter.cpp:RegisterInfoEmitter::runTargetHeader(raw_ostream &OS, CodeGenTarget &Target,
./utils/TableGen/RegisterInfoEmitter.cpp:RegisterInfoEmitter::runTargetDesc(raw_ostream &OS, CodeGenTarget &Target,
./utils/TableGen/RegisterInfoEmitter.cpp:void RegisterInfoEmitter::run(raw_ostream &OS) {
./utils/TableGen/RegisterInfoEmitter.cpp:void EmitRegisterInfo(RecordKeeper &RK, raw_ostream &OS) {
./utils/TableGen/StringToOffsetTable.h:#include "llvm/Support/raw_ostream.h"
./utils/TableGen/StringToOffsetTable.h:  void EmitString(raw_ostream &O) {
./utils/TableGen/SubtargetEmitter.cpp:  void Enumeration(raw_ostream &OS, const char *ClassName, bool isBits);
./utils/TableGen/SubtargetEmitter.cpp:  unsigned FeatureKeyValues(raw_ostream &OS);
./utils/TableGen/SubtargetEmitter.cpp:  unsigned CPUKeyValues(raw_ostream &OS);
./utils/TableGen/SubtargetEmitter.cpp:  void EmitStageAndOperandCycleData(raw_ostream &OS,
./utils/TableGen/SubtargetEmitter.cpp:  void EmitItineraries(raw_ostream &OS,
./utils/TableGen/SubtargetEmitter.cpp:  void EmitProcessorProp(raw_ostream &OS, const Record *R, const char *Name,
./utils/TableGen/SubtargetEmitter.cpp:                              raw_ostream &OS);
./utils/TableGen/SubtargetEmitter.cpp:  void EmitSchedClassTables(SchedClassTables &SchedTables, raw_ostream &OS);
./utils/TableGen/SubtargetEmitter.cpp:  void EmitProcessorModels(raw_ostream &OS);
./utils/TableGen/SubtargetEmitter.cpp:  void EmitProcessorLookup(raw_ostream &OS);
./utils/TableGen/SubtargetEmitter.cpp:  void EmitSchedModelHelpers(std::string ClassName, raw_ostream &OS);
./utils/TableGen/SubtargetEmitter.cpp:  void EmitSchedModel(raw_ostream &OS);
./utils/TableGen/SubtargetEmitter.cpp:  void ParseFeaturesFunction(raw_ostream &OS, unsigned NumFeatures,
./utils/TableGen/SubtargetEmitter.cpp:  void run(raw_ostream &o);
./utils/TableGen/SubtargetEmitter.cpp:void SubtargetEmitter::Enumeration(raw_ostream &OS,
./utils/TableGen/SubtargetEmitter.cpp:unsigned SubtargetEmitter::FeatureKeyValues(raw_ostream &OS) {
./utils/TableGen/SubtargetEmitter.cpp:unsigned SubtargetEmitter::CPUKeyValues(raw_ostream &OS) {
./utils/TableGen/SubtargetEmitter.cpp:EmitStageAndOperandCycleData(raw_ostream &OS,
./utils/TableGen/SubtargetEmitter.cpp:EmitItineraries(raw_ostream &OS,
./utils/TableGen/SubtargetEmitter.cpp:void SubtargetEmitter::EmitProcessorProp(raw_ostream &OS, const Record *R,
./utils/TableGen/SubtargetEmitter.cpp:                                              raw_ostream &OS) {
./utils/TableGen/SubtargetEmitter.cpp:                                            raw_ostream &OS) {
./utils/TableGen/SubtargetEmitter.cpp:void SubtargetEmitter::EmitProcessorModels(raw_ostream &OS) {
./utils/TableGen/SubtargetEmitter.cpp:void SubtargetEmitter::EmitProcessorLookup(raw_ostream &OS) {
./utils/TableGen/SubtargetEmitter.cpp:void SubtargetEmitter::EmitSchedModel(raw_ostream &OS) {
./utils/TableGen/SubtargetEmitter.cpp:                                             raw_ostream &OS) {
./utils/TableGen/SubtargetEmitter.cpp:void SubtargetEmitter::ParseFeaturesFunction(raw_ostream &OS,
./utils/TableGen/SubtargetEmitter.cpp:void SubtargetEmitter::run(raw_ostream &OS) {
./utils/TableGen/SubtargetEmitter.cpp:  OS << "#include \"llvm/Support/raw_ostream.h\"\n";
./utils/TableGen/SubtargetEmitter.cpp:void EmitSubtarget(RecordKeeper &RK, raw_ostream &OS) {
./utils/TableGen/DAGISelMatcher.cpp:#include "llvm/Support/raw_ostream.h"
./utils/TableGen/DAGISelMatcher.cpp:void Matcher::print(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void Matcher::printOne(raw_ostream &OS) const {
./utils/TableGen/DAGISelMatcher.cpp:void ScopeMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void RecordMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void RecordChildMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void RecordMemRefMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void CaptureGlueInputMatcher::printImpl(raw_ostream &OS, unsigned indent) const{
./utils/TableGen/DAGISelMatcher.cpp:void MoveChildMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void MoveParentMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void CheckSameMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void CheckPredicateMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void CheckOpcodeMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void SwitchOpcodeMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void CheckTypeMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void SwitchTypeMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void CheckChildTypeMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void CheckIntegerMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void CheckCondCodeMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void CheckValueTypeMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void CheckComplexPatMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void CheckAndImmMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void CheckOrImmMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void CheckFoldableChainNodeMatcher::printImpl(raw_ostream &OS,
./utils/TableGen/DAGISelMatcher.cpp:void EmitIntegerMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void EmitRegisterMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void EmitCopyToRegMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void EmitNodeXFormMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void EmitNodeMatcherCommon::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void MarkGlueResultsMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/DAGISelMatcher.cpp:void CompleteMatchMatcher::printImpl(raw_ostream &OS, unsigned indent) const {
./utils/TableGen/IntrinsicEmitter.cpp:  void run(raw_ostream &OS);
./utils/TableGen/IntrinsicEmitter.cpp:  void EmitPrefix(raw_ostream &OS);
./utils/TableGen/IntrinsicEmitter.cpp:                    raw_ostream &OS);
./utils/TableGen/IntrinsicEmitter.cpp:                            raw_ostream &OS);
./utils/TableGen/IntrinsicEmitter.cpp:                                raw_ostream &OS);
./utils/TableGen/IntrinsicEmitter.cpp:                                    raw_ostream &OS);
./utils/TableGen/IntrinsicEmitter.cpp:                    raw_ostream &OS);
./utils/TableGen/IntrinsicEmitter.cpp:                     raw_ostream &OS);
./utils/TableGen/IntrinsicEmitter.cpp:                      raw_ostream &OS);
./utils/TableGen/IntrinsicEmitter.cpp:                          raw_ostream &OS);
./utils/TableGen/IntrinsicEmitter.cpp:                                    raw_ostream &OS);
./utils/TableGen/IntrinsicEmitter.cpp:  void EmitSuffix(raw_ostream &OS);
./utils/TableGen/IntrinsicEmitter.cpp:void IntrinsicEmitter::run(raw_ostream &OS) {
./utils/TableGen/IntrinsicEmitter.cpp:void IntrinsicEmitter::EmitPrefix(raw_ostream &OS) {
./utils/TableGen/IntrinsicEmitter.cpp:void IntrinsicEmitter::EmitSuffix(raw_ostream &OS) {
./utils/TableGen/IntrinsicEmitter.cpp:                                    raw_ostream &OS) {
./utils/TableGen/IntrinsicEmitter.cpp:                     raw_ostream &OS) {
./utils/TableGen/IntrinsicEmitter.cpp:                         raw_ostream &OS) {
./utils/TableGen/IntrinsicEmitter.cpp:                         raw_ostream &OS) {
./utils/TableGen/IntrinsicEmitter.cpp:static void printIITEntry(raw_ostream &OS, unsigned char X) {
./utils/TableGen/IntrinsicEmitter.cpp:                                     raw_ostream &OS) {
./utils/TableGen/IntrinsicEmitter.cpp:EmitAttributes(const std::vector<CodeGenIntrinsic> &Ints, raw_ostream &OS) {
./utils/TableGen/IntrinsicEmitter.cpp:EmitModRefBehavior(const std::vector<CodeGenIntrinsic> &Ints, raw_ostream &OS){
./utils/TableGen/IntrinsicEmitter.cpp:                               raw_ostream &OS) {
./utils/TableGen/IntrinsicEmitter.cpp:                             raw_ostream &OS) {
./utils/TableGen/IntrinsicEmitter.cpp:void EmitIntrinsics(RecordKeeper &RK, raw_ostream &OS, bool TargetOnly = false) {
./utils/TableGen/PseudoLoweringEmitter.cpp:  void emitLoweringEmitter(raw_ostream &o);
./utils/TableGen/PseudoLoweringEmitter.cpp:  void run(raw_ostream &o);
./utils/TableGen/PseudoLoweringEmitter.cpp:void PseudoLoweringEmitter::emitLoweringEmitter(raw_ostream &o) {
./utils/TableGen/PseudoLoweringEmitter.cpp:void PseudoLoweringEmitter::run(raw_ostream &o) {
./utils/TableGen/PseudoLoweringEmitter.cpp:void EmitPseudoLowering(RecordKeeper &RK, raw_ostream &OS) {
./utils/TableGen/TableGenBackends.h://    EmitFoo(RecordKeeper &RK, raw_ostream &OS /*, anything else you need */ )
./utils/TableGen/TableGenBackends.h:// involve generating C++ code to the provided raw_ostream.
./utils/TableGen/TableGenBackends.h:class raw_ostream;
./utils/TableGen/TableGenBackends.h:void EmitIntrinsics(RecordKeeper &RK, raw_ostream &OS, bool TargetOnly = false);
./utils/TableGen/TableGenBackends.h:void EmitAsmMatcher(RecordKeeper &RK, raw_ostream &OS);
./utils/TableGen/TableGenBackends.h:void EmitAsmWriter(RecordKeeper &RK, raw_ostream &OS);
./utils/TableGen/TableGenBackends.h:void EmitCallingConv(RecordKeeper &RK, raw_ostream &OS);
./utils/TableGen/TableGenBackends.h:void EmitCodeEmitter(RecordKeeper &RK, raw_ostream &OS);
./utils/TableGen/TableGenBackends.h:void EmitDAGISel(RecordKeeper &RK, raw_ostream &OS);
./utils/TableGen/TableGenBackends.h:void EmitDFAPacketizer(RecordKeeper &RK, raw_ostream &OS);
./utils/TableGen/TableGenBackends.h:void EmitDisassembler(RecordKeeper &RK, raw_ostream &OS);
./utils/TableGen/TableGenBackends.h:void EmitFastISel(RecordKeeper &RK, raw_ostream &OS);
./utils/TableGen/TableGenBackends.h:void EmitInstrInfo(RecordKeeper &RK, raw_ostream &OS);
./utils/TableGen/TableGenBackends.h:void EmitPseudoLowering(RecordKeeper &RK, raw_ostream &OS);
./utils/TableGen/TableGenBackends.h:void EmitRegisterInfo(RecordKeeper &RK, raw_ostream &OS);
./utils/TableGen/TableGenBackends.h:void EmitSubtarget(RecordKeeper &RK, raw_ostream &OS);
./utils/TableGen/TableGenBackends.h:void EmitMapTable(RecordKeeper &RK, raw_ostream &OS);
./utils/TableGen/TableGenBackends.h:void EmitOptParser(RecordKeeper &RK, raw_ostream &OS);
./utils/TableGen/AsmMatcherEmitter.cpp:  void run(raw_ostream &o);
./utils/TableGen/AsmMatcherEmitter.cpp:                             raw_ostream &OS) {
./utils/TableGen/AsmMatcherEmitter.cpp:                                      raw_ostream &OS) {
./utils/TableGen/AsmMatcherEmitter.cpp:                                     raw_ostream &OS) {
./utils/TableGen/AsmMatcherEmitter.cpp:                           raw_ostream &OS) {
./utils/TableGen/AsmMatcherEmitter.cpp:                                 raw_ostream &OS) {
./utils/TableGen/AsmMatcherEmitter.cpp:                                  raw_ostream &OS) {
./utils/TableGen/AsmMatcherEmitter.cpp:                                                raw_ostream &OS) {
./utils/TableGen/AsmMatcherEmitter.cpp:static void emitOperandDiagnosticTypes(AsmMatcherInfo &Info, raw_ostream &OS) {
./utils/TableGen/AsmMatcherEmitter.cpp:static void emitGetSubtargetFeatureName(AsmMatcherInfo &Info, raw_ostream &OS) {
./utils/TableGen/AsmMatcherEmitter.cpp:                                         raw_ostream &OS) {
./utils/TableGen/AsmMatcherEmitter.cpp:static bool emitMnemonicAliases(raw_ostream &OS, const AsmMatcherInfo &Info) {
./utils/TableGen/AsmMatcherEmitter.cpp:static void emitCustomOperandParsing(raw_ostream &OS, CodeGenTarget &Target,
./utils/TableGen/AsmMatcherEmitter.cpp:void AsmMatcherEmitter::run(raw_ostream &OS) {
./utils/TableGen/AsmMatcherEmitter.cpp:void EmitAsmMatcher(RecordKeeper &RK, raw_ostream &OS) {
./utils/TableGen/DAGISelMatcherEmitter.cpp:                           unsigned StartIdx, formatted_raw_ostream &OS);
./utils/TableGen/DAGISelMatcherEmitter.cpp:  void EmitPredicateFunctions(formatted_raw_ostream &OS);
./utils/TableGen/DAGISelMatcherEmitter.cpp:  void EmitHistogram(const Matcher *N, formatted_raw_ostream &OS);
./utils/TableGen/DAGISelMatcherEmitter.cpp:                       formatted_raw_ostream &OS);
./utils/TableGen/DAGISelMatcherEmitter.cpp:static uint64_t EmitVBRValue(uint64_t Val, raw_ostream &OS) {
./utils/TableGen/DAGISelMatcherEmitter.cpp:            formatted_raw_ostream &OS) {
./utils/TableGen/DAGISelMatcherEmitter.cpp:        formatted_raw_ostream FOS(OS);
./utils/TableGen/DAGISelMatcherEmitter.cpp:        formatted_raw_ostream FOS(OS);
./utils/TableGen/DAGISelMatcherEmitter.cpp:                formatted_raw_ostream &OS) {
./utils/TableGen/DAGISelMatcherEmitter.cpp:void MatcherTableEmitter::EmitPredicateFunctions(formatted_raw_ostream &OS) {
./utils/TableGen/DAGISelMatcherEmitter.cpp:                                        formatted_raw_ostream &OS) {
./utils/TableGen/DAGISelMatcherEmitter.cpp:                            raw_ostream &O) {
./utils/TableGen/DAGISelMatcherEmitter.cpp:  formatted_raw_ostream OS(O);
./utils/TableGen/DAGISelMatcherOpt.cpp:#include "llvm/Support/raw_ostream.h"
./utils/TableGen/DisassemblerEmitter.cpp:extern void EmitFixedLenDecoder(RecordKeeper &RK, raw_ostream &OS,
./utils/TableGen/DisassemblerEmitter.cpp:void EmitDisassembler(RecordKeeper &Records, raw_ostream &OS) {
./utils/TableGen/OptParserEmitter.cpp:static raw_ostream &write_cstring(raw_ostream &OS, llvm::StringRef Str) {
./utils/TableGen/OptParserEmitter.cpp:void EmitOptParser(RecordKeeper &Records, raw_ostream &OS) {
./utils/TableGen/CallingConvEmitter.cpp:  void run(raw_ostream &o);
./utils/TableGen/CallingConvEmitter.cpp:  void EmitCallingConv(Record *CC, raw_ostream &O);
./utils/TableGen/CallingConvEmitter.cpp:  void EmitAction(Record *Action, unsigned Indent, raw_ostream &O);
./utils/TableGen/CallingConvEmitter.cpp:void CallingConvEmitter::run(raw_ostream &O) {
./utils/TableGen/CallingConvEmitter.cpp:void CallingConvEmitter::EmitCallingConv(Record *CC, raw_ostream &O) {
./utils/TableGen/CallingConvEmitter.cpp:                                    unsigned Indent, raw_ostream &O) {
./utils/TableGen/CallingConvEmitter.cpp:void EmitCallingConv(RecordKeeper &RK, raw_ostream &OS) {
./utils/TableGen/CodeGenRegisters.cpp:  raw_ostream &operator<<(raw_ostream &OS, const CodeGenRegisterClass::Key &K) {
./utils/TableGen/TableGen.cpp:bool LLVMTableGenMain(raw_ostream &OS, RecordKeeper &Records) {
./utils/TableGen/CodeEmitterGen.cpp:  void run(raw_ostream &o);
./utils/TableGen/CodeEmitterGen.cpp:  void emitMachineOpEmitter(raw_ostream &o, const std::string &Namespace);
./utils/TableGen/CodeEmitterGen.cpp:  void emitGetValueBit(raw_ostream &o, const std::string &Namespace);
./utils/TableGen/CodeEmitterGen.cpp:void CodeEmitterGen::run(raw_ostream &o) {
./utils/TableGen/CodeEmitterGen.cpp:void EmitCodeEmitter(RecordKeeper &RK, raw_ostream &OS) {
./utils/TableGen/InstrInfoEmitter.cpp:  void run(raw_ostream &OS);
./utils/TableGen/InstrInfoEmitter.cpp:  void emitEnums(raw_ostream &OS);
./utils/TableGen/InstrInfoEmitter.cpp:                  raw_ostream &OS);
./utils/TableGen/InstrInfoEmitter.cpp:  void EmitOperandInfo(raw_ostream &OS, OperandInfoMapTy &OperandInfoIDs);
./utils/TableGen/InstrInfoEmitter.cpp:                         unsigned Num, raw_ostream &OS) {
./utils/TableGen/InstrInfoEmitter.cpp:void InstrInfoEmitter::EmitOperandInfo(raw_ostream &OS,
./utils/TableGen/InstrInfoEmitter.cpp:void InstrInfoEmitter::run(raw_ostream &OS) {
./utils/TableGen/InstrInfoEmitter.cpp:                                  raw_ostream &OS) {
./utils/TableGen/InstrInfoEmitter.cpp:void InstrInfoEmitter::emitEnums(raw_ostream &OS) {
./utils/TableGen/InstrInfoEmitter.cpp:void EmitInstrInfo(RecordKeeper &RK, raw_ostream &OS) {
./utils/TableGen/Debug+Asserts/InstrInfoEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/InstrInfoEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/CodeGenInstruction.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/CodeGenInstruction.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/CallingConvEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/CallingConvEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/CodeGenSchedule.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/CodeGenSchedule.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/DAGISelMatcherEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/DAGISelMatcherEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/CodeGenMapTable.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/CodeGenMapTable.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/CodeGenTarget.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/CodeGenTarget.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/SetTheory.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./utils/TableGen/Debug+Asserts/SetTheory.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/FastISelEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/FastISelEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/X86RecognizableInstr.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/X86RecognizableInstr.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/DAGISelMatcherOpt.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/DAGISelMatcherOpt.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/CodeEmitterGen.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/CodeEmitterGen.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/SubtargetEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/SubtargetEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/RegisterInfoEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/RegisterInfoEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/PseudoLoweringEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/PseudoLoweringEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/CodeGenRegisters.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/CodeGenRegisters.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/DAGISelMatcherGen.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/DAGISelMatcherGen.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/FixedLenDecoderEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/FixedLenDecoderEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/AsmMatcherEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/AsmMatcherEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/IntrinsicEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/IntrinsicEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/AsmWriterInst.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/AsmWriterInst.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/TableGen.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./utils/TableGen/Debug+Asserts/TableGen.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/AsmWriterEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/AsmWriterEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/DAGISelEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/DAGISelEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/CodeGenDAGPatterns.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/CodeGenDAGPatterns.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/DAGISelMatcher.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/DAGISelMatcher.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/DisassemblerEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/DisassemblerEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/DFAPacketizerEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/DFAPacketizerEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/OptParserEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/OptParserEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/Debug+Asserts/X86DisassemblerTables.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./utils/TableGen/Debug+Asserts/X86DisassemblerTables.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./utils/TableGen/CodeGenTarget.h:#include "llvm/Support/raw_ostream.h"
./utils/TableGen/X86DisassemblerTables.h:#include "llvm/Support/raw_ostream.h"
./utils/TableGen/X86DisassemblerTables.h:  void emitOneID(raw_ostream &o,
./utils/TableGen/X86DisassemblerTables.h:  void emitModRMDecision(raw_ostream &o1,
./utils/TableGen/X86DisassemblerTables.h:                         raw_ostream &o2,
./utils/TableGen/X86DisassemblerTables.h:  void emitOpcodeDecision(raw_ostream &o1,
./utils/TableGen/X86DisassemblerTables.h:                          raw_ostream &o2,
./utils/TableGen/X86DisassemblerTables.h:  void emitContextDecision(raw_ostream &o1,
./utils/TableGen/X86DisassemblerTables.h:                           raw_ostream &o2,
./utils/TableGen/X86DisassemblerTables.h:  void emitInstructionInfo(raw_ostream &o, uint32_t &i) const;
./utils/TableGen/X86DisassemblerTables.h:  void emitContextTable(raw_ostream &o, uint32_t &i) const;
./utils/TableGen/X86DisassemblerTables.h:  void emitContextDecisions(raw_ostream &o1,
./utils/TableGen/X86DisassemblerTables.h:                            raw_ostream &o2,
./utils/TableGen/X86DisassemblerTables.h:  void emit(raw_ostream &o) const;
./utils/TableGen/FixedLenDecoderEmitter.cpp:#include "llvm/Support/raw_ostream.h"
./utils/TableGen/FixedLenDecoderEmitter.cpp:  void emitTable(formatted_raw_ostream &o, DecoderTable &Table,
./utils/TableGen/FixedLenDecoderEmitter.cpp:  void emitPredicateFunction(formatted_raw_ostream &OS,
./utils/TableGen/FixedLenDecoderEmitter.cpp:  void emitDecoderFunction(formatted_raw_ostream &OS,
./utils/TableGen/FixedLenDecoderEmitter.cpp:  void run(raw_ostream &o);
./utils/TableGen/FixedLenDecoderEmitter.cpp:static void dumpBits(raw_ostream &o, const BitsInit &bits) {
./utils/TableGen/FixedLenDecoderEmitter.cpp:  void dumpFilterArray(raw_ostream &o,
./utils/TableGen/FixedLenDecoderEmitter.cpp:  void dumpStack(raw_ostream &o, const char *prefix) const;
./utils/TableGen/FixedLenDecoderEmitter.cpp:  bool emitPredicateMatch(raw_ostream &o, unsigned &Indentation,
./utils/TableGen/FixedLenDecoderEmitter.cpp:  void emitBinaryParser(raw_ostream &o, unsigned &Indentation,
./utils/TableGen/FixedLenDecoderEmitter.cpp:  void emitDecoder(raw_ostream &OS, unsigned Indentation, unsigned Opc) const;
./utils/TableGen/FixedLenDecoderEmitter.cpp:void FixedLenDecoderEmitter::emitTable(formatted_raw_ostream &OS,
./utils/TableGen/FixedLenDecoderEmitter.cpp:emitPredicateFunction(formatted_raw_ostream &OS, PredicateSet &Predicates,
./utils/TableGen/FixedLenDecoderEmitter.cpp:emitDecoderFunction(formatted_raw_ostream &OS, DecoderSet &Decoders,
./utils/TableGen/FixedLenDecoderEmitter.cpp:void FilterChooser::dumpFilterArray(raw_ostream &o,
./utils/TableGen/FixedLenDecoderEmitter.cpp:void FilterChooser::dumpStack(raw_ostream &o, const char *prefix) const {
./utils/TableGen/FixedLenDecoderEmitter.cpp:void FilterChooser::emitBinaryParser(raw_ostream &o, unsigned &Indentation,
./utils/TableGen/FixedLenDecoderEmitter.cpp:void FilterChooser::emitDecoder(raw_ostream &OS, unsigned Indentation,
./utils/TableGen/FixedLenDecoderEmitter.cpp:static void emitSinglePredicateMatch(raw_ostream &o, StringRef str,
./utils/TableGen/FixedLenDecoderEmitter.cpp:bool FilterChooser::emitPredicateMatch(raw_ostream &o, unsigned &Indentation,
./utils/TableGen/FixedLenDecoderEmitter.cpp:static void emitFieldFromInstruction(formatted_raw_ostream &OS) {
./utils/TableGen/FixedLenDecoderEmitter.cpp:static void emitDecodeInstruction(formatted_raw_ostream &OS) {
./utils/TableGen/FixedLenDecoderEmitter.cpp:void FixedLenDecoderEmitter::run(raw_ostream &o) {
./utils/TableGen/FixedLenDecoderEmitter.cpp:  formatted_raw_ostream OS(o);
./utils/TableGen/FixedLenDecoderEmitter.cpp:  OS << "#include \"llvm/Support/raw_ostream.h\"\n";
./utils/TableGen/FixedLenDecoderEmitter.cpp:void EmitFixedLenDecoder(RecordKeeper &RK, raw_ostream &OS,
./utils/TableGen/CodeGenMapTable.cpp:  void emitBinSearch(raw_ostream &OS, unsigned TableSize);
./utils/TableGen/CodeGenMapTable.cpp:  void emitTablesWithFunc(raw_ostream &OS);
./utils/TableGen/CodeGenMapTable.cpp:  unsigned emitBinSearchTable(raw_ostream &OS);
./utils/TableGen/CodeGenMapTable.cpp:  void emitMapFuncBody(raw_ostream &OS, unsigned TableSize);
./utils/TableGen/CodeGenMapTable.cpp:unsigned MapTableEmitter::emitBinSearchTable(raw_ostream &OS) {
./utils/TableGen/CodeGenMapTable.cpp:void MapTableEmitter::emitBinSearch(raw_ostream &OS, unsigned TableSize) {
./utils/TableGen/CodeGenMapTable.cpp:void MapTableEmitter::emitMapFuncBody(raw_ostream &OS,
./utils/TableGen/CodeGenMapTable.cpp:void MapTableEmitter::emitTablesWithFunc(raw_ostream &OS) {
./utils/TableGen/CodeGenMapTable.cpp:static void emitEnums(raw_ostream &OS, RecordKeeper &Records) {
./utils/TableGen/CodeGenMapTable.cpp:void EmitMapTable(RecordKeeper &Records, raw_ostream &OS) {
./utils/TableGen/CodeGenDAGPatterns.h:  void print(raw_ostream &OS) const;
./utils/TableGen/CodeGenDAGPatterns.h:inline raw_ostream &operator<<(raw_ostream &OS, const TreePatternNode &TPN) {
./utils/TableGen/CodeGenDAGPatterns.h:  void print(raw_ostream &OS) const;
./utils/TableGen/DAGISelMatcher.h:  class raw_ostream;
./utils/TableGen/DAGISelMatcher.h:                      raw_ostream &OS);
./utils/TableGen/DAGISelMatcher.h:  void print(raw_ostream &OS, unsigned indent = 0) const;
./utils/TableGen/DAGISelMatcher.h:  void printOne(raw_ostream &OS) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const = 0;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DAGISelMatcher.h:  virtual void printImpl(raw_ostream &OS, unsigned indent) const;
./utils/TableGen/DFAPacketizerEmitter.cpp:                             raw_ostream &OS);
./utils/TableGen/DFAPacketizerEmitter.cpp:  void run(raw_ostream &OS);
./utils/TableGen/DFAPacketizerEmitter.cpp:  void writeTableAndAPI(raw_ostream &OS, const std::string &ClassName);
./utils/TableGen/DFAPacketizerEmitter.cpp:void DFA::writeTableAndAPI(raw_ostream &OS, const std::string &TargetName) {
./utils/TableGen/DFAPacketizerEmitter.cpp:                                  raw_ostream &OS) {
./utils/TableGen/DFAPacketizerEmitter.cpp:void DFAPacketizerEmitter::run(raw_ostream &OS) {
./utils/TableGen/DFAPacketizerEmitter.cpp:void EmitDFAPacketizer(RecordKeeper &RK, raw_ostream &OS) {
./utils/TableGen/AsmWriterEmitter.cpp:  void run(raw_ostream &o);
./utils/TableGen/AsmWriterEmitter.cpp:  void EmitPrintInstruction(raw_ostream &o);
./utils/TableGen/AsmWriterEmitter.cpp:  void EmitGetRegisterName(raw_ostream &o);
./utils/TableGen/AsmWriterEmitter.cpp:  void EmitPrintAliasInstruction(raw_ostream &O);
./utils/TableGen/AsmWriterEmitter.cpp:                       AsmWriterOperand> > &OpsToPrint, raw_ostream &O) {
./utils/TableGen/AsmWriterEmitter.cpp:                             raw_ostream &O) {
./utils/TableGen/AsmWriterEmitter.cpp:void AsmWriterEmitter::EmitPrintInstruction(raw_ostream &O) {
./utils/TableGen/AsmWriterEmitter.cpp:            << " *MI, raw_ostream &O) {\n";
./utils/TableGen/AsmWriterEmitter.cpp:emitRegisterNameString(raw_ostream &O, StringRef AltName,
./utils/TableGen/AsmWriterEmitter.cpp:void AsmWriterEmitter::EmitGetRegisterName(raw_ostream &O) {
./utils/TableGen/AsmWriterEmitter.cpp:  void print(raw_ostream &O) {
./utils/TableGen/AsmWriterEmitter.cpp:static void EmitGetMapOperandNumber(raw_ostream &O) {
./utils/TableGen/AsmWriterEmitter.cpp:void AsmWriterEmitter::EmitPrintAliasInstruction(raw_ostream &O) {
./utils/TableGen/AsmWriterEmitter.cpp:          << " *MI, raw_ostream &OS) {\n";
./utils/TableGen/AsmWriterEmitter.cpp:void AsmWriterEmitter::run(raw_ostream &O) {
./utils/TableGen/AsmWriterEmitter.cpp:void EmitAsmWriter(RecordKeeper &RK, raw_ostream &OS) {
./tools/llvm-diff/llvm-diff.cpp:#include "llvm/Support/raw_ostream.h"
./tools/llvm-diff/DifferenceEngine.cpp:#include "llvm/Support/raw_ostream.h"
./tools/llvm-diff/Debug+Asserts/llvm-diff.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-diff/Debug+Asserts/llvm-diff.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-diff/Debug+Asserts/DifferenceEngine.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-diff/Debug+Asserts/DifferenceEngine.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-diff/Debug+Asserts/DiffConsumer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-diff/Debug+Asserts/DiffConsumer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-diff/Debug+Asserts/DiffLog.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-diff/Debug+Asserts/DiffLog.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-diff/DiffConsumer.h:#include "llvm/Support/raw_ostream.h"
./tools/llvm-diff/DiffConsumer.h:    raw_ostream &out;
./tools/bugpoint/FindBugs.cpp:#include "llvm/Support/raw_ostream.h"
./tools/bugpoint/ListReducer.h:#include "llvm/Support/raw_ostream.h"
./tools/bugpoint/ToolRunner.cpp:#include "llvm/Support/raw_ostream.h"
./tools/bugpoint/Debug+Asserts/ToolRunner.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/bugpoint/Debug+Asserts/ToolRunner.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/bugpoint/Debug+Asserts/ExtractFunction.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/bugpoint/Debug+Asserts/ExtractFunction.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/bugpoint/Debug+Asserts/Miscompilation.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/bugpoint/Debug+Asserts/Miscompilation.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/bugpoint/Debug+Asserts/bugpoint.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/bugpoint/Debug+Asserts/bugpoint.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/bugpoint/Debug+Asserts/FindBugs.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/bugpoint/Debug+Asserts/FindBugs.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/bugpoint/Debug+Asserts/CrashDebugger.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/bugpoint/Debug+Asserts/CrashDebugger.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/bugpoint/Debug+Asserts/OptimizerDriver.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/bugpoint/Debug+Asserts/OptimizerDriver.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/bugpoint/Debug+Asserts/ExecutionDriver.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/bugpoint/Debug+Asserts/ExecutionDriver.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/bugpoint/Debug+Asserts/BugDriver.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/bugpoint/Debug+Asserts/BugDriver.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/bugpoint/BugDriver.cpp:#include "llvm/Support/raw_ostream.h"
./tools/bugpoint/ExecutionDriver.cpp:#include "llvm/Support/raw_ostream.h"
./tools/llvm-readobj/ELF.cpp:                bool Is64, raw_ostream &OS) {
./tools/llvm-readobj/ELF.cpp:ErrorOr<void> dumpDynamicTable(const ELFObjectFile<ELFT> *O, raw_ostream &OS) {
./tools/llvm-readobj/ELF.cpp:ErrorOr<void> dumpELFDynamicTable(ObjectFile *O, raw_ostream &OS) {
./tools/llvm-readobj/Debug+Asserts/llvm-readobj.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-readobj/Debug+Asserts/llvm-readobj.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-readobj/Debug+Asserts/ELF.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-readobj/Debug+Asserts/ELF.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-readobj/llvm-readobj.h:class raw_ostream;
./tools/llvm-readobj/llvm-readobj.h:ErrorOr<void> dumpELFDynamicTable(object::ObjectFile *O, raw_ostream &OS);
./tools/llvm-mcmarkup/llvm-mcmarkup.cpp:#include "llvm/Support/raw_ostream.h"
./tools/llvm-mcmarkup/llvm-mcmarkup.cpp:    outs().changeColor(raw_ostream::RED);
./tools/llvm-mcmarkup/llvm-mcmarkup.cpp:    outs().changeColor(raw_ostream::CYAN);
./tools/llvm-mcmarkup/llvm-mcmarkup.cpp:  outs().changeColor(raw_ostream::WHITE, false);
./tools/llvm-mcmarkup/Debug+Asserts/llvm-mcmarkup.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-mcmarkup/Debug+Asserts/llvm-mcmarkup.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-bcanalyzer/llvm-bcanalyzer.cpp:#include "llvm/Support/raw_ostream.h"
./tools/llvm-bcanalyzer/Debug+Asserts/llvm-bcanalyzer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-bcanalyzer/Debug+Asserts/llvm-bcanalyzer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-stress/Debug+Asserts/llvm-stress.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-stress/Debug+Asserts/llvm-stress.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-dis/llvm-dis.cpp:static void printDebugLoc(const DebugLoc &DL, formatted_raw_ostream &OS) {
./tools/llvm-dis/llvm-dis.cpp:                         formatted_raw_ostream &OS) {
./tools/llvm-dis/llvm-dis.cpp:  void printInfoComment(const Value &V, formatted_raw_ostream &OS) {
./tools/llvm-dis/Debug+Asserts/llvm-dis.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-dis/Debug+Asserts/llvm-dis.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-symbolizer/Debug+Asserts/LLVMSymbolize.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-symbolizer/Debug+Asserts/LLVMSymbolize.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-symbolizer/Debug+Asserts/llvm-symbolizer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-symbolizer/Debug+Asserts/llvm-symbolizer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-symbolizer/llvm-symbolizer.cpp:#include "llvm/Support/raw_ostream.h"
./tools/lto/LTOCodeGenerator.h:  class raw_ostream;
./tools/lto/LTOCodeGenerator.h:  bool generateObjectFile(llvm::raw_ostream &out, std::string &errMsg);
./tools/lto/Debug+Asserts/LTOCodeGenerator.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/lto/Debug+Asserts/LTOCodeGenerator.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/lto/Debug+Asserts/lto.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/lto/Debug+Asserts/lto.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/lto/Debug+Asserts/LTOModule.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/lto/Debug+Asserts/LTOModule.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/lto/LTOCodeGenerator.cpp:bool LTOCodeGenerator::generateObjectFile(raw_ostream &out,
./tools/lto/LTOCodeGenerator.cpp:  formatted_raw_ostream Out(out);
./tools/llvm-nm/llvm-nm.cpp:#include "llvm/Support/raw_ostream.h"
./tools/llvm-nm/Debug+Asserts/llvm-nm.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/llvm-nm/Debug+Asserts/llvm-nm.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-link/Debug+Asserts/llvm-link.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/llvm-link/Debug+Asserts/llvm-link.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-mc/Disassembler.h:class raw_ostream;
./tools/llvm-mc/Disassembler.h:                         raw_ostream &Out);
./tools/llvm-mc/llvm-mc.cpp:  formatted_raw_ostream FOS(Out->os());
./tools/llvm-mc/Debug+Asserts/llvm-mc.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-mc/Debug+Asserts/llvm-mc.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-mc/Debug+Asserts/Disassembler.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-mc/Debug+Asserts/Disassembler.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-mc/Disassembler.cpp:#include "llvm/Support/raw_ostream.h"
./tools/llvm-mc/Disassembler.cpp:                       SourceMgr &SM, raw_ostream &Out,
./tools/llvm-mc/Disassembler.cpp:                              raw_ostream &Out) {
./tools/opt/opt.cpp:  raw_ostream &Out;
./tools/opt/opt.cpp:  CallGraphSCCPassPrinter(const PassInfo *PI, raw_ostream &out) :
./tools/opt/opt.cpp:  raw_ostream &Out;
./tools/opt/opt.cpp:  ModulePassPrinter(const PassInfo *PI, raw_ostream &out)
./tools/opt/opt.cpp:  raw_ostream &Out;
./tools/opt/opt.cpp:  FunctionPassPrinter(const PassInfo *PI, raw_ostream &out)
./tools/opt/opt.cpp:  raw_ostream &Out;
./tools/opt/opt.cpp:  LoopPassPrinter(const PassInfo *PI, raw_ostream &out) :
./tools/opt/opt.cpp:  raw_ostream &Out;
./tools/opt/opt.cpp:  RegionPassPrinter(const PassInfo *PI, raw_ostream &out) : RegionPass(ID),
./tools/opt/opt.cpp:  raw_ostream &Out;
./tools/opt/opt.cpp:  BasicBlockPassPrinter(const PassInfo *PI, raw_ostream &out)
./tools/opt/opt.cpp:  raw_ostream &Out;
./tools/opt/opt.cpp:  BreakpointPrinter(raw_ostream &out)
./tools/opt/PrintSCC.cpp:#include "llvm/Support/raw_ostream.h"
./tools/opt/PrintSCC.cpp:    void print(raw_ostream &O, const Module* = 0) const { }
./tools/opt/PrintSCC.cpp:    void print(raw_ostream &O, const Module* = 0) const { }
./tools/opt/AnalysisWrappers.cpp:#include "llvm/Support/raw_ostream.h"
./tools/opt/Debug+Asserts/AnalysisWrappers.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/opt/Debug+Asserts/AnalysisWrappers.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/opt/Debug+Asserts/opt.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/opt/Debug+Asserts/opt.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/opt/Debug+Asserts/PrintSCC.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/opt/Debug+Asserts/PrintSCC.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/opt/Debug+Asserts/GraphPrinters.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/opt/Debug+Asserts/GraphPrinters.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-objdump/MachODump.cpp:#include "llvm/Support/raw_ostream.h"
./tools/llvm-objdump/MachODump.cpp:                        MachOObject *MachOObj, raw_ostream &OS) {
./tools/llvm-objdump/MachODump.cpp:                                         raw_ostream &DebugOut,
./tools/llvm-objdump/MachODump.cpp:  raw_ostream &DebugOut = DebugFlag ? dbgs() : nulls();
./tools/llvm-objdump/MachODump.cpp:  raw_ostream &DebugOut = nulls();
./tools/llvm-objdump/MCFunction.h:class raw_ostream;
./tools/llvm-objdump/MCFunction.h:                       const MCInstrAnalysis *Ana, raw_ostream &DebugOut,
./tools/llvm-objdump/MCFunction.cpp:#include "llvm/Support/raw_ostream.h"
./tools/llvm-objdump/MCFunction.cpp:                                 raw_ostream &DebugOut,
./tools/llvm-objdump/COFFDump.cpp:#include "llvm/Support/raw_ostream.h"
./tools/llvm-objdump/COFFDump.cpp:static void printCOFFSymbolAddress(llvm::raw_ostream &Out,
./tools/llvm-objdump/ELFDump.cpp:#include "llvm/Support/raw_ostream.h"
./tools/llvm-objdump/Debug+Asserts/MachODump.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-objdump/Debug+Asserts/MachODump.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-objdump/Debug+Asserts/COFFDump.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/llvm-objdump/Debug+Asserts/COFFDump.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-objdump/Debug+Asserts/llvm-objdump.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-objdump/Debug+Asserts/llvm-objdump.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-objdump/Debug+Asserts/MCFunction.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-objdump/Debug+Asserts/MCFunction.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-objdump/Debug+Asserts/ELFDump.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-objdump/Debug+Asserts/ELFDump.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-objdump/llvm-objdump.cpp:#include "llvm/Support/raw_ostream.h"
./tools/llvm-objdump/llvm-objdump.cpp:        raw_ostream &DebugOut = DebugFlag ? dbgs() : nulls();
./tools/llvm-objdump/llvm-objdump.cpp:        raw_ostream &DebugOut = nulls();
./tools/llvm-extract/Debug+Asserts/llvm-extract.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-extract/Debug+Asserts/llvm-extract.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-ar/llvm-ar.cpp:#include "llvm/Support/raw_ostream.h"
./tools/llvm-ar/Debug+Asserts/llvm-ar.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/llvm-ar/Debug+Asserts/llvm-ar.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-ranlib/Debug+Asserts/llvm-ranlib.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/llvm-ranlib/Debug+Asserts/llvm-ranlib.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-ranlib/llvm-ranlib.cpp:#include "llvm/Support/raw_ostream.h"
./tools/llc/llc.cpp:    formatted_raw_ostream FOS(Out->os());
./tools/llc/Debug+Asserts/llc.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llc/Debug+Asserts/llc.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-cov/Debug+Asserts/llvm-cov.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-cov/Debug+Asserts/llvm-cov.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-prof/llvm-prof.cpp:#include "llvm/Support/raw_ostream.h"
./tools/llvm-prof/llvm-prof.cpp:                                   formatted_raw_ostream &OS) {
./tools/llvm-prof/llvm-prof.cpp:                                          formatted_raw_ostream &OS) {
./tools/llvm-prof/llvm-prof.cpp:                                        formatted_raw_ostream &OS) {
./tools/llvm-prof/Debug+Asserts/llvm-prof.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-prof/Debug+Asserts/llvm-prof.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-rtdyld/llvm-rtdyld.cpp:#include "llvm/Support/raw_ostream.h"
./tools/llvm-rtdyld/Debug+Asserts/llvm-rtdyld.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-rtdyld/Debug+Asserts/llvm-rtdyld.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-config/llvm-config.cpp:#include "llvm/Support/raw_ostream.h"
./tools/llvm-config/llvm-config.cpp:  raw_ostream &OS = outs();
./tools/llvm-config/Debug+Asserts/llvm-config.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-config/Debug+Asserts/llvm-config.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-size/llvm-size.cpp:#include "llvm/Support/raw_ostream.h"
./tools/llvm-size/Debug+Asserts/llvm-size.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/llvm-size/Debug+Asserts/llvm-size.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/unittests/Frontend/Debug+Asserts/FrontendActionTest.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/unittests/Frontend/Debug+Asserts/FrontendActionTest.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/unittests/Format/Debug+Asserts/FormatTest.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/unittests/Format/Debug+Asserts/FormatTest.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/unittests/Basic/Debug+Asserts/CharInfoTest.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/unittests/Basic/Debug+Asserts/CharInfoTest.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/unittests/Basic/Debug+Asserts/FileManagerTest.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/unittests/Basic/Debug+Asserts/FileManagerTest.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/unittests/Basic/Debug+Asserts/SourceManagerTest.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/unittests/Basic/Debug+Asserts/SourceManagerTest.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/unittests/Lex/Debug+Asserts/PPCallbacksTest.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/unittests/Lex/Debug+Asserts/PPCallbacksTest.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/unittests/Lex/Debug+Asserts/LexerTest.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/unittests/Lex/Debug+Asserts/LexerTest.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/unittests/Lex/Debug+Asserts/PPConditionalDirectiveRecordTest.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/unittests/Lex/Debug+Asserts/PPConditionalDirectiveRecordTest.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/unittests/AST/StmtPrinterTest.cpp:void PrintStmt(raw_ostream &Out, const ASTContext *Context, const Stmt *S) {
./tools/clang/unittests/AST/Debug+Asserts/DeclPrinterTest.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/unittests/AST/Debug+Asserts/DeclPrinterTest.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/unittests/AST/Debug+Asserts/CommentLexer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/unittests/AST/Debug+Asserts/CommentLexer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/unittests/AST/Debug+Asserts/StmtPrinterTest.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/unittests/AST/Debug+Asserts/StmtPrinterTest.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/unittests/AST/Debug+Asserts/CommentParser.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/unittests/AST/Debug+Asserts/CommentParser.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/unittests/AST/Debug+Asserts/SourceLocationTest.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/unittests/AST/Debug+Asserts/SourceLocationTest.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/unittests/AST/Debug+Asserts/ASTContextParentMapTest.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/unittests/AST/Debug+Asserts/ASTContextParentMapTest.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/unittests/AST/DeclPrinterTest.cpp:void PrintDecl(raw_ostream &Out, const ASTContext *Context, const Decl *D) {
./tools/clang/unittests/Tooling/RewriterTestContext.h:#include "llvm/Support/raw_ostream.h"
./tools/clang/unittests/Tooling/Debug+Asserts/RefactoringTest.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/unittests/Tooling/Debug+Asserts/RefactoringTest.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/unittests/Tooling/Debug+Asserts/CompilationDatabaseTest.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/unittests/Tooling/Debug+Asserts/CompilationDatabaseTest.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/unittests/Tooling/Debug+Asserts/RewriterTest.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/unittests/Tooling/Debug+Asserts/RewriterTest.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/unittests/Tooling/Debug+Asserts/RefactoringCallbacksTest.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/unittests/Tooling/Debug+Asserts/RefactoringCallbacksTest.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/unittests/Tooling/Debug+Asserts/CommentHandlerTest.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/unittests/Tooling/Debug+Asserts/CommentHandlerTest.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/unittests/Tooling/Debug+Asserts/RecursiveASTVisitorTest.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/unittests/Tooling/Debug+Asserts/RecursiveASTVisitorTest.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/unittests/Tooling/Debug+Asserts/ToolingTest.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/unittests/Tooling/Debug+Asserts/ToolingTest.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/unittests/ASTMatchers/Debug+Asserts/ASTMatchersTest.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/unittests/ASTMatchers/Debug+Asserts/ASTMatchersTest.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/include/clang/CodeGen/BackendUtil.h:                         BackendAction Action, raw_ostream *OS);
./tools/clang/include/clang/StaticAnalyzer/Frontend/FrontendActions.h:void printCheckerHelp(raw_ostream &OS, ArrayRef<std::string> plugins);
./tools/clang/include/clang/StaticAnalyzer/Core/BugReporter/BugReporterVisitor.h:                    raw_ostream &Out,
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ProgramState.h:  void print(raw_ostream &Out, const char *nl = "\n",
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ProgramState.h:  void printDOT(raw_ostream &Out) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ProgramState.h:  void printTaint(raw_ostream &Out, const char *nl = "\n",
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/CallEvent.h:  void dump(raw_ostream &Out) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  virtual void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  virtual void printPretty(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  virtual void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  virtual void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  virtual void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void printPretty(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void printPretty(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void printPretty(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:  void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:static inline raw_ostream &operator<<(raw_ostream &os,
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SVals.h:  void dumpToStream(raw_ostream &OS) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SVals.h:  void dumpToStream(raw_ostream &Out) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SVals.h:  void dumpToStream(raw_ostream &Out) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SVals.h:static inline raw_ostream &operator<<(raw_ostream &os,
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/Environment.h:  void print(raw_ostream &Out, const char *NL, const char *Sep) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/Environment.h:  void printAux(raw_ostream &Out, bool printLocations,
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/Store.h:  virtual void print(Store store, raw_ostream &Out,
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ConstraintManager.h:                     raw_ostream &Out,
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SymbolManager.h:  virtual void dumpToStream(raw_ostream &os) const {}
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SymbolManager.h:  virtual void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SymbolManager.h:  virtual void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SymbolManager.h:  virtual void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SymbolManager.h:  virtual void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SymbolManager.h:  virtual void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SymbolManager.h:  virtual void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SymbolManager.h:  virtual void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SymbolManager.h:  virtual void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SymbolManager.h:  virtual void dumpToStream(raw_ostream &os) const;
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SymbolManager.h:static inline raw_ostream &operator<<(raw_ostream &os,
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SubEngine.h:  virtual void printState(raw_ostream &Out, ProgramStateRef State,
./tools/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h:  void printState(raw_ostream &Out, ProgramStateRef State,
./tools/clang/include/clang/StaticAnalyzer/Core/CheckerManager.h:  void runCheckersForPrintState(raw_ostream &Out, ProgramStateRef State,
./tools/clang/include/clang/StaticAnalyzer/Core/Checker.h:  virtual void printState(raw_ostream &Out, ProgramStateRef State,
./tools/clang/include/clang/StaticAnalyzer/Core/CheckerRegistry.h:  void printHelp(raw_ostream &out, size_t maxNameChars = 30) const ;
./tools/clang/include/clang/Frontend/SerializedDiagnosticPrinter.h:class raw_ostream;
./tools/clang/include/clang/Frontend/SerializedDiagnosticPrinter.h:DiagnosticConsumer *create(raw_ostream *OS,
./tools/clang/include/clang/Frontend/TextDiagnostic.h:  raw_ostream &OS;
./tools/clang/include/clang/Frontend/TextDiagnostic.h:  TextDiagnostic(raw_ostream &OS,
./tools/clang/include/clang/Frontend/TextDiagnostic.h:  /// \brief Print the diagonstic level to a raw_ostream.
./tools/clang/include/clang/Frontend/TextDiagnostic.h:  static void printDiagnosticLevel(raw_ostream &OS,
./tools/clang/include/clang/Frontend/TextDiagnostic.h:  /// \brief Pretty-print a diagnostic message to a raw_ostream.
./tools/clang/include/clang/Frontend/TextDiagnostic.h:  static void printDiagnosticMessage(raw_ostream &OS,
./tools/clang/include/clang/Frontend/ASTConsumers.h:ASTConsumer *CreateASTPrinter(raw_ostream *OS, StringRef FilterString);
./tools/clang/include/clang/Frontend/ASTConsumers.h:ASTConsumer *CreateASTDumperXML(raw_ostream &OS);
./tools/clang/include/clang/Frontend/TextDiagnosticPrinter.h:  raw_ostream &OS;
./tools/clang/include/clang/Frontend/TextDiagnosticPrinter.h:  TextDiagnosticPrinter(raw_ostream &os, DiagnosticOptions *diags,
./tools/clang/include/clang/Frontend/ASTUnit.h:  bool serialize(raw_ostream &OS);
./tools/clang/include/clang/Frontend/LogDiagnosticPrinter.h:  raw_ostream &OS;
./tools/clang/include/clang/Frontend/LogDiagnosticPrinter.h:  LogDiagnosticPrinter(raw_ostream &OS, DiagnosticOptions *Diags,
./tools/clang/include/clang/Frontend/CompilerInstance.h:    raw_ostream *OS;
./tools/clang/include/clang/Frontend/CompilerInstance.h:               raw_ostream *os)
./tools/clang/include/clang/Frontend/CompilerInstance.h:                               raw_ostream &OS);
./tools/clang/include/clang/Frontend/Utils.h:void DoPrintPreprocessedInput(Preprocessor &PP, raw_ostream* OS,
./tools/clang/include/clang/Frontend/FrontendActions.h:                                          raw_ostream *&OS);
./tools/clang/include/clang/Frontend/FrontendActions.h:                                          raw_ostream *&OS);
./tools/clang/include/clang/Frontend/CommandLineSourceLoc.h:#include "llvm/Support/raw_ostream.h"
./tools/clang/include/clang/Driver/OptTable.h:    void PrintHelp(raw_ostream &OS, const char *Name,
./tools/clang/include/clang/Driver/Driver.h:  void PrintVersion(const Compilation &C, raw_ostream &OS) const;
./tools/clang/include/clang/Driver/Compilation.h:  void PrintJob(raw_ostream &OS, const Job &J,
./tools/clang/include/clang/Driver/Compilation.h:  void PrintDiagnosticJob(raw_ostream &OS, const Job &J) const;
./tools/clang/include/clang/Basic/PrettyStackTrace.h:    virtual void print(raw_ostream &OS) const;
./tools/clang/include/clang/Basic/VersionTuple.h:raw_ostream& operator<<(raw_ostream &Out, const VersionTuple &V);
./tools/clang/include/clang/Basic/OnDiskHashTable.h:#include "llvm/Support/raw_ostream.h"
./tools/clang/include/clang/Basic/OnDiskHashTable.h:inline void Emit8(raw_ostream& Out, uint32_t V) {
./tools/clang/include/clang/Basic/OnDiskHashTable.h:inline void Emit16(raw_ostream& Out, uint32_t V) {
./tools/clang/include/clang/Basic/OnDiskHashTable.h:inline void Emit24(raw_ostream& Out, uint32_t V) {
./tools/clang/include/clang/Basic/OnDiskHashTable.h:inline void Emit32(raw_ostream& Out, uint32_t V) {
./tools/clang/include/clang/Basic/OnDiskHashTable.h:inline void Emit64(raw_ostream& Out, uint64_t V) {
./tools/clang/include/clang/Basic/OnDiskHashTable.h:inline void Pad(raw_ostream& Out, unsigned A) {
./tools/clang/include/clang/Basic/OnDiskHashTable.h:  io::Offset Emit(raw_ostream &out) {
./tools/clang/include/clang/Basic/OnDiskHashTable.h:  io::Offset Emit(raw_ostream &out, Info &InfoObj) {
./tools/clang/include/clang/Basic/SourceLocation.h:  void print(raw_ostream &OS, const SourceManager &SM) const;
./tools/clang/include/clang/Basic/ObjCRuntime.h:raw_ostream &operator<<(raw_ostream &out, const ObjCRuntime &value);
./tools/clang/include/clang/Basic/Module.h:  class raw_ostream;
./tools/clang/include/clang/Basic/Module.h:  void print(raw_ostream &OS, unsigned Indent = 0) const;
./tools/clang/include/clang/Basic/MacroBuilder.h:#include "llvm/Support/raw_ostream.h"
./tools/clang/include/clang/Basic/MacroBuilder.h:  raw_ostream &Out;
./tools/clang/include/clang/Basic/MacroBuilder.h:  MacroBuilder(raw_ostream &Output) : Out(Output) {}
./tools/clang/include/clang/Basic/LLVM.h:  class raw_ostream;
./tools/clang/include/clang/Basic/LLVM.h:  using llvm::raw_ostream;
./tools/clang/include/clang/Basic/IdentifierTable.h:  // FIXME: Add a print method that uses a raw_ostream.
./tools/clang/include/clang/Analysis/CFG.h:  void print(raw_ostream &OS, const CFG* cfg, const LangOptions &LO,
./tools/clang/include/clang/Analysis/CFG.h:  void printTerminator(raw_ostream &OS, const LangOptions &LO) const;
./tools/clang/include/clang/Analysis/CFG.h:  void print(raw_ostream &OS, const LangOptions &LO, bool ShowColors) const;
./tools/clang/include/clang/Analysis/CallGraph.h:  void print(raw_ostream &os) const;
./tools/clang/include/clang/Analysis/CallGraph.h:  void print(raw_ostream &os) const;
./tools/clang/include/clang/Analysis/Analyses/FormatString.h:  void toString(raw_ostream &os) const;
./tools/clang/include/clang/Analysis/Analyses/FormatString.h:  void toString(raw_ostream &os) const;
./tools/clang/include/clang/Analysis/Analyses/FormatString.h:  void toString(raw_ostream &os) const;
./tools/clang/include/clang/Analysis/Analyses/Dominators.h:  virtual void print(raw_ostream &OS, const llvm::Module* M= 0) const {
./tools/clang/include/clang/Analysis/Analyses/Dominators.h:inline void WriteAsOperand(raw_ostream &OS, const CFGBlock *BB,
./tools/clang/include/clang/AST/DeclarationName.h:  void printName(raw_ostream &OS) const;
./tools/clang/include/clang/AST/DeclarationName.h:  void printName(raw_ostream &OS) const;
./tools/clang/include/clang/AST/DeclarationName.h:inline raw_ostream &operator<<(raw_ostream &OS,
./tools/clang/include/clang/AST/APValue.h:  void dump(raw_ostream &OS) const;
./tools/clang/include/clang/AST/APValue.h:  void printPretty(raw_ostream &OS, ASTContext &Ctx, QualType Ty) const;
./tools/clang/include/clang/AST/AttrImpl.inc:void AcquiredAfterAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void AcquiredBeforeAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void AliasAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void AlignMac68kAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void AlignedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void AllocSizeAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void AlwaysInlineAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void AnalyzerNoReturnAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void AnnotateAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void ArcWeakrefUnavailableAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void ArgumentWithTypeTagAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void AsmLabelAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void AvailabilityAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void BlocksAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void C11NoReturnAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void CDeclAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void CFAuditedTransferAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void CFConsumedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void CFReturnsNotRetainedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void CFReturnsRetainedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void CFUnknownTransferAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void CUDAConstantAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void CUDADeviceAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void CUDAGlobalAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void CUDAHostAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void CUDALaunchBoundsAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void CUDASharedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void CXX11NoReturnAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void CarriesDependencyAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void CleanupAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void ColdAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void CommonAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void ConstAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void ConstructorAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void DLLExportAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void DLLImportAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void DeprecatedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void DestructorAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void ExclusiveLockFunctionAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void ExclusiveLocksRequiredAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void ExclusiveTrylockFunctionAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void FallThroughAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void FastCallAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void FinalAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void ForceInlineAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void FormatAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void FormatArgAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void GNUInlineAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void GuardedByAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void GuardedVarAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void HotAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void IBActionAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void IBOutletAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void IBOutletCollectionAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void InitPriorityAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void IntelOclBiccAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void LockReturnedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void LockableAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void LocksExcludedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void MBlazeInterruptHandlerAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void MBlazeSaveVolatilesAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void MSP430InterruptAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void MallocAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void MaxFieldAlignmentAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void MayAliasAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void MinSizeAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void Mips16Attr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void MsStructAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void MultipleInheritanceAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void NSBridgedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void NSConsumedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void NSConsumesSelfAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void NSReturnsAutoreleasedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void NSReturnsNotRetainedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void NSReturnsRetainedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void NakedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void NoCommonAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void NoDebugAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void NoInlineAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void NoInstrumentFunctionAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void NoMips16Attr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void NoReturnAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void NoSanitizeAddressAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void NoSanitizeMemoryAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void NoSanitizeThreadAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void NoThreadSafetyAnalysisAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void NoThrowAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void NonNullAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void ObjCExceptionAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void ObjCMethodFamilyAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void ObjCNSObjectAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void ObjCPreciseLifetimeAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void ObjCRequiresPropertyDefsAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void ObjCRequiresSuperAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void ObjCReturnsInnerPointerAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void ObjCRootClassAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void OpenCLKernelAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void OverloadableAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void OverrideAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void OwnershipAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void PackedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void PascalAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void PcsAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void PnaclCallAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void PtGuardedByAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void PtGuardedVarAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void Ptr32Attr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void Ptr64Attr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void PureAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void RegparmAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void ReqdWorkGroupSizeAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void ReturnsTwiceAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void ScopedLockableAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void SectionAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void SentinelAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void SharedLockFunctionAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void SharedLocksRequiredAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void SharedTrylockFunctionAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void SingleInheritanceAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void StdCallAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void TLSModelAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void ThisCallAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void TransparentUnionAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void TypeTagForDatatypeAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void TypeVisibilityAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void UnavailableAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void UnlockFunctionAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void UnusedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void UsedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void UuidAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void VecReturnAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void VirtualInheritanceAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void VisibilityAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void WarnUnusedResultAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void WeakAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void WeakImportAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void WeakRefAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void Win64Attr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void WorkGroupSizeHintAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/AttrImpl.inc:void X86ForceAlignArgPointerAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/NestedNameSpecifier.h:  void print(raw_ostream &OS, const PrintingPolicy &Policy) const;
./tools/clang/include/clang/AST/PrettyPrinter.h:  virtual bool handledStmt(Stmt* E, raw_ostream& OS) = 0;
./tools/clang/include/clang/AST/Expr.h:  void outputString(raw_ostream &OS) const;
./tools/clang/include/clang/AST/Attr.h:#include "llvm/Support/raw_ostream.h"
./tools/clang/include/clang/AST/Attr.h:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/ASTContext.h:  void DumpRecordLayout(const RecordDecl *RD, raw_ostream &OS,
./tools/clang/include/clang/AST/DeclObjC.h:raw_ostream &operator<<(raw_ostream &OS, const ObjCCategoryImplDecl &CID);
./tools/clang/include/clang/AST/DeclObjC.h:raw_ostream &operator<<(raw_ostream &OS, const ObjCImplementationDecl &ID);
./tools/clang/include/clang/AST/Type.h:  void print(raw_ostream &OS, const PrintingPolicy &Policy,
./tools/clang/include/clang/AST/Type.h:  void print(raw_ostream &OS, const PrintingPolicy &Policy,
./tools/clang/include/clang/AST/Type.h:  static void print(SplitQualType split, raw_ostream &OS,
./tools/clang/include/clang/AST/Type.h:                    raw_ostream &OS, const PrintingPolicy &policy,
./tools/clang/include/clang/AST/Type.h:    friend raw_ostream &operator<<(raw_ostream &OS,
./tools/clang/include/clang/AST/Type.h:  void printExceptionSpecification(raw_ostream &OS, 
./tools/clang/include/clang/AST/Type.h:  static void PrintTemplateArgumentList(raw_ostream &OS,
./tools/clang/include/clang/AST/Type.h:  static void PrintTemplateArgumentList(raw_ostream &OS,
./tools/clang/include/clang/AST/Type.h:  static void PrintTemplateArgumentList(raw_ostream &OS,
./tools/clang/include/clang/AST/Decl.h:  void printName(raw_ostream &os) const { return Name.printName(os); }
./tools/clang/include/clang/AST/Decl.h:  void printQualifiedName(raw_ostream &OS) const;
./tools/clang/include/clang/AST/Decl.h:  void printQualifiedName(raw_ostream &OS, const PrintingPolicy &Policy) const;
./tools/clang/include/clang/AST/Decl.h:  virtual void getNameForDiagnostic(raw_ostream &OS,
./tools/clang/include/clang/AST/Decl.h:inline raw_ostream &operator<<(raw_ostream &OS, const NamedDecl &ND) {
./tools/clang/include/clang/AST/Decl.h:  virtual void getNameForDiagnostic(raw_ostream &OS,
./tools/clang/include/clang/AST/TemplateName.h:  void print(raw_ostream &OS, const PrintingPolicy &Policy,
./tools/clang/include/clang/AST/TemplateName.h:  void dump(raw_ostream &OS) const;
./tools/clang/include/clang/AST/Comment.h:  void dump(raw_ostream &OS, const CommandTraits *Traits,
./tools/clang/include/clang/AST/DeclTemplate.h:  virtual void getNameForDiagnostic(raw_ostream &OS,
./tools/clang/include/clang/AST/Mangle.h:#include "llvm/Support/raw_ostream.h"
./tools/clang/include/clang/AST/Mangle.h:  virtual void mangleName(const NamedDecl *D, raw_ostream &)=0;
./tools/clang/include/clang/AST/Mangle.h:                          raw_ostream &) = 0;
./tools/clang/include/clang/AST/Mangle.h:                                  raw_ostream &) = 0;
./tools/clang/include/clang/AST/Mangle.h:                                        raw_ostream &) = 0;
./tools/clang/include/clang/AST/Mangle.h:                               raw_ostream &) = 0;
./tools/clang/include/clang/AST/Mangle.h:                            raw_ostream &) = 0;
./tools/clang/include/clang/AST/Mangle.h:                                   raw_ostream &) = 0;
./tools/clang/include/clang/AST/Mangle.h:  virtual void mangleCXXRTTI(QualType T, raw_ostream &) = 0;
./tools/clang/include/clang/AST/Mangle.h:  virtual void mangleCXXRTTIName(QualType T, raw_ostream &) = 0;
./tools/clang/include/clang/AST/Mangle.h:                             raw_ostream &) = 0;
./tools/clang/include/clang/AST/Mangle.h:                             raw_ostream &) = 0;
./tools/clang/include/clang/AST/Mangle.h:                         raw_ostream &Out);
./tools/clang/include/clang/AST/Mangle.h:                       const BlockDecl *BD, raw_ostream &Out);
./tools/clang/include/clang/AST/Mangle.h:                       const BlockDecl *BD, raw_ostream &Out);
./tools/clang/include/clang/AST/Mangle.h:                   raw_ostream &Out);
./tools/clang/include/clang/AST/Mangle.h:  void mangleBlock(const BlockDecl *BD, raw_ostream &Out,
./tools/clang/include/clang/AST/Mangle.h:                            raw_ostream &);
./tools/clang/include/clang/AST/Mangle.h:                                          raw_ostream &) {
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/Attrs.inc.tmp:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void AcquiredAfterAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void AcquiredBeforeAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void AliasAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void AlignMac68kAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void AlignedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void AllocSizeAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void AlwaysInlineAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void AnalyzerNoReturnAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void AnnotateAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void ArcWeakrefUnavailableAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void ArgumentWithTypeTagAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void AsmLabelAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void AvailabilityAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void BlocksAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void C11NoReturnAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void CDeclAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void CFAuditedTransferAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void CFConsumedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void CFReturnsNotRetainedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void CFReturnsRetainedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void CFUnknownTransferAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void CUDAConstantAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void CUDADeviceAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void CUDAGlobalAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void CUDAHostAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void CUDALaunchBoundsAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void CUDASharedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void CXX11NoReturnAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void CarriesDependencyAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void CleanupAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void ColdAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void CommonAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void ConstAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void ConstructorAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void DLLExportAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void DLLImportAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void DeprecatedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void DestructorAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void ExclusiveLockFunctionAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void ExclusiveLocksRequiredAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void ExclusiveTrylockFunctionAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void FallThroughAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void FastCallAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void FinalAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void ForceInlineAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void FormatAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void FormatArgAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void GNUInlineAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void GuardedByAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void GuardedVarAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void HotAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void IBActionAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void IBOutletAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void IBOutletCollectionAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void InitPriorityAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void IntelOclBiccAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void LockReturnedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void LockableAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void LocksExcludedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void MBlazeInterruptHandlerAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void MBlazeSaveVolatilesAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void MSP430InterruptAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void MallocAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void MaxFieldAlignmentAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void MayAliasAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void MinSizeAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void Mips16Attr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void MsStructAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void MultipleInheritanceAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void NSBridgedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void NSConsumedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void NSConsumesSelfAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void NSReturnsAutoreleasedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void NSReturnsNotRetainedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void NSReturnsRetainedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void NakedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void NoCommonAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void NoDebugAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void NoInlineAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void NoInstrumentFunctionAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void NoMips16Attr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void NoReturnAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void NoSanitizeAddressAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void NoSanitizeMemoryAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void NoSanitizeThreadAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void NoThreadSafetyAnalysisAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void NoThrowAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void NonNullAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void ObjCExceptionAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void ObjCMethodFamilyAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void ObjCNSObjectAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void ObjCPreciseLifetimeAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void ObjCRequiresPropertyDefsAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void ObjCRequiresSuperAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void ObjCReturnsInnerPointerAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void ObjCRootClassAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void OpenCLKernelAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void OverloadableAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void OverrideAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void OwnershipAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void PackedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void PascalAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void PcsAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void PnaclCallAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void PtGuardedByAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void PtGuardedVarAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void Ptr32Attr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void Ptr64Attr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void PureAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void RegparmAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void ReqdWorkGroupSizeAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void ReturnsTwiceAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void ScopedLockableAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void SectionAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void SentinelAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void SharedLockFunctionAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void SharedLocksRequiredAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void SharedTrylockFunctionAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void SingleInheritanceAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void StdCallAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void TLSModelAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void ThisCallAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void TransparentUnionAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void TypeTagForDatatypeAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void TypeVisibilityAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void UnavailableAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void UnlockFunctionAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void UnusedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void UsedAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void UuidAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void VecReturnAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void VirtualInheritanceAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void VisibilityAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void WarnUnusedResultAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void WeakAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void WeakImportAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void WeakRefAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void Win64Attr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void WorkGroupSizeHintAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/Debug+Asserts/AttrImpl.inc.tmp:void X86ForceAlignArgPointerAttr::printPretty(raw_ostream &OS, const PrintingPolicy &Policy) const {
./tools/clang/include/clang/AST/DeclBase.h:  void print(raw_ostream &Out, unsigned Indentation = 0,
./tools/clang/include/clang/AST/DeclBase.h:  void print(raw_ostream &Out, const PrintingPolicy &Policy,
./tools/clang/include/clang/AST/DeclBase.h:                         raw_ostream &Out, const PrintingPolicy &Policy,
./tools/clang/include/clang/AST/DeclBase.h:  void dump(raw_ostream &Out) const;
./tools/clang/include/clang/AST/DeclBase.h:  void dumpXML(raw_ostream &OS) const;
./tools/clang/include/clang/AST/DeclBase.h:  virtual void print(raw_ostream &OS) const;
./tools/clang/include/clang/AST/CommentLexer.h:#include "llvm/Support/raw_ostream.h"
./tools/clang/include/clang/AST/TemplateBase.h:  void print(const PrintingPolicy &Policy, raw_ostream &Out) const;
./tools/clang/include/clang/AST/Stmt.h:  void dump(raw_ostream &OS, SourceManager &SM) const;
./tools/clang/include/clang/AST/Stmt.h:  void printPretty(raw_ostream &OS, PrinterHelper *Helper,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/AST/Attrs.inc:  virtual void printPretty(raw_ostream &OS,
./tools/clang/include/clang/Serialization/ASTWriter.h:  raw_ostream *Out;
./tools/clang/include/clang/Serialization/ASTWriter.h:               StringRef isysroot, raw_ostream *Out);
./tools/clang/include/clang/Sema/CodeCompleteConsumer.h:raw_ostream &operator<<(raw_ostream &OS,
./tools/clang/include/clang/Sema/CodeCompleteConsumer.h:  raw_ostream &OS;
./tools/clang/include/clang/Sema/CodeCompleteConsumer.h:                               raw_ostream &OS)
./tools/clang/include/clang/Sema/Lookup.h:  void print(raw_ostream &);
./tools/clang/include/clang/Sema/PrettyDeclStackTrace.h:  virtual void print(raw_ostream &OS) const;
./tools/clang/include/clang/Sema/Initialization.h:  void dump(raw_ostream &OS) const;
./tools/clang/include/clang/Rewrite/Frontend/Rewriters.h:void RewriteMacrosInInput(Preprocessor &PP, raw_ostream *OS);
./tools/clang/include/clang/Rewrite/Frontend/Rewriters.h:void DoRewriteTest(Preprocessor &PP, raw_ostream *OS);
./tools/clang/include/clang/Rewrite/Frontend/Rewriters.h:void RewriteIncludesInInput(Preprocessor &PP, raw_ostream *OS,
./tools/clang/include/clang/Rewrite/Frontend/FixItRewriter.h:  bool WriteFixedFile(FileID ID, raw_ostream &OS);
./tools/clang/include/clang/Rewrite/Frontend/ASTConsumers.h:                                raw_ostream *OS,
./tools/clang/include/clang/Rewrite/Frontend/ASTConsumers.h:                                raw_ostream *OS,
./tools/clang/include/clang/Rewrite/Frontend/ASTConsumers.h:ASTConsumer *CreateHTMLPrinter(raw_ostream *OS, Preprocessor &PP,
./tools/clang/include/clang/Rewrite/Core/Rewriter.h:  raw_ostream &write(raw_ostream &Stream) const;
./tools/clang/include/clang/Tooling/FileMatchTrie.h:                           raw_ostream &Error) const;
./tools/clang/utils/TableGen/ClangCommentHTMLNamedCharacterReferenceEmitter.cpp:                                                  raw_ostream &OS) {
./tools/clang/utils/TableGen/TableGenBackends.h:  class raw_ostream;
./tools/clang/utils/TableGen/TableGenBackends.h:using llvm::raw_ostream;
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangDeclContext(RecordKeeper &RK, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangASTNodes(RecordKeeper &RK, raw_ostream &OS,
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangAttrClass(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangAttrImpl(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangAttrList(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangAttrPCHRead(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangAttrPCHWrite(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangAttrSpellingList(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangAttrSpellingListIndex(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangAttrLateParsedList(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangAttrTemplateInstantiate(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangAttrParsedAttrList(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangAttrParsedAttrKinds(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangAttrDump(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangDiagsDefs(RecordKeeper &Records, raw_ostream &OS,
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangDiagGroups(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangDiagsIndexName(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangSACheckers(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangCommentHTMLTags(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangCommentHTMLTagsProperties(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangCommentHTMLNamedCharacterReferences(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangCommentCommandInfo(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitClangCommentCommandList(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitNeon(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitNeonSema(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitNeonTest(RecordKeeper &Records, raw_ostream &OS);
./tools/clang/utils/TableGen/TableGenBackends.h:void EmitOptParser(RecordKeeper &Records, raw_ostream &OS, bool GenDefs);
./tools/clang/utils/TableGen/NeonEmitter.cpp:  void run(raw_ostream &o);
./tools/clang/utils/TableGen/NeonEmitter.cpp:  void runHeader(raw_ostream &o);
./tools/clang/utils/TableGen/NeonEmitter.cpp:  void runTests(raw_ostream &o);
./tools/clang/utils/TableGen/NeonEmitter.cpp:  void emitIntrinsic(raw_ostream &OS, Record *R);
./tools/clang/utils/TableGen/NeonEmitter.cpp:void NeonEmitter::run(raw_ostream &OS) {
./tools/clang/utils/TableGen/NeonEmitter.cpp:void NeonEmitter::emitIntrinsic(raw_ostream &OS, Record *R) {
./tools/clang/utils/TableGen/NeonEmitter.cpp:void NeonEmitter::runHeader(raw_ostream &OS) {
./tools/clang/utils/TableGen/NeonEmitter.cpp:void NeonEmitter::runTests(raw_ostream &OS) {
./tools/clang/utils/TableGen/NeonEmitter.cpp:void EmitNeon(RecordKeeper &Records, raw_ostream &OS) {
./tools/clang/utils/TableGen/NeonEmitter.cpp:void EmitNeonSema(RecordKeeper &Records, raw_ostream &OS) {
./tools/clang/utils/TableGen/NeonEmitter.cpp:void EmitNeonTest(RecordKeeper &Records, raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangCommentCommandInfoEmitter.cpp:void EmitClangCommentCommandInfo(RecordKeeper &Records, raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangCommentCommandInfoEmitter.cpp:void EmitClangCommentCommandList(RecordKeeper &Records, raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangSACheckersEmitter.cpp:void EmitClangSACheckers(RecordKeeper &Records, raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangCommentHTMLTagsEmitter.cpp:void EmitClangCommentHTMLTags(RecordKeeper &Records, raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangCommentHTMLTagsEmitter.cpp:                                        raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    virtual void writeAccessors(raw_ostream &OS) const = 0;
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    virtual void writeAccessorDefinitions(raw_ostream &OS) const {}
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    virtual void writeCloneArgs(raw_ostream &OS) const = 0;
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    virtual void writeTemplateInstantiationArgs(raw_ostream &OS) const = 0;
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    virtual void writeTemplateInstantiation(raw_ostream &OS) const {}
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    virtual void writeCtorBody(raw_ostream &OS) const {}
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    virtual void writeCtorInitializers(raw_ostream &OS) const = 0;
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    virtual void writeCtorParameters(raw_ostream &OS) const = 0;
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    virtual void writeDeclarations(raw_ostream &OS) const = 0;
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    virtual void writePCHReadArgs(raw_ostream &OS) const = 0;
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    virtual void writePCHReadDecls(raw_ostream &OS) const = 0;
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    virtual void writePCHWrite(raw_ostream &OS) const = 0;
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    virtual void writeValue(raw_ostream &OS) const = 0;
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    virtual void writeDump(raw_ostream &OS) const = 0;
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    virtual void writeDumpChildren(raw_ostream &OS) const {}
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    virtual void writeHasChildren(raw_ostream &OS) const { OS << "false"; }
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeAccessors(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeCloneArgs(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeTemplateInstantiationArgs(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeCtorInitializers(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeCtorParameters(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeDeclarations(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writePCHReadDecls(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writePCHReadArgs(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writePCHWrite(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeValue(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeDump(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeAccessors(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeCloneArgs(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeTemplateInstantiationArgs(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeCtorBody(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeCtorInitializers(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeCtorParameters(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeDeclarations(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writePCHReadDecls(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writePCHReadArgs(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writePCHWrite(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeValue(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeDump(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeAccessors(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeAccessorDefinitions(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeCloneArgs(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeTemplateInstantiationArgs(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeCtorBody(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeCtorInitializers(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeCtorParameters(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeDeclarations(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writePCHReadArgs(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writePCHReadDecls(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writePCHWrite(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeValue(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeDump(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeDumpChildren(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeHasChildren(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeAccessors(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeCloneArgs(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeTemplateInstantiationArgs(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeCtorBody(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeCtorInitializers(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeCtorParameters(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeDeclarations(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writePCHReadDecls(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writePCHReadArgs(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writePCHWrite(raw_ostream &OS) const{
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeValue(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeDump(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeAccessors(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeCloneArgs(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeTemplateInstantiationArgs(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeCtorInitializers(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeCtorParameters(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeDeclarations(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writePCHReadDecls(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writePCHReadArgs(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writePCHWrite(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeValue(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeDump(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeAccessors(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeCloneArgs(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeTemplateInstantiationArgs(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeCtorBody(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeCtorInitializers(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeCtorParameters(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeDeclarations(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writePCHReadDecls(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writePCHReadArgs(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writePCHWrite(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeValue(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeDump(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeTemplateInstantiationArgs(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeTemplateInstantiation(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeDump(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeDumpChildren(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeHasChildren(raw_ostream &OS) const { OS << "true"; }
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeTemplateInstantiationArgs(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeTemplateInstantiation(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeDump(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeDumpChildren(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    void writeHasChildren(raw_ostream &OS) const {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:static void writeAvailabilityValue(raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:                                     raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    << "raw_ostream &OS, const PrintingPolicy &Policy) const {\n";
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:static void writeAttrAccessorDefinition(Record &R, raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:void EmitClangAttrClass(RecordKeeper &Records, raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:    OS << "  virtual void printPretty(raw_ostream &OS,\n"
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:void EmitClangAttrImpl(RecordKeeper &Records, raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:static void EmitAttrList(raw_ostream &OS, StringRef Class,
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:void EmitClangAttrList(RecordKeeper &Records, raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:void EmitClangAttrPCHRead(RecordKeeper &Records, raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:void EmitClangAttrPCHWrite(RecordKeeper &Records, raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:void EmitClangAttrSpellingList(RecordKeeper &Records, raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:void EmitClangAttrSpellingListIndex(RecordKeeper &Records, raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:void EmitClangAttrLateParsedList(RecordKeeper &Records, raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:void EmitClangAttrTemplateInstantiate(RecordKeeper &Records, raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:void EmitClangAttrParsedAttrList(RecordKeeper &Records, raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:void EmitClangAttrParsedAttrKinds(RecordKeeper &Records, raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangAttrEmitter.cpp:void EmitClangAttrDump(RecordKeeper &Records, raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangASTNodesEmitter.cpp:  std::pair<Record *, Record *> EmitNode (const ChildMap &Tree, raw_ostream& OS,
./tools/clang/utils/TableGen/ClangASTNodesEmitter.cpp:  void run(raw_ostream &OS);
./tools/clang/utils/TableGen/ClangASTNodesEmitter.cpp:                                                           raw_ostream &OS,
./tools/clang/utils/TableGen/ClangASTNodesEmitter.cpp:void ClangASTNodesEmitter::run(raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangASTNodesEmitter.cpp:void EmitClangASTNodes(RecordKeeper &RK, raw_ostream &OS,
./tools/clang/utils/TableGen/ClangASTNodesEmitter.cpp:void EmitClangDeclContext(RecordKeeper &Records, raw_ostream &OS) {
./tools/clang/utils/TableGen/OptParserEmitter.cpp:static raw_ostream &write_cstring(raw_ostream &OS, llvm::StringRef Str) {
./tools/clang/utils/TableGen/OptParserEmitter.cpp:void EmitOptParser(RecordKeeper &Records, raw_ostream &OS, bool GenDefs) {
./tools/clang/utils/TableGen/TableGen.cpp:bool ClangTableGenMain(raw_ostream &OS, RecordKeeper &Records) {
./tools/clang/utils/TableGen/Debug+Asserts/ClangASTNodesEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/utils/TableGen/Debug+Asserts/ClangASTNodesEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/utils/TableGen/Debug+Asserts/ClangCommentHTMLTagsEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/utils/TableGen/Debug+Asserts/ClangCommentHTMLTagsEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/utils/TableGen/Debug+Asserts/ClangSACheckersEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/utils/TableGen/Debug+Asserts/ClangSACheckersEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/utils/TableGen/Debug+Asserts/ClangCommentCommandInfoEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/utils/TableGen/Debug+Asserts/ClangCommentCommandInfoEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/utils/TableGen/Debug+Asserts/ClangDiagnosticsEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/utils/TableGen/Debug+Asserts/ClangDiagnosticsEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/utils/TableGen/Debug+Asserts/NeonEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/utils/TableGen/Debug+Asserts/NeonEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/utils/TableGen/Debug+Asserts/TableGen.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/utils/TableGen/Debug+Asserts/TableGen.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/utils/TableGen/Debug+Asserts/ClangAttrEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/utils/TableGen/Debug+Asserts/ClangAttrEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/utils/TableGen/Debug+Asserts/ClangCommentHTMLNamedCharacterReferenceEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/utils/TableGen/Debug+Asserts/ClangCommentHTMLNamedCharacterReferenceEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/utils/TableGen/Debug+Asserts/OptParserEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/utils/TableGen/Debug+Asserts/OptParserEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/utils/TableGen/ClangDiagnosticsEmitter.cpp:void EmitClangDiagsDefs(RecordKeeper &Records, raw_ostream &OS,
./tools/clang/utils/TableGen/ClangDiagnosticsEmitter.cpp:void EmitClangDiagGroups(RecordKeeper &Records, raw_ostream &OS) {
./tools/clang/utils/TableGen/ClangDiagnosticsEmitter.cpp:void EmitClangDiagsIndexName(RecordKeeper &Records, raw_ostream &OS) {
./tools/clang/tools/clang-check/Debug+Asserts/ClangCheck.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/clang-check/Debug+Asserts/ClangCheck.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/diagtool/ListWarnings.cpp:static void printEntries(std::vector<Entry> &entries, llvm::raw_ostream &out) {
./tools/clang/tools/diagtool/ListWarnings.cpp:int ListWarnings::run(unsigned int argc, char **argv, llvm::raw_ostream &out) {
./tools/clang/tools/diagtool/DiagTool.cpp:void DiagTools::printCommands(llvm::raw_ostream &out) {
./tools/clang/tools/diagtool/TreeView.cpp:static bool showColors(llvm::raw_ostream &out) {
./tools/clang/tools/diagtool/TreeView.cpp:static void setColor(bool ShowColors, llvm::raw_ostream &out,
./tools/clang/tools/diagtool/TreeView.cpp:                     llvm::raw_ostream::Colors Color) {
./tools/clang/tools/diagtool/TreeView.cpp:static void resetColor(bool ShowColors, llvm::raw_ostream &out) {
./tools/clang/tools/diagtool/TreeView.cpp:static void printGroup(llvm::raw_ostream &out, const GroupRecord &Group,
./tools/clang/tools/diagtool/TreeView.cpp:  setColor(ShowColors, out, llvm::raw_ostream::YELLOW);
./tools/clang/tools/diagtool/TreeView.cpp:          setColor(ShowColors, out, llvm::raw_ostream::GREEN);
./tools/clang/tools/diagtool/TreeView.cpp:static int showGroup(llvm::raw_ostream &out, StringRef RootGroup,
./tools/clang/tools/diagtool/TreeView.cpp:static int showAll(llvm::raw_ostream &out, bool FlagsOnly) {
./tools/clang/tools/diagtool/TreeView.cpp:int TreeView::run(unsigned int argc, char **argv, llvm::raw_ostream &out) {
./tools/clang/tools/diagtool/TreeView.cpp:    setColor(true, out, llvm::raw_ostream::GREEN);
./tools/clang/tools/diagtool/Debug+Asserts/ListWarnings.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/diagtool/Debug+Asserts/ListWarnings.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/diagtool/Debug+Asserts/DiagTool.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/diagtool/Debug+Asserts/DiagTool.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/diagtool/Debug+Asserts/diagtool_main.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/tools/diagtool/Debug+Asserts/diagtool_main.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/diagtool/Debug+Asserts/TreeView.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/diagtool/Debug+Asserts/TreeView.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/diagtool/Debug+Asserts/ShowEnabledWarnings.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/diagtool/Debug+Asserts/ShowEnabledWarnings.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/diagtool/ShowEnabledWarnings.cpp:int ShowEnabledWarnings::run(unsigned int argc, char **argv, raw_ostream &Out) {
./tools/clang/tools/diagtool/DiagTool.h:#include "llvm/Support/raw_ostream.h"
./tools/clang/tools/diagtool/DiagTool.h:  virtual int run(unsigned argc, char *argv[], llvm::raw_ostream &out) = 0;
./tools/clang/tools/diagtool/DiagTool.h:  void printCommands(llvm::raw_ostream &out);  
./tools/clang/tools/diagtool/DiagTool.h:  virtual int run(unsigned argc, char *argv[], llvm::raw_ostream &out);\
./tools/clang/tools/libclang/CLog.h:#include "llvm/Support/raw_ostream.h"
./tools/clang/tools/libclang/CXStoredDiagnostic.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/tools/libclang/CIndex.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/tools/libclang/CIndex.cpp:  // Write the result out to stderr avoiding errs() because raw_ostreams can
./tools/clang/tools/libclang/CIndex.cpp:  raw_ostream &OS = llvm::errs();
./tools/clang/tools/libclang/CXComment.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/tools/libclang/CIndexDiagnostic.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/tools/libclang/SimpleFormatContext.h:#include "llvm/Support/raw_ostream.h"
./tools/clang/tools/libclang/CIndexUSRs.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/tools/libclang/CIndexInclusionStack.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/tools/libclang/Debug+Asserts/CXStoredDiagnostic.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/libclang/Debug+Asserts/CXStoredDiagnostic.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/libclang/Debug+Asserts/CIndexDiagnostic.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/libclang/Debug+Asserts/CIndexDiagnostic.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/libclang/Debug+Asserts/Indexing.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/libclang/Debug+Asserts/Indexing.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/libclang/Debug+Asserts/CIndexCodeCompletion.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/libclang/Debug+Asserts/CIndexCodeCompletion.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/libclang/Debug+Asserts/CXSourceLocation.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/libclang/Debug+Asserts/CXSourceLocation.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/libclang/Debug+Asserts/CIndexUSRs.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/libclang/Debug+Asserts/CIndexUSRs.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/libclang/Debug+Asserts/CIndexHigh.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/libclang/Debug+Asserts/CIndexHigh.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/libclang/Debug+Asserts/CXComment.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/libclang/Debug+Asserts/CXComment.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/libclang/Debug+Asserts/CXType.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/libclang/Debug+Asserts/CXType.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/libclang/Debug+Asserts/CIndex.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/libclang/Debug+Asserts/CIndex.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/libclang/Debug+Asserts/IndexingContext.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/libclang/Debug+Asserts/IndexingContext.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/libclang/Debug+Asserts/ARCMigrate.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/libclang/Debug+Asserts/ARCMigrate.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/libclang/Debug+Asserts/CXCursor.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/libclang/Debug+Asserts/CXCursor.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/libclang/Debug+Asserts/CIndexer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/tools/libclang/Debug+Asserts/CIndexer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/libclang/Debug+Asserts/CIndexInclusionStack.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/libclang/Debug+Asserts/CIndexInclusionStack.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/libclang/Debug+Asserts/CXString.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/libclang/Debug+Asserts/CXString.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/libclang/CIndexCodeCompletion.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/tools/libclang/CIndexer.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/tools/driver/cc1_main.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/tools/driver/driver.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/tools/driver/driver.cpp:static void ApplyOneQAOverride(raw_ostream &OS,
./tools/clang/tools/driver/driver.cpp:  raw_ostream *OS = &llvm::errs();
./tools/clang/tools/driver/cc1as_main.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/tools/driver/cc1as_main.cpp:static formatted_raw_ostream *GetOutputStream(AssemblerInvocation &Opts,
./tools/clang/tools/driver/cc1as_main.cpp:  return new formatted_raw_ostream(*Out, formatted_raw_ostream::DELETE_STREAM);
./tools/clang/tools/driver/cc1as_main.cpp:  formatted_raw_ostream *Out = GetOutputStream(Opts, Diags, IsBinary);
./tools/clang/tools/driver/Debug+Asserts/cc1as_main.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/driver/Debug+Asserts/cc1as_main.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/driver/Debug+Asserts/cc1_main.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/driver/Debug+Asserts/cc1_main.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/driver/Debug+Asserts/driver.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/driver/Debug+Asserts/driver.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/extra/remove-cstr-calls/Debug+Asserts/RemoveCStrCalls.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/extra/remove-cstr-calls/Debug+Asserts/RemoveCStrCalls.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/extra/remove-cstr-calls/RemoveCStrCalls.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/tools/extra/tool-template/Debug+Asserts/ToolTemplate.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/extra/tool-template/Debug+Asserts/ToolTemplate.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/extra/clang-format/Debug+Asserts/ClangFormat.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/extra/clang-format/Debug+Asserts/ClangFormat.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/extra/cpp11-migrate/Transform.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/tools/extra/cpp11-migrate/Transform.h:#include "llvm/Support/raw_ostream.h"
./tools/clang/tools/extra/cpp11-migrate/Debug+Asserts/Transform.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/tools/extra/cpp11-migrate/Debug+Asserts/Transform.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/extra/cpp11-migrate/Debug+Asserts/LoopConvert/LoopConvert.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/extra/cpp11-migrate/Debug+Asserts/LoopConvert/LoopConvert.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/extra/cpp11-migrate/Debug+Asserts/LoopConvert/LoopActions.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/extra/cpp11-migrate/Debug+Asserts/LoopConvert/LoopActions.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/extra/cpp11-migrate/Debug+Asserts/UseAuto/UseAutoActions.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/extra/cpp11-migrate/Debug+Asserts/UseAuto/UseAutoActions.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/extra/cpp11-migrate/Debug+Asserts/UseAuto/UseAuto.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/extra/cpp11-migrate/Debug+Asserts/UseAuto/UseAuto.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/extra/cpp11-migrate/Debug+Asserts/UseNullptr/UseNullptr.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/extra/cpp11-migrate/Debug+Asserts/UseNullptr/UseNullptr.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/extra/cpp11-migrate/Debug+Asserts/UseNullptr/NullptrActions.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/extra/cpp11-migrate/Debug+Asserts/UseNullptr/NullptrActions.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/extra/cpp11-migrate/Debug+Asserts/Cpp11Migrate.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/extra/cpp11-migrate/Debug+Asserts/Cpp11Migrate.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/extra/cpp11-migrate/Debug+Asserts/Transforms.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/extra/cpp11-migrate/Debug+Asserts/Transforms.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/arcmt-test/Debug+Asserts/arcmt-test.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/tools/arcmt-test/Debug+Asserts/arcmt-test.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/tools/arcmt-test/arcmt-test.cpp:                                raw_ostream &OS);
./tools/clang/tools/arcmt-test/arcmt-test.cpp:                             raw_ostream &OS);
./tools/clang/tools/arcmt-test/arcmt-test.cpp:  raw_ostream &OS;
./tools/clang/tools/arcmt-test/arcmt-test.cpp:  PrintTransforms(raw_ostream &OS)
./tools/clang/tools/arcmt-test/arcmt-test.cpp:static void printResult(FileRemapper &remapper, raw_ostream &OS) {
./tools/clang/tools/arcmt-test/arcmt-test.cpp:                                raw_ostream &OS) {
./tools/clang/tools/arcmt-test/arcmt-test.cpp:                             raw_ostream &OS) {
./tools/clang/www/hacking.html:      support <tt>raw_ostream</tt> based interfaces for textual
./tools/clang/www/hacking.html:      output. See <a href="http://llvm.org/docs/CodingStandards.html#ll_raw_ostream">Coding
./tools/clang/examples/clang-interpreter/main.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/examples/clang-test/Debug+Asserts/main.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/examples/clang-test/Debug+Asserts/main.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/examples/clang-test/main.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/examples/clang-test/main.cpp:  formatted_raw_ostream FOS(Out->os()); 
./tools/clang/examples/PrintFunctionNames/PrintFunctionNames.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/examples/PrintFunctionNames/PrintFunctionNames.cpp:  void PrintHelp(llvm::raw_ostream& ros) {
./tools/clang/docs/ClangPlugins.rst:    #include "llvm/Support/raw_ostream.h"
./tools/clang/docs/ClangPlugins.rst:      void PrintHelp(llvm::raw_ostream& ros) {
./tools/clang/lib/CodeGen/TargetInfo.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/CodeGen/TargetInfo.cpp:  raw_ostream &OS = llvm::errs();
./tools/clang/lib/CodeGen/CGObjCMac.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/CodeGen/CGRecordLayout.h:  void print(raw_ostream &OS) const;
./tools/clang/lib/CodeGen/CGRecordLayout.h:  void print(raw_ostream &OS) const;
./tools/clang/lib/CodeGen/BackendUtil.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/CodeGen/BackendUtil.cpp:  bool AddEmitPasses(BackendAction Action, formatted_raw_ostream &OS,
./tools/clang/lib/CodeGen/BackendUtil.cpp:  void EmitAssembly(BackendAction Action, raw_ostream *OS);
./tools/clang/lib/CodeGen/BackendUtil.cpp:                                       formatted_raw_ostream &OS,
./tools/clang/lib/CodeGen/BackendUtil.cpp:void EmitAssemblyHelper::EmitAssembly(BackendAction Action, raw_ostream *OS) {
./tools/clang/lib/CodeGen/BackendUtil.cpp:  llvm::formatted_raw_ostream FormattedOS;
./tools/clang/lib/CodeGen/BackendUtil.cpp:    FormattedOS.setStream(*OS, formatted_raw_ostream::PRESERVE_STREAM);
./tools/clang/lib/CodeGen/BackendUtil.cpp:    FormattedOS.setStream(*OS, formatted_raw_ostream::PRESERVE_STREAM);
./tools/clang/lib/CodeGen/BackendUtil.cpp:                              BackendAction Action, raw_ostream *OS) {
./tools/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp:void CGRecordLayout::print(raw_ostream &OS) const {
./tools/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp:void CGBitFieldInfo::print(raw_ostream &OS) const {
./tools/clang/lib/CodeGen/Debug+Asserts/CGCUDANV.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGCUDANV.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/MicrosoftCXXABI.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/MicrosoftCXXABI.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGExprComplex.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGExprComplex.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGBuiltin.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGBuiltin.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGRTTI.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGRTTI.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGObjCRuntime.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGObjCRuntime.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGCUDARuntime.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGCUDARuntime.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGOpenCLRuntime.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGOpenCLRuntime.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGVTables.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGVTables.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CodeGenAction.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CodeGenAction.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGExprAgg.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGExprAgg.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGCall.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGCall.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/ItaniumCXXABI.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/ItaniumCXXABI.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGExprConstant.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGExprConstant.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGObjCMac.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGObjCMac.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGCXXABI.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGCXXABI.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGClass.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGClass.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGStmt.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGStmt.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGBlocks.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGBlocks.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGDeclCXX.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGDeclCXX.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/TargetInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/TargetInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGExprCXX.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGExprCXX.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGRecordLayoutBuilder.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGRecordLayoutBuilder.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/BackendUtil.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/BackendUtil.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGObjC.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGObjC.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGExpr.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGExpr.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGVTT.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGVTT.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGExprScalar.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGExprScalar.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGObjCGNU.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGObjCGNU.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGDebugInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGDebugInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGCleanup.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGCleanup.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGDecl.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGDecl.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CodeGenFunction.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CodeGenFunction.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CodeGenModule.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CodeGenModule.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CodeGenTBAA.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CodeGenTBAA.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGCXX.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGCXX.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CodeGenTypes.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CodeGenTypes.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/ModuleBuilder.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/ModuleBuilder.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/Debug+Asserts/CGException.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/CodeGen/Debug+Asserts/CGException.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/CodeGen/CodeGenAction.cpp:    raw_ostream *AsmOutStream;
./tools/clang/lib/CodeGen/CodeGenAction.cpp:                    raw_ostream *OS,
./tools/clang/lib/CodeGen/CodeGenAction.cpp:static raw_ostream *GetOutputStream(CompilerInstance &CI,
./tools/clang/lib/CodeGen/CodeGenAction.cpp:  OwningPtr<raw_ostream> OS(GetOutputStream(CI, InFile, BA));
./tools/clang/lib/CodeGen/CodeGenAction.cpp:    raw_ostream *OS = GetOutputStream(CI, getCurrentFile(), BA);
./tools/clang/lib/StaticAnalyzer/Checkers/ArrayBoundCheckerV2.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/ArrayBoundCheckerV2.cpp:  void dumpToStream(raw_ostream &os) const;
./tools/clang/lib/StaticAnalyzer/Checkers/ArrayBoundCheckerV2.cpp:void RegionRawOffsetV2::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Checkers/CheckObjCInstMethSignature.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/IdempotentOperationChecker.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/LLVMConventionsChecker.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/ObjCSelfInitChecker.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/ObjCSelfInitChecker.cpp:  void printState(raw_ostream &Out, ProgramStateRef State,
./tools/clang/lib/StaticAnalyzer/Checkers/ObjCSelfInitChecker.cpp:void ObjCSelfInitChecker::printState(raw_ostream &Out, ProgramStateRef State,
./tools/clang/lib/StaticAnalyzer/Checkers/CallAndMessageChecker.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/TraversalChecker.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/UndefCapturedBlockVarChecker.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/CStringSyntaxChecker.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/BasicObjCFoundationChecks.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/MacOSXAPIChecker.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/ObjCMissingSuperCallChecker.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/UndefResultChecker.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/ObjCContainersASTChecker.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/StackAddrEscapeChecker.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/StackAddrEscapeChecker.cpp:  static SourceRange genName(raw_ostream &os, const MemRegion *R,
./tools/clang/lib/StaticAnalyzer/Checkers/StackAddrEscapeChecker.cpp:SourceRange StackAddrEscapeChecker::genName(raw_ostream &os, const MemRegion *R,
./tools/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker.cpp:  void print(raw_ostream &Out) const;
./tools/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker.cpp:void RefVal::print(raw_ostream &Out) const {
./tools/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker.cpp:  void printState(raw_ostream &Out, ProgramStateRef State,
./tools/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker.cpp:void RetainCountChecker::printState(raw_ostream &Out, ProgramStateRef State,
./tools/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:  void dump(raw_ostream &OS) const {
./tools/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:  void printState(raw_ostream &Out, ProgramStateRef State,
./tools/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:  static bool SummarizeValue(raw_ostream &os, SVal V);
./tools/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:  static bool SummarizeRegion(raw_ostream &os, const MemRegion *MR);
./tools/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:bool MallocChecker::SummarizeValue(raw_ostream &os, SVal V) {
./tools/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:bool MallocChecker::SummarizeRegion(raw_ostream &os,
./tools/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:void MallocChecker::printState(raw_ostream &Out, ProgramStateRef State,
./tools/clang/lib/StaticAnalyzer/Checkers/MallocSizeofChecker.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/UnixAPIChecker.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/MacOSKeychainAPIChecker.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/CStringSyntaxChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/CStringSyntaxChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/RetainCountChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/RetainCountChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/CheckObjCInstMethSignature.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/CheckObjCInstMethSignature.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/CallAndMessageChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/CallAndMessageChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/MacOSKeychainAPIChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/MacOSKeychainAPIChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/MallocSizeofChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/MallocSizeofChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/UndefResultChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/UndefResultChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/UndefCapturedBlockVarChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/UndefCapturedBlockVarChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/ObjCContainersASTChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/ObjCContainersASTChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/CheckObjCDealloc.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/CheckObjCDealloc.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/MacOSXAPIChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/MacOSXAPIChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/DirectIvarAssignment.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/DirectIvarAssignment.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/CStringChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/CStringChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/DereferenceChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/DereferenceChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/DebugCheckers.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/DebugCheckers.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/ObjCUnusedIVarsChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/ObjCUnusedIVarsChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/VLASizeChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/VLASizeChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/ArrayBoundCheckerV2.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/ArrayBoundCheckerV2.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/AttrNonNullChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/AttrNonNullChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/BasicObjCFoundationChecks.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/BasicObjCFoundationChecks.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/LLVMConventionsChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/LLVMConventionsChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/DeadStoresChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/DeadStoresChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/MallocChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/MallocChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/ObjCSelfInitChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/ObjCSelfInitChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/NSErrorChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/NSErrorChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/GenericTaintChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/GenericTaintChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/UnixAPIChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/UnixAPIChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/ObjCMissingSuperCallChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/ObjCMissingSuperCallChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/AnalyzerStatsChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/AnalyzerStatsChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/NoReturnFunctionChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/NoReturnFunctionChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/StackAddrEscapeChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/StackAddrEscapeChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/CheckSecuritySyntaxOnly.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/CheckSecuritySyntaxOnly.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/TraversalChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/TraversalChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/VirtualCallChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/VirtualCallChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/IvarInvalidationChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/IvarInvalidationChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/IdempotentOperationChecker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Checkers/Debug+Asserts/IdempotentOperationChecker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Checkers/VLASizeChecker.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/VirtualCallChecker.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/AnalyzerStatsChecker.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/CStringChecker.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/CStringChecker.cpp:  static bool SummarizeRegion(raw_ostream &os, ASTContext &Ctx,
./tools/clang/lib/StaticAnalyzer/Checkers/CStringChecker.cpp:bool CStringChecker::SummarizeRegion(raw_ostream &os, ASTContext &Ctx,
./tools/clang/lib/StaticAnalyzer/Checkers/DereferenceChecker.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Checkers/DereferenceChecker.cpp:  static void AddDerefSource(raw_ostream &os,
./tools/clang/lib/StaticAnalyzer/Checkers/DereferenceChecker.cpp:DereferenceChecker::AddDerefSource(raw_ostream &os,
./tools/clang/lib/StaticAnalyzer/Checkers/NSErrorChecker.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Frontend/AnalysisConsumer.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Frontend/AnalysisConsumer.cpp:  OwningPtr<raw_ostream> Out;
./tools/clang/lib/StaticAnalyzer/Frontend/AnalysisConsumer.cpp:  UbigraphViz(raw_ostream *out, llvm::sys::Path& dir,
./tools/clang/lib/StaticAnalyzer/Frontend/AnalysisConsumer.cpp:UbigraphViz::UbigraphViz(raw_ostream *out, llvm::sys::Path& dir,
./tools/clang/lib/StaticAnalyzer/Frontend/CheckerRegistration.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Frontend/CheckerRegistration.cpp:void ento::printCheckerHelp(raw_ostream &out, ArrayRef<std::string> plugins) {
./tools/clang/lib/StaticAnalyzer/Frontend/Debug+Asserts/CheckerRegistration.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/StaticAnalyzer/Frontend/Debug+Asserts/CheckerRegistration.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Frontend/Debug+Asserts/AnalysisConsumer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Frontend/Debug+Asserts/AnalysisConsumer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Frontend/Debug+Asserts/FrontendActions.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/StaticAnalyzer/Frontend/Debug+Asserts/FrontendActions.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Core/SymbolManager.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Core/SymbolManager.cpp:static void print(raw_ostream &os, BinaryOperator::Opcode Op) {
./tools/clang/lib/StaticAnalyzer/Core/SymbolManager.cpp:void SymIntExpr::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/SymbolManager.cpp:void IntSymExpr::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/SymbolManager.cpp:void SymSymExpr::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/SymbolManager.cpp:void SymbolCast::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/SymbolManager.cpp:void SymbolConjured::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/SymbolManager.cpp:void SymbolDerived::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/SymbolManager.cpp:void SymbolExtent::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/SymbolManager.cpp:void SymbolMetadata::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/SymbolManager.cpp:void SymbolRegionValue::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/ProgramState.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Core/ProgramState.cpp:void ProgramState::print(raw_ostream &Out,
./tools/clang/lib/StaticAnalyzer/Core/ProgramState.cpp:void ProgramState::printDOT(raw_ostream &Out) const {
./tools/clang/lib/StaticAnalyzer/Core/ProgramState.cpp:void ProgramState::printTaint(raw_ostream &Out,
./tools/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp:void ExprEngine::printState(raw_ostream &Out, ProgramStateRef State,
./tools/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp:  static void printLocation(raw_ostream &Out, SourceLocation SLoc) {
./tools/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp:  void print(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp:  void print(ProgramStateRef St, raw_ostream &Out,
./tools/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp:void RangeConstraintManager::print(ProgramStateRef St, raw_ostream &Out,
./tools/clang/lib/StaticAnalyzer/Core/RegionStore.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Core/RegionStore.cpp:  raw_ostream &operator<<(raw_ostream &os, BindingKey K) {
./tools/clang/lib/StaticAnalyzer/Core/RegionStore.cpp:  void dump(raw_ostream &OS, const char *nl) const {
./tools/clang/lib/StaticAnalyzer/Core/RegionStore.cpp:  void print(Store store, raw_ostream &Out, const char* nl,
./tools/clang/lib/StaticAnalyzer/Core/RegionStore.cpp:void RegionStoreManager::print(Store store, raw_ostream &OS,
./tools/clang/lib/StaticAnalyzer/Core/PlistDiagnostics.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Core/PlistDiagnostics.cpp:static raw_ostream &Indent(raw_ostream &o, const unsigned indent) {
./tools/clang/lib/StaticAnalyzer/Core/PlistDiagnostics.cpp:static void EmitLocation(raw_ostream &o, const SourceManager &SM,
./tools/clang/lib/StaticAnalyzer/Core/PlistDiagnostics.cpp:static void EmitLocation(raw_ostream &o, const SourceManager &SM,
./tools/clang/lib/StaticAnalyzer/Core/PlistDiagnostics.cpp:static void EmitRange(raw_ostream &o, const SourceManager &SM,
./tools/clang/lib/StaticAnalyzer/Core/PlistDiagnostics.cpp:static raw_ostream &EmitString(raw_ostream &o, StringRef s) {
./tools/clang/lib/StaticAnalyzer/Core/PlistDiagnostics.cpp:static void ReportControlFlow(raw_ostream &o,
./tools/clang/lib/StaticAnalyzer/Core/PlistDiagnostics.cpp:static void ReportEvent(raw_ostream &o, const PathDiagnosticPiece& P,
./tools/clang/lib/StaticAnalyzer/Core/PlistDiagnostics.cpp:static void ReportPiece(raw_ostream &o,
./tools/clang/lib/StaticAnalyzer/Core/PlistDiagnostics.cpp:static void ReportCall(raw_ostream &o,
./tools/clang/lib/StaticAnalyzer/Core/PlistDiagnostics.cpp:static void ReportMacro(raw_ostream &o,
./tools/clang/lib/StaticAnalyzer/Core/PlistDiagnostics.cpp:static void ReportDiag(raw_ostream &o, const PathDiagnosticPiece& P,
./tools/clang/lib/StaticAnalyzer/Core/PlistDiagnostics.cpp:static void ReportPiece(raw_ostream &o,
./tools/clang/lib/StaticAnalyzer/Core/BugReporterVisitors.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Core/BugReporterVisitors.cpp:bool ConditionBRVisitor::patternMatch(const Expr *Ex, raw_ostream &Out,
./tools/clang/lib/StaticAnalyzer/Core/SVals.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Core/SVals.cpp:void SVal::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/SVals.cpp:void NonLoc::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/SVals.cpp:void Loc::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/PathDiagnostic.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Core/PathDiagnostic.cpp:static inline void describeClass(raw_ostream &Out, const CXXRecordDecl *D,
./tools/clang/lib/StaticAnalyzer/Core/PathDiagnostic.cpp:static bool describeCodeDecl(raw_ostream &Out, const Decl *D,
./tools/clang/lib/StaticAnalyzer/Core/AnalyzerOptions.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Core/CallEvent.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Core/CallEvent.cpp:void CallEvent::dump(raw_ostream &Out) const {
./tools/clang/lib/StaticAnalyzer/Core/BugReporter.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp:  unsigned ProcessMacroPiece(raw_ostream &os,
./tools/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp:static void EmitAlphaCounter(raw_ostream &os, unsigned n) {
./tools/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp:unsigned HTMLDiagnostics::ProcessMacroPiece(raw_ostream &os,
./tools/clang/lib/StaticAnalyzer/Core/CheckerManager.cpp:void CheckerManager::runCheckersForPrintState(raw_ostream &Out,
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void MemRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void AllocaRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void FunctionTextRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void BlockTextRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void BlockDataRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void CompoundLiteralRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void CXXTempObjectRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void CXXBaseObjectRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void CXXThisRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void ElementRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void FieldRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void ObjCIvarRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void StringRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void ObjCStringRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void SymbolicRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void VarRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void RegionRawOffset::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void StaticGlobalSpaceRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void GlobalInternalSpaceRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void GlobalSystemSpaceRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void GlobalImmutableSpaceRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void HeapSpaceRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void UnknownSpaceRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void StackArgumentsSpaceRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void StackLocalsSpaceRegion::dumpToStream(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void MemRegion::printPretty(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void VarRegion::printPretty(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void ObjCIvarRegion::printPretty(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:void FieldRegion::printPretty(raw_ostream &os) const {
./tools/clang/lib/StaticAnalyzer/Core/TextPathDiagnostics.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Core/Environment.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Core/Environment.cpp:void Environment::print(raw_ostream &Out, const char *NL,
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/ProgramState.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/ProgramState.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/CallEvent.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/CallEvent.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/CheckerRegistry.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/CheckerRegistry.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/BugReporter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/BugReporter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/MemRegion.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/MemRegion.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/Environment.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/Environment.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/AnalyzerOptions.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/AnalyzerOptions.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/PathDiagnostic.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/PathDiagnostic.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/TextPathDiagnostics.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/TextPathDiagnostics.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/ExprEngine.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/ExprEngine.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/SVals.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/SVals.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/RegionStore.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/RegionStore.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/BugReporterVisitors.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/BugReporterVisitors.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/PlistDiagnostics.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/PlistDiagnostics.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/SymbolManager.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/SymbolManager.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/RangeConstraintManager.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/RangeConstraintManager.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/HTMLDiagnostics.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/StaticAnalyzer/Core/Debug+Asserts/HTMLDiagnostics.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/StaticAnalyzer/Core/CheckerRegistry.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/StaticAnalyzer/Core/CheckerRegistry.cpp:void CheckerRegistry::printHelp(raw_ostream &out,
./tools/clang/lib/Frontend/PrintPreprocessedOutput.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Frontend/PrintPreprocessedOutput.cpp:                                 Preprocessor &PP, raw_ostream &OS) {
./tools/clang/lib/Frontend/PrintPreprocessedOutput.cpp:  raw_ostream &OS;
./tools/clang/lib/Frontend/PrintPreprocessedOutput.cpp:  PrintPPOutputPPCallbacks(Preprocessor &pp, raw_ostream &os,
./tools/clang/lib/Frontend/PrintPreprocessedOutput.cpp:                                    raw_ostream &OS) {
./tools/clang/lib/Frontend/PrintPreprocessedOutput.cpp:static void DoPrintMacros(Preprocessor &PP, raw_ostream *OS) {
./tools/clang/lib/Frontend/PrintPreprocessedOutput.cpp:void clang::DoPrintPreprocessedInput(Preprocessor &PP, raw_ostream *OS,
./tools/clang/lib/Frontend/FrontendAction.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Frontend/LayoutOverrideSource.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Frontend/LayoutOverrideSource.cpp:  raw_ostream &OS = llvm::errs();
./tools/clang/lib/Frontend/DiagnosticRenderer.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Frontend/DependencyFile.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Frontend/DependencyFile.cpp:static void PrintFilename(raw_ostream &OS, StringRef Filename) {
./tools/clang/lib/Frontend/VerifyDiagnosticConsumer.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Frontend/FrontendActions.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Frontend/FrontendActions.cpp:  if (raw_ostream *OS = CI.createDefaultOutputFile(false, InFile))
./tools/clang/lib/Frontend/FrontendActions.cpp:  raw_ostream *OS;
./tools/clang/lib/Frontend/FrontendActions.cpp:  raw_ostream *OS = 0;
./tools/clang/lib/Frontend/FrontendActions.cpp:                                                    raw_ostream *&OS) {
./tools/clang/lib/Frontend/FrontendActions.cpp:  raw_ostream *OS = 0;
./tools/clang/lib/Frontend/FrontendActions.cpp:                                                       raw_ostream *&OS) {
./tools/clang/lib/Frontend/FrontendActions.cpp:  raw_ostream *OS = CI.createDefaultOutputFile(BinaryMode, getCurrentFile());
./tools/clang/lib/Frontend/CompilerInstance.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Frontend/CompilerInstance.cpp:  raw_ostream *OS = &llvm::errs();
./tools/clang/lib/Frontend/CompilerInstance.cpp:                                               raw_ostream &OS) {
./tools/clang/lib/Frontend/CompilerInstance.cpp:  raw_ostream &OS = llvm::errs();
./tools/clang/lib/Frontend/InitHeaderSearch.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Frontend/ASTConsumers.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Frontend/ASTConsumers.cpp:    ASTPrinter(raw_ostream *Out = NULL, bool Dump = false,
./tools/clang/lib/Frontend/ASTConsumers.cpp:          Out.changeColor(raw_ostream::BLUE);
./tools/clang/lib/Frontend/ASTConsumers.cpp:    raw_ostream &Out;
./tools/clang/lib/Frontend/ASTConsumers.cpp:    ASTDeclNodeLister(raw_ostream *Out = NULL)
./tools/clang/lib/Frontend/ASTConsumers.cpp:    raw_ostream &Out;
./tools/clang/lib/Frontend/ASTConsumers.cpp:ASTConsumer *clang::CreateASTPrinter(raw_ostream *Out,
./tools/clang/lib/Frontend/ASTConsumers.cpp:  raw_ostream& Out;
./tools/clang/lib/Frontend/ASTConsumers.cpp:  raw_ostream &OS;
./tools/clang/lib/Frontend/ASTConsumers.cpp:  ASTDumpXML(raw_ostream &OS) : OS(OS) {}
./tools/clang/lib/Frontend/ASTConsumers.cpp:ASTConsumer *clang::CreateASTDumperXML(raw_ostream &OS) {
./tools/clang/lib/Frontend/LogDiagnosticPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Frontend/LogDiagnosticPrinter.cpp:LogDiagnosticPrinter::LogDiagnosticPrinter(raw_ostream &os,
./tools/clang/lib/Frontend/SerializedDiagnosticPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Frontend/SerializedDiagnosticPrinter.cpp:  SDiagsWriter(raw_ostream *os, DiagnosticOptions *diags)
./tools/clang/lib/Frontend/SerializedDiagnosticPrinter.cpp:    SharedState(raw_ostream *os, DiagnosticOptions *diags)
./tools/clang/lib/Frontend/SerializedDiagnosticPrinter.cpp:    OwningPtr<raw_ostream> OS;
./tools/clang/lib/Frontend/SerializedDiagnosticPrinter.cpp:DiagnosticConsumer *create(raw_ostream *OS, DiagnosticOptions *diags) {
./tools/clang/lib/Frontend/CacheTokens.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Frontend/CacheTokens.cpp:  void EmitData(raw_ostream& Out) {
./tools/clang/lib/Frontend/CacheTokens.cpp:  EmitKeyDataLength(raw_ostream& Out, PTHEntryKeyVariant V,
./tools/clang/lib/Frontend/CacheTokens.cpp:  static void EmitKey(raw_ostream& Out, PTHEntryKeyVariant V, unsigned n){
./tools/clang/lib/Frontend/CacheTokens.cpp:  static void EmitData(raw_ostream& Out, PTHEntryKeyVariant V,
./tools/clang/lib/Frontend/CacheTokens.cpp:  EmitKeyDataLength(raw_ostream& Out, const PTHIdKey* key, uint32_t) {
./tools/clang/lib/Frontend/CacheTokens.cpp:  static void EmitKey(raw_ostream& Out, PTHIdKey* key, unsigned n) {
./tools/clang/lib/Frontend/CacheTokens.cpp:  static void EmitData(raw_ostream& Out, PTHIdKey*, uint32_t pID,
./tools/clang/lib/Frontend/ASTUnit.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Frontend/ASTUnit.cpp:                             StringRef isysroot, raw_ostream *Out)
./tools/clang/lib/Frontend/ASTUnit.cpp:    raw_ostream *OS = 0;
./tools/clang/lib/Frontend/ASTUnit.cpp:                          raw_ostream &OS) {
./tools/clang/lib/Frontend/ASTUnit.cpp:bool ASTUnit::serialize(raw_ostream &OS) {
./tools/clang/lib/Frontend/DependencyGraph.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Frontend/DependencyGraph.cpp:  raw_ostream &writeNodeReference(raw_ostream &OS,
./tools/clang/lib/Frontend/DependencyGraph.cpp:raw_ostream &
./tools/clang/lib/Frontend/DependencyGraph.cpp:DependencyGraphCallback::writeNodeReference(raw_ostream &OS,
./tools/clang/lib/Frontend/Debug+Asserts/TextDiagnostic.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Frontend/Debug+Asserts/TextDiagnostic.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/CacheTokens.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Frontend/Debug+Asserts/CacheTokens.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/InitHeaderSearch.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Frontend/Debug+Asserts/InitHeaderSearch.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/DiagnosticRenderer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Frontend/Debug+Asserts/DiagnosticRenderer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/DependencyGraph.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Frontend/Debug+Asserts/DependencyGraph.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/TextDiagnosticPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Frontend/Debug+Asserts/TextDiagnosticPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/CompilerInvocation.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Frontend/Debug+Asserts/CompilerInvocation.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/LayoutOverrideSource.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Frontend/Debug+Asserts/LayoutOverrideSource.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/ASTConsumers.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Frontend/Debug+Asserts/ASTConsumers.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/CompilerInstance.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Frontend/Debug+Asserts/CompilerInstance.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/ChainedIncludesSource.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Frontend/Debug+Asserts/ChainedIncludesSource.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/VerifyDiagnosticConsumer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Frontend/Debug+Asserts/VerifyDiagnosticConsumer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/SerializedDiagnosticPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Frontend/Debug+Asserts/SerializedDiagnosticPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/FrontendOptions.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Frontend/Debug+Asserts/FrontendOptions.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/PrintPreprocessedOutput.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Frontend/Debug+Asserts/PrintPreprocessedOutput.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/ASTMerge.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Frontend/Debug+Asserts/ASTMerge.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/InitPreprocessor.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Frontend/Debug+Asserts/InitPreprocessor.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/CreateInvocationFromCommandLine.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Frontend/Debug+Asserts/CreateInvocationFromCommandLine.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/HeaderIncludeGen.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Frontend/Debug+Asserts/HeaderIncludeGen.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/ASTUnit.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Frontend/Debug+Asserts/ASTUnit.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/FrontendAction.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Frontend/Debug+Asserts/FrontendAction.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/LogDiagnosticPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Frontend/Debug+Asserts/LogDiagnosticPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/DependencyFile.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Frontend/Debug+Asserts/DependencyFile.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/Debug+Asserts/FrontendActions.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Frontend/Debug+Asserts/FrontendActions.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Frontend/TextDiagnosticPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Frontend/TextDiagnosticPrinter.cpp:TextDiagnosticPrinter::TextDiagnosticPrinter(raw_ostream &os,
./tools/clang/lib/Frontend/TextDiagnosticPrinter.cpp:/// \brief Print any diagnostic option information to a raw_ostream.
./tools/clang/lib/Frontend/TextDiagnosticPrinter.cpp:static void printDiagnosticOptions(raw_ostream &OS,
./tools/clang/lib/Frontend/HeaderIncludeGen.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Frontend/HeaderIncludeGen.cpp:  raw_ostream *OutputFile;
./tools/clang/lib/Frontend/HeaderIncludeGen.cpp:                         raw_ostream *OutputFile_, bool OwnsOutputFile_,
./tools/clang/lib/Frontend/HeaderIncludeGen.cpp:  raw_ostream *OutputFile = &llvm::errs();
./tools/clang/lib/Frontend/TextDiagnostic.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Frontend/TextDiagnostic.cpp:static const enum raw_ostream::Colors noteColor =
./tools/clang/lib/Frontend/TextDiagnostic.cpp:  raw_ostream::BLACK;
./tools/clang/lib/Frontend/TextDiagnostic.cpp:static const enum raw_ostream::Colors fixitColor =
./tools/clang/lib/Frontend/TextDiagnostic.cpp:  raw_ostream::GREEN;
./tools/clang/lib/Frontend/TextDiagnostic.cpp:static const enum raw_ostream::Colors caretColor =
./tools/clang/lib/Frontend/TextDiagnostic.cpp:  raw_ostream::GREEN;
./tools/clang/lib/Frontend/TextDiagnostic.cpp:static const enum raw_ostream::Colors warningColor =
./tools/clang/lib/Frontend/TextDiagnostic.cpp:  raw_ostream::MAGENTA;
./tools/clang/lib/Frontend/TextDiagnostic.cpp:static const enum raw_ostream::Colors templateColor =
./tools/clang/lib/Frontend/TextDiagnostic.cpp:  raw_ostream::CYAN;
./tools/clang/lib/Frontend/TextDiagnostic.cpp:static const enum raw_ostream::Colors errorColor = raw_ostream::RED;
./tools/clang/lib/Frontend/TextDiagnostic.cpp:static const enum raw_ostream::Colors fatalColor = raw_ostream::RED;
./tools/clang/lib/Frontend/TextDiagnostic.cpp:static const enum raw_ostream::Colors savedColor =
./tools/clang/lib/Frontend/TextDiagnostic.cpp:  raw_ostream::SAVEDCOLOR;
./tools/clang/lib/Frontend/TextDiagnostic.cpp:static void applyTemplateHighlighting(raw_ostream &OS, StringRef Str,
./tools/clang/lib/Frontend/TextDiagnostic.cpp:static bool printWordWrapped(raw_ostream &OS, StringRef Str,
./tools/clang/lib/Frontend/TextDiagnostic.cpp:TextDiagnostic::TextDiagnostic(raw_ostream &OS,
./tools/clang/lib/Frontend/TextDiagnostic.cpp:TextDiagnostic::printDiagnosticLevel(raw_ostream &OS,
./tools/clang/lib/Frontend/TextDiagnostic.cpp:TextDiagnostic::printDiagnosticMessage(raw_ostream &OS,
./tools/clang/lib/Driver/Driver.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Driver/Driver.cpp:void Driver::PrintVersion(const Compilation &C, raw_ostream &OS) const {
./tools/clang/lib/Driver/Driver.cpp:static void PrintDiagnosticCategories(raw_ostream &OS) {
./tools/clang/lib/Driver/Arg.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Driver/Tools.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Driver/OptTable.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Driver/OptTable.cpp:static void PrintHelpOptionList(raw_ostream &OS, StringRef Title,
./tools/clang/lib/Driver/OptTable.cpp:void OptTable::PrintHelp(raw_ostream &OS, const char *Name,
./tools/clang/lib/Driver/ArgList.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Driver/ToolChains.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Driver/Option.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Driver/Compilation.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Driver/Compilation.cpp:void Compilation::PrintJob(raw_ostream &OS, const Job &J,
./tools/clang/lib/Driver/Compilation.cpp:void Compilation::PrintDiagnosticJob(raw_ostream &OS, const Job &J) const {
./tools/clang/lib/Driver/Compilation.cpp:    raw_ostream *OS = &llvm::errs();
./tools/clang/lib/Driver/Debug+Asserts/Arg.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Driver/Debug+Asserts/Arg.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Driver/Debug+Asserts/Option.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Driver/Debug+Asserts/Option.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Driver/Debug+Asserts/Compilation.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Driver/Debug+Asserts/Compilation.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Driver/Debug+Asserts/ToolChains.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Driver/Debug+Asserts/ToolChains.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Driver/Debug+Asserts/OptTable.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Driver/Debug+Asserts/OptTable.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Driver/Debug+Asserts/Driver.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Driver/Debug+Asserts/Driver.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Driver/Debug+Asserts/ArgList.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Driver/Debug+Asserts/ArgList.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Driver/Debug+Asserts/Tools.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Driver/Debug+Asserts/Tools.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Format/Debug+Asserts/TokenAnnotator.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Format/Debug+Asserts/TokenAnnotator.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Format/Debug+Asserts/Format.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Format/Debug+Asserts/Format.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Format/Debug+Asserts/UnwrappedLineParser.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Format/Debug+Asserts/UnwrappedLineParser.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/ARCMigrate/PlistReporter.cpp:static raw_ostream& Indent(raw_ostream& o, const unsigned indent) {
./tools/clang/lib/ARCMigrate/PlistReporter.cpp:static void EmitLocation(raw_ostream& o, const SourceManager &SM,
./tools/clang/lib/ARCMigrate/PlistReporter.cpp:static void EmitRange(raw_ostream& o, const SourceManager &SM,
./tools/clang/lib/ARCMigrate/PlistReporter.cpp:static raw_ostream& EmitString(raw_ostream& o,
./tools/clang/lib/ARCMigrate/FileRemapper.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/ARCMigrate/Debug+Asserts/ObjCMT.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/ARCMigrate/Debug+Asserts/ObjCMT.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransAutoreleasePool.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransAutoreleasePool.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransZeroOutPropsInDealloc.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransZeroOutPropsInDealloc.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransUnusedInitDelegate.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransUnusedInitDelegate.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransARCAssign.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransARCAssign.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/ARCMigrate/Debug+Asserts/ARCMT.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/ARCMigrate/Debug+Asserts/ARCMT.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/ARCMigrate/Debug+Asserts/PlistReporter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/ARCMigrate/Debug+Asserts/PlistReporter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransProtectedScope.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransProtectedScope.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransAPIUses.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransAPIUses.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransGCAttrs.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransGCAttrs.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/ARCMigrate/Debug+Asserts/Transforms.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/ARCMigrate/Debug+Asserts/Transforms.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransRetainReleaseDealloc.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransRetainReleaseDealloc.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransBlockObjCVariable.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransBlockObjCVariable.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransUnbridgedCasts.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransUnbridgedCasts.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransGCCalls.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransGCCalls.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransformActions.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransformActions.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransEmptyStatementsAndDealloc.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransEmptyStatementsAndDealloc.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/ARCMigrate/Debug+Asserts/ARCMTActions.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/ARCMigrate/Debug+Asserts/ARCMTActions.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransProperties.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/ARCMigrate/Debug+Asserts/TransProperties.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/ARCMigrate/Debug+Asserts/FileRemapper.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/ARCMigrate/Debug+Asserts/FileRemapper.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Basic/FileManager.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Basic/Version.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Basic/VersionTuple.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Basic/VersionTuple.cpp:raw_ostream& clang::operator<<(raw_ostream &Out, 
./tools/clang/lib/Basic/IdentifierTable.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Basic/Diagnostic.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Basic/Debug+Asserts/Diagnostic.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Basic/Debug+Asserts/Diagnostic.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Basic/Debug+Asserts/Version.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Basic/Debug+Asserts/Version.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Basic/Debug+Asserts/SourceLocation.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Basic/Debug+Asserts/SourceLocation.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Basic/Debug+Asserts/Targets.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Basic/Debug+Asserts/Targets.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Basic/Debug+Asserts/VersionTuple.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Basic/Debug+Asserts/VersionTuple.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Basic/Debug+Asserts/SourceManager.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Basic/Debug+Asserts/SourceManager.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Basic/Debug+Asserts/FileManager.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Basic/Debug+Asserts/FileManager.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Basic/Debug+Asserts/Module.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Basic/Debug+Asserts/Module.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Basic/Debug+Asserts/ObjCRuntime.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Basic/Debug+Asserts/ObjCRuntime.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Basic/Debug+Asserts/IdentifierTable.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Basic/Debug+Asserts/IdentifierTable.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Basic/SourceManager.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Basic/SourceLocation.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Basic/SourceLocation.cpp:void PrettyStackTraceLoc::print(raw_ostream &OS) const {
./tools/clang/lib/Basic/SourceLocation.cpp:void SourceLocation::print(raw_ostream &OS, const SourceManager &SM)const{
./tools/clang/lib/Basic/Module.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Basic/Module.cpp:static void printModuleId(raw_ostream &OS, const ModuleId &Id) {
./tools/clang/lib/Basic/Module.cpp:void Module::print(raw_ostream &OS, unsigned Indent) const {
./tools/clang/lib/Basic/ObjCRuntime.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Basic/ObjCRuntime.cpp:raw_ostream &clang::operator<<(raw_ostream &out, const ObjCRuntime &value) {
./tools/clang/lib/Lex/PPMacroExpansion.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Lex/ModuleMap.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Lex/Debug+Asserts/PTHLexer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Lex/Debug+Asserts/PTHLexer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Lex/Debug+Asserts/ModuleMap.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Lex/Debug+Asserts/ModuleMap.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Lex/Debug+Asserts/PPMacroExpansion.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Lex/Debug+Asserts/PPMacroExpansion.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Lex/Debug+Asserts/Preprocessor.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Lex/Debug+Asserts/Preprocessor.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Lex/Debug+Asserts/Lexer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Lex/Debug+Asserts/Lexer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Lex/Preprocessor.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Lex/UnicodeCharSets.h:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Analysis/CFG.cpp:  virtual bool handledStmt(Stmt *S, raw_ostream &OS) {
./tools/clang/lib/Analysis/CFG.cpp:  bool handleDecl(const Decl *D, raw_ostream &OS) {
./tools/clang/lib/Analysis/CFG.cpp:  raw_ostream &OS;
./tools/clang/lib/Analysis/CFG.cpp:  CFGBlockTerminatorPrint(raw_ostream &os, StmtPrinterHelper* helper,
./tools/clang/lib/Analysis/CFG.cpp:static void print_elem(raw_ostream &OS, StmtPrinterHelper* Helper,
./tools/clang/lib/Analysis/CFG.cpp:static void print_block(raw_ostream &OS, const CFG* cfg,
./tools/clang/lib/Analysis/CFG.cpp:    OS.changeColor(raw_ostream::YELLOW, true);
./tools/clang/lib/Analysis/CFG.cpp:      OS.changeColor(raw_ostream::GREEN);
./tools/clang/lib/Analysis/CFG.cpp:      const raw_ostream::Colors Color = raw_ostream::BLUE;
./tools/clang/lib/Analysis/CFG.cpp:      const raw_ostream::Colors Color = raw_ostream::MAGENTA;
./tools/clang/lib/Analysis/CFG.cpp:void CFG::print(raw_ostream &OS, const LangOptions &LO, bool ShowColors) const {
./tools/clang/lib/Analysis/CFG.cpp:void CFGBlock::print(raw_ostream &OS, const CFG* cfg,
./tools/clang/lib/Analysis/CFG.cpp:void CFGBlock::printTerminator(raw_ostream &OS,
./tools/clang/lib/Analysis/ScanfFormatString.cpp:void ScanfSpecifier::toString(raw_ostream &os) const {
./tools/clang/lib/Analysis/ThreadSafety.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Analysis/LiveVariables.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Analysis/FormatStringParsing.h:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Analysis/PrintfFormatString.cpp:void PrintfSpecifier::toString(raw_ostream &os) const {
./tools/clang/lib/Analysis/FormatString.cpp:void OptionalAmount::toString(raw_ostream &os) const {
./tools/clang/lib/Analysis/Debug+Asserts/Dominators.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Analysis/Debug+Asserts/Dominators.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Analysis/Debug+Asserts/PrintfFormatString.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Analysis/Debug+Asserts/PrintfFormatString.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Analysis/Debug+Asserts/LiveVariables.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Analysis/Debug+Asserts/LiveVariables.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Analysis/Debug+Asserts/FormatString.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Analysis/Debug+Asserts/FormatString.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Analysis/Debug+Asserts/CallGraph.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Analysis/Debug+Asserts/CallGraph.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Analysis/Debug+Asserts/ScanfFormatString.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Analysis/Debug+Asserts/ScanfFormatString.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Analysis/Debug+Asserts/ThreadSafety.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Analysis/Debug+Asserts/ThreadSafety.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Analysis/Debug+Asserts/UninitializedValues.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Analysis/Debug+Asserts/UninitializedValues.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Analysis/Debug+Asserts/CFG.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Analysis/Debug+Asserts/CFG.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Analysis/CallGraph.cpp:void CallGraph::print(raw_ostream &OS) const {
./tools/clang/lib/Analysis/CallGraph.cpp:void CallGraphNode::print(raw_ostream &os) const {
./tools/clang/lib/AST/TemplateBase.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/AST/TemplateBase.cpp:/// \param Out the raw_ostream instance to use for printing.
./tools/clang/lib/AST/TemplateBase.cpp:                          raw_ostream &Out) {
./tools/clang/lib/AST/TemplateBase.cpp:                             raw_ostream &Out) const {
./tools/clang/lib/AST/Expr.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/AST/Expr.cpp:void StringLiteral::outputString(raw_ostream &OS) const {
./tools/clang/lib/AST/Stmt.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/AST/DeclBase.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/AST/DeclBase.cpp:void PrettyStackTraceDecl::print(raw_ostream &OS) const {
./tools/clang/lib/AST/TypeLoc.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/AST/DeclPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/AST/DeclPrinter.cpp:    raw_ostream &Out;
./tools/clang/lib/AST/DeclPrinter.cpp:    raw_ostream& Indent() { return Indent(Indentation); }
./tools/clang/lib/AST/DeclPrinter.cpp:    raw_ostream& Indent(unsigned Indentation);
./tools/clang/lib/AST/DeclPrinter.cpp:    DeclPrinter(raw_ostream &Out, const PrintingPolicy &Policy,
./tools/clang/lib/AST/DeclPrinter.cpp:void Decl::print(raw_ostream &Out, unsigned Indentation,
./tools/clang/lib/AST/DeclPrinter.cpp:void Decl::print(raw_ostream &Out, const PrintingPolicy &Policy,
./tools/clang/lib/AST/DeclPrinter.cpp:                      raw_ostream &Out, const PrintingPolicy &Policy,
./tools/clang/lib/AST/DeclPrinter.cpp:raw_ostream& DeclPrinter::Indent(unsigned Indentation) {
./tools/clang/lib/AST/NestedNameSpecifier.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/AST/NestedNameSpecifier.cpp:NestedNameSpecifier::print(raw_ostream &OS,
./tools/clang/lib/AST/Mangle.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/AST/Mangle.cpp:                                raw_ostream &Out) {
./tools/clang/lib/AST/Mangle.cpp:                                      raw_ostream &Out) {
./tools/clang/lib/AST/Mangle.cpp:                                    raw_ostream &ResStream) {
./tools/clang/lib/AST/Mangle.cpp:                                    raw_ostream &ResStream) {
./tools/clang/lib/AST/Mangle.cpp:                                raw_ostream &Out) {
./tools/clang/lib/AST/Mangle.cpp:                                         raw_ostream &Out) {
./tools/clang/lib/AST/Mangle.cpp:                                raw_ostream &Out,
./tools/clang/lib/AST/VTableBuilder.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/AST/VTableBuilder.cpp:  void dump(raw_ostream &Out, BaseSubobject Base,
./tools/clang/lib/AST/VTableBuilder.cpp:void FinalOverriders::dump(raw_ostream &Out, BaseSubobject Base,
./tools/clang/lib/AST/VTableBuilder.cpp:  void dumpLayout(raw_ostream&);
./tools/clang/lib/AST/VTableBuilder.cpp:void VTableBuilder::dumpLayout(raw_ostream& Out) {
./tools/clang/lib/AST/ItaniumMangle.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/AST/ItaniumMangle.cpp:  void mangleName(const NamedDecl *D, raw_ostream &);
./tools/clang/lib/AST/ItaniumMangle.cpp:                   raw_ostream &);
./tools/clang/lib/AST/ItaniumMangle.cpp:                          raw_ostream &);
./tools/clang/lib/AST/ItaniumMangle.cpp:                                raw_ostream &);
./tools/clang/lib/AST/ItaniumMangle.cpp:                       raw_ostream &);
./tools/clang/lib/AST/ItaniumMangle.cpp:                    raw_ostream &);
./tools/clang/lib/AST/ItaniumMangle.cpp:                           raw_ostream &);
./tools/clang/lib/AST/ItaniumMangle.cpp:  void mangleCXXRTTI(QualType T, raw_ostream &);
./tools/clang/lib/AST/ItaniumMangle.cpp:  void mangleCXXRTTIName(QualType T, raw_ostream &);
./tools/clang/lib/AST/ItaniumMangle.cpp:                     raw_ostream &);
./tools/clang/lib/AST/ItaniumMangle.cpp:                     raw_ostream &);
./tools/clang/lib/AST/ItaniumMangle.cpp:  void mangleItaniumGuardVariable(const VarDecl *D, raw_ostream &);
./tools/clang/lib/AST/ItaniumMangle.cpp:  raw_ostream &Out;
./tools/clang/lib/AST/ItaniumMangle.cpp:  CXXNameMangler(ItaniumMangleContext &C, raw_ostream &Out_,
./tools/clang/lib/AST/ItaniumMangle.cpp:  CXXNameMangler(ItaniumMangleContext &C, raw_ostream &Out_,
./tools/clang/lib/AST/ItaniumMangle.cpp:  CXXNameMangler(ItaniumMangleContext &C, raw_ostream &Out_,
./tools/clang/lib/AST/ItaniumMangle.cpp:  raw_ostream &getStream() { return Out; }
./tools/clang/lib/AST/ItaniumMangle.cpp:                                      raw_ostream &Out) {
./tools/clang/lib/AST/ItaniumMangle.cpp:                                         raw_ostream &Out) {
./tools/clang/lib/AST/ItaniumMangle.cpp:                                         raw_ostream &Out) {
./tools/clang/lib/AST/ItaniumMangle.cpp:                                       raw_ostream &Out) {
./tools/clang/lib/AST/ItaniumMangle.cpp:                                         raw_ostream &Out) {
./tools/clang/lib/AST/ItaniumMangle.cpp:                                                      raw_ostream &Out) {
./tools/clang/lib/AST/ItaniumMangle.cpp:                                                    raw_ostream &Out) {
./tools/clang/lib/AST/ItaniumMangle.cpp:                                           raw_ostream &Out) {
./tools/clang/lib/AST/ItaniumMangle.cpp:                                        raw_ostream &Out) {
./tools/clang/lib/AST/ItaniumMangle.cpp:                                               raw_ostream &Out) {
./tools/clang/lib/AST/ItaniumMangle.cpp:                                         raw_ostream &Out) {
./tools/clang/lib/AST/ItaniumMangle.cpp:                                             raw_ostream &Out) {
./tools/clang/lib/AST/Comment.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/AST/Decl.cpp:void NamedDecl::printQualifiedName(raw_ostream &OS) const {
./tools/clang/lib/AST/Decl.cpp:void NamedDecl::printQualifiedName(raw_ostream &OS,
./tools/clang/lib/AST/Decl.cpp:void NamedDecl::getNameForDiagnostic(raw_ostream &OS,
./tools/clang/lib/AST/Decl.cpp:    raw_ostream &OS, const PrintingPolicy &Policy, bool Qualified) const {
./tools/clang/lib/AST/APValue.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/AST/APValue.cpp:void APValue::dump(raw_ostream &OS) const {
./tools/clang/lib/AST/APValue.cpp:void APValue::printPretty(raw_ostream &Out, ASTContext &Ctx, QualType Ty) const{
./tools/clang/lib/AST/ASTDumper.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/AST/ASTDumper.cpp:    raw_ostream::Colors Color;
./tools/clang/lib/AST/ASTDumper.cpp:  static const TerminalColor DeclKindNameColor = { raw_ostream::GREEN, true };
./tools/clang/lib/AST/ASTDumper.cpp:  static const TerminalColor AttrColor = { raw_ostream::BLUE, true };
./tools/clang/lib/AST/ASTDumper.cpp:  static const TerminalColor StmtColor = { raw_ostream::MAGENTA, true };
./tools/clang/lib/AST/ASTDumper.cpp:  static const TerminalColor CommentColor = { raw_ostream::YELLOW, true };
./tools/clang/lib/AST/ASTDumper.cpp:  static const TerminalColor TypeColor = { raw_ostream::GREEN, false };
./tools/clang/lib/AST/ASTDumper.cpp:  static const TerminalColor AddressColor = { raw_ostream::YELLOW, false };
./tools/clang/lib/AST/ASTDumper.cpp:  static const TerminalColor LocationColor = { raw_ostream::YELLOW, false };
./tools/clang/lib/AST/ASTDumper.cpp:  static const TerminalColor ValueKindColor = { raw_ostream::CYAN, false };
./tools/clang/lib/AST/ASTDumper.cpp:  static const TerminalColor ObjectKindColor = { raw_ostream::CYAN, false };
./tools/clang/lib/AST/ASTDumper.cpp:  static const TerminalColor NullColor = { raw_ostream::BLUE, false };
./tools/clang/lib/AST/ASTDumper.cpp:  static const TerminalColor CastColor = { raw_ostream::RED, false };
./tools/clang/lib/AST/ASTDumper.cpp:  static const TerminalColor ValueColor = { raw_ostream::CYAN, true };
./tools/clang/lib/AST/ASTDumper.cpp:  static const TerminalColor DeclNameColor = { raw_ostream::CYAN, true };
./tools/clang/lib/AST/ASTDumper.cpp:  static const TerminalColor IndentColor = { raw_ostream::BLUE, false };
./tools/clang/lib/AST/ASTDumper.cpp:    raw_ostream &OS;
./tools/clang/lib/AST/ASTDumper.cpp:    ASTDumper(raw_ostream &OS, const CommandTraits *Traits,
./tools/clang/lib/AST/ASTDumper.cpp:    ASTDumper(raw_ostream &OS, const CommandTraits *Traits,
./tools/clang/lib/AST/ASTDumper.cpp:static void dumpBasePath(raw_ostream &OS, const CastExpr *Node) {
./tools/clang/lib/AST/ASTDumper.cpp:void Decl::dump(raw_ostream &OS) const {
./tools/clang/lib/AST/ASTDumper.cpp:void Stmt::dump(raw_ostream &OS, SourceManager &SM) const {
./tools/clang/lib/AST/ASTDumper.cpp:void Comment::dump(raw_ostream &OS, const CommandTraits *Traits,
./tools/clang/lib/AST/ASTContext.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/AST/TypePrinter.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/AST/TypePrinter.cpp:    void print(const Type *ty, Qualifiers qs, raw_ostream &OS,
./tools/clang/lib/AST/TypePrinter.cpp:    void print(QualType T, raw_ostream &OS, StringRef PlaceHolder);
./tools/clang/lib/AST/TypePrinter.cpp:    void spaceBeforePlaceHolder(raw_ostream &OS);
./tools/clang/lib/AST/TypePrinter.cpp:    void printTypeSpec(const NamedDecl *D, raw_ostream &OS);
./tools/clang/lib/AST/TypePrinter.cpp:    void printBefore(const Type *ty, Qualifiers qs, raw_ostream &OS);
./tools/clang/lib/AST/TypePrinter.cpp:    void printBefore(QualType T, raw_ostream &OS);
./tools/clang/lib/AST/TypePrinter.cpp:    void printAfter(const Type *ty, Qualifiers qs, raw_ostream &OS);
./tools/clang/lib/AST/TypePrinter.cpp:    void printAfter(QualType T, raw_ostream &OS);
./tools/clang/lib/AST/TypePrinter.cpp:    void AppendScope(DeclContext *DC, raw_ostream &OS);
./tools/clang/lib/AST/TypePrinter.cpp:    void printTag(TagDecl *T, raw_ostream &OS);
./tools/clang/lib/AST/TypePrinter.cpp:    void print##CLASS##Before(const CLASS##Type *T, raw_ostream &OS); \
./tools/clang/lib/AST/TypePrinter.cpp:    void print##CLASS##After(const CLASS##Type *T, raw_ostream &OS);
./tools/clang/lib/AST/TypePrinter.cpp:static void AppendTypeQualList(raw_ostream &OS, unsigned TypeQuals) {
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::spaceBeforePlaceHolder(raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::print(QualType t, raw_ostream &OS, StringRef PlaceHolder) {
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::print(const Type *T, Qualifiers Quals, raw_ostream &OS,
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printBefore(QualType T, raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printBefore(const Type *T,Qualifiers Quals, raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printAfter(QualType t, raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printAfter(const Type *T, Qualifiers Quals, raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printBuiltinBefore(const BuiltinType *T, raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printBuiltinAfter(const BuiltinType *T, raw_ostream &OS) { }
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printComplexBefore(const ComplexType *T, raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printComplexAfter(const ComplexType *T, raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printPointerBefore(const PointerType *T, raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printPointerAfter(const PointerType *T, raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                          raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                          raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                             raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                            raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                             raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                            raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                           raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:                                          raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:                                           raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                          raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                             raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                            raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                           raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                          raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                               raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                               raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                          raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:                                          raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printVectorBefore(const VectorType *T, raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printVectorAfter(const VectorType *T, raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                       raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printExtVectorAfter(const ExtVectorType *T, raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:FunctionProtoType::printExceptionSpecification(raw_ostream &OS, 
./tools/clang/lib/AST/TypePrinter.cpp:                                           raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                          raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:                                             raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:                                            raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printTypeSpec(const NamedDecl *D, raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                             raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                             raw_ostream &OS) { }
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printTypedefBefore(const TypedefType *T, raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printTypedefAfter(const TypedefType *T, raw_ostream &OS) { } 
./tools/clang/lib/AST/TypePrinter.cpp:                                        raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                       raw_ostream &OS) { }
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printTypeOfBefore(const TypeOfType *T, raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printTypeOfAfter(const TypeOfType *T, raw_ostream &OS) { } 
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printDecltypeBefore(const DecltypeType *T, raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printDecltypeAfter(const DecltypeType *T, raw_ostream &OS) { } 
./tools/clang/lib/AST/TypePrinter.cpp:                                            raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                           raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printAutoBefore(const AutoType *T, raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printAutoAfter(const AutoType *T, raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printAtomicBefore(const AtomicType *T, raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printAtomicAfter(const AtomicType *T, raw_ostream &OS) { }
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::AppendScope(DeclContext *DC, raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printTag(TagDecl *D, raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printRecordBefore(const RecordType *T, raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printRecordAfter(const RecordType *T, raw_ostream &OS) { }
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printEnumBefore(const EnumType *T, raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printEnumAfter(const EnumType *T, raw_ostream &OS) { }
./tools/clang/lib/AST/TypePrinter.cpp:                                              raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:                                             raw_ostream &OS) { } 
./tools/clang/lib/AST/TypePrinter.cpp:                                             raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:                                             raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:                                        raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:                                        raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:                                            raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:                                            raw_ostream &OS) { } 
./tools/clang/lib/AST/TypePrinter.cpp:                                               raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                               raw_ostream &OS) { }
./tools/clang/lib/AST/TypePrinter.cpp:                                        raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                        raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printParenBefore(const ParenType *T, raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:void TypePrinter::printParenAfter(const ParenType *T, raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                           raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:                                          raw_ostream &OS) { } 
./tools/clang/lib/AST/TypePrinter.cpp:        const DependentTemplateSpecializationType *T, raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:        const DependentTemplateSpecializationType *T, raw_ostream &OS) { } 
./tools/clang/lib/AST/TypePrinter.cpp:                                           raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                          raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                        raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                       raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                           raw_ostream &OS) { 
./tools/clang/lib/AST/TypePrinter.cpp:                                          raw_ostream &OS) { } 
./tools/clang/lib/AST/TypePrinter.cpp:                                        raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                        raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                               raw_ostream &OS) {
./tools/clang/lib/AST/TypePrinter.cpp:                                              raw_ostream &OS) { }
./tools/clang/lib/AST/TypePrinter.cpp:  PrintTemplateArgumentList(raw_ostream &OS,
./tools/clang/lib/AST/TypePrinter.cpp:                                                raw_ostream &OS,
./tools/clang/lib/AST/TypePrinter.cpp:PrintTemplateArgumentList(raw_ostream &OS,
./tools/clang/lib/AST/TypePrinter.cpp:void Qualifiers::print(raw_ostream &OS, const PrintingPolicy& Policy,
./tools/clang/lib/AST/TypePrinter.cpp:                     raw_ostream &OS, const PrintingPolicy &policy,
./tools/clang/lib/AST/ExprConstant.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/AST/ExprConstant.cpp:static void describeCall(CallStackFrame *Frame, raw_ostream &Out) {
./tools/clang/lib/AST/InheritViz.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/AST/InheritViz.cpp:  raw_ostream &Out;
./tools/clang/lib/AST/InheritViz.cpp:  InheritanceHierarchyWriter(ASTContext& Context, raw_ostream& Out)
./tools/clang/lib/AST/InheritViz.cpp:  raw_ostream& WriteNodeReference(QualType Type, bool FromVirtual);
./tools/clang/lib/AST/InheritViz.cpp:raw_ostream&
./tools/clang/lib/AST/Debug+Asserts/ASTDumper.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/AST/Debug+Asserts/ASTDumper.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/DeclBase.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/AST/Debug+Asserts/DeclBase.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/TemplateBase.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/AST/Debug+Asserts/TemplateBase.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/APValue.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/AST/Debug+Asserts/APValue.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/Comment.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/AST/Debug+Asserts/Comment.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/AttrImpl.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/AST/Debug+Asserts/AttrImpl.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/RecordLayoutBuilder.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/AST/Debug+Asserts/RecordLayoutBuilder.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/StmtPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/AST/Debug+Asserts/StmtPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/ASTContext.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/AST/Debug+Asserts/ASTContext.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/CommentBriefParser.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/AST/Debug+Asserts/CommentBriefParser.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/VTableBuilder.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/AST/Debug+Asserts/VTableBuilder.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/DeclObjC.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/AST/Debug+Asserts/DeclObjC.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/Stmt.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/AST/Debug+Asserts/Stmt.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/TypePrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/AST/Debug+Asserts/TypePrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/CommentLexer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/AST/Debug+Asserts/CommentLexer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/DeclPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/AST/Debug+Asserts/DeclPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/RawCommentList.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/AST/Debug+Asserts/RawCommentList.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/Decl.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/AST/Debug+Asserts/Decl.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/MicrosoftMangle.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/AST/Debug+Asserts/MicrosoftMangle.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/StmtViz.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/AST/Debug+Asserts/StmtViz.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/Type.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/AST/Debug+Asserts/Type.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/CommentSema.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/AST/Debug+Asserts/CommentSema.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/NestedNameSpecifier.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/AST/Debug+Asserts/NestedNameSpecifier.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/ItaniumMangle.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/AST/Debug+Asserts/ItaniumMangle.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/ExprCXX.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/AST/Debug+Asserts/ExprCXX.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/DumpXML.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/AST/Debug+Asserts/DumpXML.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/ASTDiagnostic.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/AST/Debug+Asserts/ASTDiagnostic.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/CommentParser.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/AST/Debug+Asserts/CommentParser.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/DeclarationName.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/AST/Debug+Asserts/DeclarationName.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/InheritViz.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/AST/Debug+Asserts/InheritViz.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/Mangle.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/AST/Debug+Asserts/Mangle.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/TemplateName.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/AST/Debug+Asserts/TemplateName.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/TypeLoc.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/AST/Debug+Asserts/TypeLoc.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/ExprConstant.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/AST/Debug+Asserts/ExprConstant.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/Debug+Asserts/Expr.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/AST/Debug+Asserts/Expr.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/AST/MicrosoftMangle.cpp:  raw_ostream &Out;
./tools/clang/lib/AST/MicrosoftMangle.cpp:  MicrosoftCXXNameMangler(MangleContext &C, raw_ostream &Out_)
./tools/clang/lib/AST/MicrosoftMangle.cpp:  MicrosoftCXXNameMangler(MangleContext &C, raw_ostream &Out_,
./tools/clang/lib/AST/MicrosoftMangle.cpp:  raw_ostream &getStream() const { return Out; }
./tools/clang/lib/AST/MicrosoftMangle.cpp:  virtual void mangleName(const NamedDecl *D, raw_ostream &Out);
./tools/clang/lib/AST/MicrosoftMangle.cpp:                           raw_ostream &);
./tools/clang/lib/AST/MicrosoftMangle.cpp:                                  raw_ostream &);
./tools/clang/lib/AST/MicrosoftMangle.cpp:                               raw_ostream &);
./tools/clang/lib/AST/MicrosoftMangle.cpp:                            raw_ostream &);
./tools/clang/lib/AST/MicrosoftMangle.cpp:                                   raw_ostream &);
./tools/clang/lib/AST/MicrosoftMangle.cpp:  virtual void mangleCXXRTTI(QualType T, raw_ostream &);
./tools/clang/lib/AST/MicrosoftMangle.cpp:  virtual void mangleCXXRTTIName(QualType T, raw_ostream &);
./tools/clang/lib/AST/MicrosoftMangle.cpp:                             raw_ostream &);
./tools/clang/lib/AST/MicrosoftMangle.cpp:                             raw_ostream &);
./tools/clang/lib/AST/MicrosoftMangle.cpp:                                        raw_ostream &);
./tools/clang/lib/AST/MicrosoftMangle.cpp:                                        raw_ostream &Out) {
./tools/clang/lib/AST/MicrosoftMangle.cpp:                                         raw_ostream &) {
./tools/clang/lib/AST/MicrosoftMangle.cpp:                                                raw_ostream &) {
./tools/clang/lib/AST/MicrosoftMangle.cpp:                                             raw_ostream &Out) {
./tools/clang/lib/AST/MicrosoftMangle.cpp:                                          raw_ostream &) {
./tools/clang/lib/AST/MicrosoftMangle.cpp:                                                 raw_ostream &) {
./tools/clang/lib/AST/MicrosoftMangle.cpp:                                           raw_ostream &) {
./tools/clang/lib/AST/MicrosoftMangle.cpp:                                               raw_ostream &) {
./tools/clang/lib/AST/MicrosoftMangle.cpp:                                           raw_ostream & Out) {
./tools/clang/lib/AST/MicrosoftMangle.cpp:                                           raw_ostream & Out) {
./tools/clang/lib/AST/MicrosoftMangle.cpp:                                                      raw_ostream &) {
./tools/clang/lib/AST/Type.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/AST/StmtPrinter.cpp:    raw_ostream &OS;
./tools/clang/lib/AST/StmtPrinter.cpp:    StmtPrinter(raw_ostream &os, PrinterHelper* helper,
./tools/clang/lib/AST/StmtPrinter.cpp:    raw_ostream &Indent(int Delta = 0) {
./tools/clang/lib/AST/StmtPrinter.cpp:static void PrintFloatingLiteral(raw_ostream &OS, FloatingLiteral *Node,
./tools/clang/lib/AST/StmtPrinter.cpp:void Stmt::printPretty(raw_ostream &OS,
./tools/clang/lib/AST/DumpXML.cpp:  raw_ostream &out;
./tools/clang/lib/AST/DumpXML.cpp:  explicit XMLDumper(raw_ostream &OS, ASTContext &context)
./tools/clang/lib/AST/DumpXML.cpp:void Decl::dumpXML(raw_ostream &out) const {
./tools/clang/lib/AST/DumpXML.cpp:void Decl::dumpXML(raw_ostream &out) const {}
./tools/clang/lib/AST/DeclTemplate.cpp:    raw_ostream &OS, const PrintingPolicy &Policy, bool Qualified) const {
./tools/clang/lib/AST/ASTDiagnostic.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/AST/ASTDiagnostic.cpp:                                   bool ShowColors, raw_ostream &OS);
./tools/clang/lib/AST/ASTDiagnostic.cpp:  raw_ostream &OS;
./tools/clang/lib/AST/ASTDiagnostic.cpp:  TemplateDiff(raw_ostream &OS, ASTContext &Context, QualType FromType,
./tools/clang/lib/AST/ASTDiagnostic.cpp:                                   bool ShowColors, raw_ostream &OS) {
./tools/clang/lib/AST/TemplateName.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/AST/TemplateName.cpp:TemplateName::print(raw_ostream &OS, const PrintingPolicy &Policy,
./tools/clang/lib/AST/TemplateName.cpp:void TemplateName::dump(raw_ostream &OS) const {
./tools/clang/lib/AST/RecordLayoutBuilder.cpp:static void PrintOffset(raw_ostream &OS,
./tools/clang/lib/AST/RecordLayoutBuilder.cpp:static void PrintIndentNoOffset(raw_ostream &OS, unsigned IndentLevel) {
./tools/clang/lib/AST/RecordLayoutBuilder.cpp:static void DumpCXXRecordLayout(raw_ostream &OS,
./tools/clang/lib/AST/RecordLayoutBuilder.cpp:                                  raw_ostream &OS,
./tools/clang/lib/AST/DeclarationName.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/AST/DeclarationName.cpp:void DeclarationName::printName(raw_ostream &OS) const {
./tools/clang/lib/AST/DeclarationName.cpp:void DeclarationNameInfo::printName(raw_ostream &OS) const {
./tools/clang/lib/AST/DeclObjC.cpp:raw_ostream &clang::operator<<(raw_ostream &OS,
./tools/clang/lib/AST/DeclObjC.cpp:raw_ostream &clang::operator<<(raw_ostream &OS,
./tools/clang/lib/Serialization/GlobalModuleIndex.cpp:  EmitKeyDataLength(raw_ostream& Out, key_type_ref Key, data_type_ref Data) {
./tools/clang/lib/Serialization/GlobalModuleIndex.cpp:  void EmitKey(raw_ostream& Out, key_type_ref Key, unsigned KeyLen) {
./tools/clang/lib/Serialization/GlobalModuleIndex.cpp:  void EmitData(raw_ostream& Out, key_type_ref Key, data_type_ref Data,
./tools/clang/lib/Serialization/ModuleManager.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Serialization/ASTWriter.cpp:    EmitKeyDataLength(raw_ostream& Out, const char *path,
./tools/clang/lib/Serialization/ASTWriter.cpp:    void EmitKey(raw_ostream& Out, const char *path, unsigned KeyLen) {
./tools/clang/lib/Serialization/ASTWriter.cpp:    void EmitData(raw_ostream &Out, key_type_ref,
./tools/clang/lib/Serialization/ASTWriter.cpp:    EmitKeyDataLength(raw_ostream& Out, Selector Sel,
./tools/clang/lib/Serialization/ASTWriter.cpp:  void EmitKey(raw_ostream& Out, Selector Sel, unsigned) {
./tools/clang/lib/Serialization/ASTWriter.cpp:  void EmitData(raw_ostream& Out, key_type_ref,
./tools/clang/lib/Serialization/ASTWriter.cpp:  EmitKeyDataLength(raw_ostream& Out, IdentifierInfo* II, IdentID ID) {
./tools/clang/lib/Serialization/ASTWriter.cpp:  void EmitKey(raw_ostream& Out, const IdentifierInfo* II,
./tools/clang/lib/Serialization/ASTWriter.cpp:  void EmitData(raw_ostream& Out, IdentifierInfo* II,
./tools/clang/lib/Serialization/ASTWriter.cpp:    EmitKeyDataLength(raw_ostream& Out, DeclarationName Name,
./tools/clang/lib/Serialization/ASTWriter.cpp:  void EmitKey(raw_ostream& Out, DeclarationName Name, unsigned) {
./tools/clang/lib/Serialization/ASTWriter.cpp:  void EmitData(raw_ostream& Out, key_type_ref,
./tools/clang/lib/Serialization/Debug+Asserts/GeneratePCH.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Serialization/Debug+Asserts/GeneratePCH.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Serialization/Debug+Asserts/ModuleManager.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Serialization/Debug+Asserts/ModuleManager.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Serialization/Debug+Asserts/ASTReader.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Serialization/Debug+Asserts/ASTReader.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Serialization/Debug+Asserts/ASTWriter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Serialization/Debug+Asserts/ASTWriter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Serialization/Debug+Asserts/ASTReaderDecl.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Serialization/Debug+Asserts/ASTReaderDecl.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Serialization/Debug+Asserts/GlobalModuleIndex.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Serialization/Debug+Asserts/GlobalModuleIndex.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Serialization/Debug+Asserts/Module.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Serialization/Debug+Asserts/Module.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Serialization/GeneratePCH.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Serialization/GeneratePCH.cpp:                           raw_ostream *OS)
./tools/clang/lib/Serialization/Module.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Parse/Debug+Asserts/ParseStmt.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Parse/Debug+Asserts/ParseStmt.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Parse/Debug+Asserts/ParseCXXInlineMethods.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Parse/Debug+Asserts/ParseCXXInlineMethods.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Parse/Debug+Asserts/ParseTentative.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Parse/Debug+Asserts/ParseTentative.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Parse/Debug+Asserts/ParsePragma.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Parse/Debug+Asserts/ParsePragma.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Parse/Debug+Asserts/ParseObjc.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Parse/Debug+Asserts/ParseObjc.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Parse/Debug+Asserts/ParseInit.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Parse/Debug+Asserts/ParseInit.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Parse/Debug+Asserts/ParseAST.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Parse/Debug+Asserts/ParseAST.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Parse/Debug+Asserts/ParseExprCXX.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Parse/Debug+Asserts/ParseExprCXX.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Parse/Debug+Asserts/ParseExpr.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Parse/Debug+Asserts/ParseExpr.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Parse/Debug+Asserts/ParseDeclCXX.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Parse/Debug+Asserts/ParseDeclCXX.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Parse/Debug+Asserts/ParseTemplate.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Parse/Debug+Asserts/ParseTemplate.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Parse/Debug+Asserts/Parser.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Parse/Debug+Asserts/Parser.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Parse/Debug+Asserts/ParseDecl.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Parse/Debug+Asserts/ParseDecl.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Parse/ParseAST.cpp:  virtual void print(raw_ostream &OS) const;
./tools/clang/lib/Parse/ParseAST.cpp:void PrettyStackTraceParserEntry::print(raw_ostream &OS) const {
./tools/clang/lib/Parse/Parser.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Parse/ParseInit.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Sema/Sema.cpp:void PrettyDeclStackTraceEntry::print(raw_ostream &OS) const {
./tools/clang/lib/Sema/SemaChecking.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Sema/SemaInit.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Sema/SemaInit.cpp:void InitializationSequence::dump(raw_ostream &OS) const {
./tools/clang/lib/Sema/SemaLookup.cpp:void LookupResult::print(raw_ostream &Out) {
./tools/clang/lib/Sema/Debug+Asserts/SemaLambda.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaLambda.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/MultiplexExternalSemaSource.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/MultiplexExternalSemaSource.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaStmt.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaStmt.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/DeclSpec.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/DeclSpec.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaDeclCXX.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaDeclCXX.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaObjCProperty.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaObjCProperty.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/TargetAttributesSema.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/TargetAttributesSema.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaCXXScopeSpec.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaCXXScopeSpec.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaCodeComplete.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaCodeComplete.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/Sema.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/Sema.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaExprObjC.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaExprObjC.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaChecking.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaChecking.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaExceptionSpec.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaExceptionSpec.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaAccess.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaAccess.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/JumpDiagnostics.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/JumpDiagnostics.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaInit.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaInit.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/AnalysisBasedWarnings.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/AnalysisBasedWarnings.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaCast.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaCast.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaTemplate.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaTemplate.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaExprCXX.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaExprCXX.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaDecl.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaDecl.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaDeclObjC.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaDeclObjC.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaExpr.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaExpr.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaLookup.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaLookup.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaTemplateInstantiateDecl.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaTemplateInstantiateDecl.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaExprMember.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaExprMember.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaStmtAttr.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaStmtAttr.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaAttr.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaAttr.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/CodeCompleteConsumer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/CodeCompleteConsumer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaTemplateInstantiate.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaTemplateInstantiate.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaOverload.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaOverload.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaDeclAttr.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaDeclAttr.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaPseudoObject.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaPseudoObject.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaFixItUtils.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaFixItUtils.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/DelayedDiagnostic.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/DelayedDiagnostic.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaStmtAsm.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaStmtAsm.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaTemplateVariadic.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaTemplateVariadic.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaType.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaType.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/Debug+Asserts/SemaTemplateDeduction.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Sema/Debug+Asserts/SemaTemplateDeduction.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Sema/SemaOverload.cpp:  raw_ostream &OS = llvm::errs();
./tools/clang/lib/Sema/SemaOverload.cpp:  raw_ostream &OS = llvm::errs();
./tools/clang/lib/Sema/SemaOverload.cpp:  raw_ostream &OS = llvm::errs();
./tools/clang/lib/Sema/CodeCompleteConsumer.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/FrontendTool/Debug+Asserts/ExecuteCompilerInvocation.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/FrontendTool/Debug+Asserts/ExecuteCompilerInvocation.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Rewrite/Frontend/FixItRewriter.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Rewrite/Frontend/FixItRewriter.cpp:bool FixItRewriter::WriteFixedFile(FileID ID, raw_ostream &OS) {
./tools/clang/lib/Rewrite/Frontend/RewriteObjC.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Rewrite/Frontend/RewriteObjC.cpp:    raw_ostream* OutFile;
./tools/clang/lib/Rewrite/Frontend/RewriteObjC.cpp:    RewriteObjC(std::string inFile, raw_ostream *OS,
./tools/clang/lib/Rewrite/Frontend/RewriteObjC.cpp:    RewriteObjCFragileABI(std::string inFile, raw_ostream *OS,
./tools/clang/lib/Rewrite/Frontend/RewriteObjC.cpp:RewriteObjC::RewriteObjC(std::string inFile, raw_ostream* OS,
./tools/clang/lib/Rewrite/Frontend/RewriteObjC.cpp:                                       raw_ostream* OS,
./tools/clang/lib/Rewrite/Frontend/FrontendActions.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Rewrite/Frontend/FrontendActions.cpp:  if (raw_ostream *OS = CI.createDefaultOutputFile(false, InFile))
./tools/clang/lib/Rewrite/Frontend/FrontendActions.cpp:  if (raw_ostream *OS = CI.createDefaultOutputFile(false, InFile, "cpp")) {
./tools/clang/lib/Rewrite/Frontend/FrontendActions.cpp:  raw_ostream *OS = CI.createDefaultOutputFile(true, getCurrentFile());
./tools/clang/lib/Rewrite/Frontend/FrontendActions.cpp:  raw_ostream *OS = CI.createDefaultOutputFile(false, getCurrentFile());
./tools/clang/lib/Rewrite/Frontend/FrontendActions.cpp:  raw_ostream *OS = CI.createDefaultOutputFile(true, getCurrentFile());
./tools/clang/lib/Rewrite/Frontend/RewriteTest.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Rewrite/Frontend/RewriteTest.cpp:void clang::DoRewriteTest(Preprocessor &PP, raw_ostream* OS) {
./tools/clang/lib/Rewrite/Frontend/RewriteModernObjC.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Rewrite/Frontend/RewriteModernObjC.cpp:    raw_ostream* OutFile;
./tools/clang/lib/Rewrite/Frontend/RewriteModernObjC.cpp:    RewriteModernObjC(std::string inFile, raw_ostream *OS,
./tools/clang/lib/Rewrite/Frontend/RewriteModernObjC.cpp:RewriteModernObjC::RewriteModernObjC(std::string inFile, raw_ostream* OS,
./tools/clang/lib/Rewrite/Frontend/RewriteModernObjC.cpp:                                       raw_ostream* OS,
./tools/clang/lib/Rewrite/Frontend/InclusionRewriter.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Rewrite/Frontend/InclusionRewriter.cpp:  raw_ostream &OS; ///< The destination stream for rewritten contents.
./tools/clang/lib/Rewrite/Frontend/InclusionRewriter.cpp:  InclusionRewriter(Preprocessor &PP, raw_ostream &OS, bool ShowLineMarkers);
./tools/clang/lib/Rewrite/Frontend/InclusionRewriter.cpp:InclusionRewriter::InclusionRewriter(Preprocessor &PP, raw_ostream &OS,
./tools/clang/lib/Rewrite/Frontend/InclusionRewriter.cpp:void clang::RewriteIncludesInInput(Preprocessor &PP, raw_ostream *OS,
./tools/clang/lib/Rewrite/Frontend/RewriteMacros.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Rewrite/Frontend/RewriteMacros.cpp:void clang::RewriteMacrosInInput(Preprocessor &PP, raw_ostream *OS) {
./tools/clang/lib/Rewrite/Frontend/HTMLPrint.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Rewrite/Frontend/HTMLPrint.cpp:    raw_ostream *Out;
./tools/clang/lib/Rewrite/Frontend/HTMLPrint.cpp:    HTMLPrinter(raw_ostream *OS, Preprocessor &pp,
./tools/clang/lib/Rewrite/Frontend/HTMLPrint.cpp:ASTConsumer* clang::CreateHTMLPrinter(raw_ostream *OS,
./tools/clang/lib/Rewrite/Frontend/Debug+Asserts/RewriteTest.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Rewrite/Frontend/Debug+Asserts/RewriteTest.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Rewrite/Frontend/Debug+Asserts/RewriteMacros.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Rewrite/Frontend/Debug+Asserts/RewriteMacros.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Rewrite/Frontend/Debug+Asserts/RewriteObjC.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Rewrite/Frontend/Debug+Asserts/RewriteObjC.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Rewrite/Frontend/Debug+Asserts/RewriteModernObjC.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Rewrite/Frontend/Debug+Asserts/RewriteModernObjC.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Rewrite/Frontend/Debug+Asserts/InclusionRewriter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Rewrite/Frontend/Debug+Asserts/InclusionRewriter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Rewrite/Frontend/Debug+Asserts/FixItRewriter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Rewrite/Frontend/Debug+Asserts/FixItRewriter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Rewrite/Frontend/Debug+Asserts/HTMLPrint.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Rewrite/Frontend/Debug+Asserts/HTMLPrint.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Rewrite/Frontend/Debug+Asserts/FrontendActions.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Rewrite/Frontend/Debug+Asserts/FrontendActions.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Rewrite/Core/Rewriter.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Rewrite/Core/Rewriter.cpp:raw_ostream &RewriteBuffer::write(raw_ostream &os) const {
./tools/clang/lib/Rewrite/Core/Rewriter.cpp:  raw_ostream &getStream() { return *FileStream; }
./tools/clang/lib/Rewrite/Core/HTMLRewrite.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Rewrite/Core/Debug+Asserts/Rewriter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Rewrite/Core/Debug+Asserts/Rewriter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Rewrite/Core/Debug+Asserts/HTMLRewrite.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Rewrite/Core/Debug+Asserts/HTMLRewrite.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Tooling/FileMatchTrie.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Tooling/FileMatchTrie.cpp:                                        raw_ostream &Error) const {
./tools/clang/lib/Tooling/Tooling.cpp:#include "llvm/Support/raw_ostream.h"
./tools/clang/lib/Tooling/Debug+Asserts/Refactoring.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Tooling/Debug+Asserts/Refactoring.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Tooling/Debug+Asserts/FileMatchTrie.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/clang/lib/Tooling/Debug+Asserts/FileMatchTrie.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Tooling/Debug+Asserts/RefactoringCallbacks.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Tooling/Debug+Asserts/RefactoringCallbacks.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Tooling/Debug+Asserts/JSONCompilationDatabase.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Tooling/Debug+Asserts/JSONCompilationDatabase.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Tooling/Debug+Asserts/CommonOptionsParser.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Tooling/Debug+Asserts/CommonOptionsParser.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Tooling/Debug+Asserts/Tooling.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Tooling/Debug+Asserts/Tooling.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/clang/lib/Tooling/Debug+Asserts/CompilationDatabase.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/clang/lib/Tooling/Debug+Asserts/CompilationDatabase.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/macho-dump/macho-dump.cpp:#include "llvm/Support/raw_ostream.h"
./tools/macho-dump/Debug+Asserts/macho-dump.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/macho-dump/Debug+Asserts/macho-dump.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-dwarfdump/llvm-dwarfdump.cpp:#include "llvm/Support/raw_ostream.h"
./tools/llvm-dwarfdump/Debug+Asserts/llvm-dwarfdump.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/llvm-dwarfdump/Debug+Asserts/llvm-dwarfdump.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/lli/lli.cpp:#include "llvm/Support/raw_ostream.h"
./tools/lli/Debug+Asserts/RecordingMemoryManager.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/lli/Debug+Asserts/RecordingMemoryManager.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/lli/Debug+Asserts/lli.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./tools/lli/Debug+Asserts/lli.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./tools/llvm-as/Debug+Asserts/llvm-as.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./tools/llvm-as/Debug+Asserts/llvm-as.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./test/CodeGen/PowerPC/pr15031.ll:%"class.llvm::MCContext" = type { %"class.llvm::SourceMgr"*, %"class.llvm::MCAsmInfo"*, %"class.llvm::MCRegisterInfo"*, %"class.llvm::MCObjectFileInfo"*, %"class.llvm::BumpPtrAllocator", %"class.llvm::StringMap", %"class.llvm::StringMap.62", i32, %"class.llvm::DenseMap.63", i8*, %"class.llvm::raw_ostream"*, i8, %"class.std::basic_string", %"class.std::basic_string", %"class.std::vector", %"class.std::vector.70", %"class.llvm::MCDwarfLoc", i8, i8, i32, %"class.llvm::MCSection"*, %"class.llvm::MCSymbol"*, %"class.llvm::MCSymbol"*, %"class.std::vector.75", %"class.llvm::StringRef", %"class.llvm::StringRef", i8, %"class.llvm::DenseMap.80", %"class.std::vector.84", i8*, i8*, i8*, i8 }
./test/CodeGen/PowerPC/pr15031.ll:%"class.llvm::raw_ostream" = type { i32 (...)**, i8*, i8*, i8*, i32 }
./test/CodeGen/X86/2010-04-29-CoalescerCrash.ll:  switch i32 undef, label %_ZN12_GLOBAL__N_113SPUAsmPrinter16printInstructionEPKN4llvm12MachineInstrERNS1_11raw_ostreamE.exit [
./test/CodeGen/X86/2010-04-29-CoalescerCrash.ll:    i32 3, label %_ZN12_GLOBAL__N_113SPUAsmPrinter16printInstructionEPKN4llvm12MachineInstrERNS1_11raw_ostreamE.exit
./test/CodeGen/X86/2010-04-29-CoalescerCrash.ll:  %4 = call i8 @_ZN4llvm11raw_ostreamlsEl(i8 undef, i64 %3) nounwind ; <i8> [#uses=0]
./test/CodeGen/X86/2010-04-29-CoalescerCrash.ll:_ZN12_GLOBAL__N_113SPUAsmPrinter16printInstructionEPKN4llvm12MachineInstrERNS1_11raw_ostreamE.exit: ; preds = %"6.i", %"4.i"
./test/CodeGen/X86/2010-04-29-CoalescerCrash.ll:declare i8 @_ZN4llvm11raw_ostreamlsEl(i8, i64)
./test/CodeGen/X86/2012-05-19-CoalescerCrash.ll:define void @_ZN4llvm17AsmMatcherEmitter3runERNS_11raw_ostreamE() align 2 {
./examples/Fibonacci/fibonacci.cpp:#include "llvm/Support/raw_ostream.h"
./examples/BrainF/BrainFDriver.cpp:#include "llvm/Support/raw_ostream.h"
./examples/BrainF/BrainFDriver.cpp:  raw_ostream *out = &outs();
./examples/ModuleMaker/ModuleMaker.cpp:#include "llvm/Support/raw_ostream.h"
./examples/HowToUseJIT/HowToUseJIT.cpp:#include "llvm/Support/raw_ostream.h"
./docs/CodeGenerator.rst:   instruction printer takes an `MCInst`_ and renders it to a raw_ostream as
./docs/YamlIO.rst:      static void output(const T &value, llvm::raw_ostream &out) {
./docs/YamlIO.rst:To instantiate an Output object you need an llvm::raw_ostream, and optionally 
./docs/YamlIO.rst:        Output(llvm::raw_ostream &, void *context=NULL);
./docs/WritingAnLLVMPass.rst:  #include "llvm/Support/raw_ostream.h"
./docs/WritingAnLLVMPass.rst:    #include "llvm/Support/raw_ostream.h"
./docs/WritingAnLLVMPass.rst:  virtual void print(llvm::raw_ostream &O, const Module *M) const;
./docs/WritingAnLLVMPass.rst:The ``llvm::raw_ostream`` parameter specifies the stream to write the results
./docs/CodingStandards.rst:problematic in this regard --- just ``<iostream>``. However, ``raw_ostream``
./docs/CodingStandards.rst:  New code should always use `raw_ostream`_ for writing, or the
./docs/CodingStandards.rst:.. _raw_ostream:
./docs/CodingStandards.rst:Use ``raw_ostream``
./docs/CodingStandards.rst:``llvm/Support/raw_ostream.h``, which provides all of the common features of
./docs/CodingStandards.rst:``std::ostream``.  All new code should use ``raw_ostream`` instead of
./docs/CodingStandards.rst:Unlike ``std::ostream``, ``raw_ostream`` is not a template and can be forward
./docs/CodingStandards.rst:declared as ``class raw_ostream``.  Public headers should generally not include
./docs/CodingStandards.rst:the ``raw_ostream`` header, but use forward declarations and constant references
./docs/CodingStandards.rst:to ``raw_ostream`` instances.
./lib/ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h:#include "llvm/Support/raw_ostream.h"
./lib/ExecutionEngine/RuntimeDyld/Debug+Asserts/GDBRegistrar.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/ExecutionEngine/RuntimeDyld/Debug+Asserts/GDBRegistrar.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/ExecutionEngine/RuntimeDyld/Debug+Asserts/RuntimeDyld.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/ExecutionEngine/RuntimeDyld/Debug+Asserts/RuntimeDyld.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/ExecutionEngine/RuntimeDyld/Debug+Asserts/RuntimeDyldMachO.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/ExecutionEngine/RuntimeDyld/Debug+Asserts/RuntimeDyldMachO.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/ExecutionEngine/RuntimeDyld/Debug+Asserts/RuntimeDyldELF.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/ExecutionEngine/RuntimeDyld/Debug+Asserts/RuntimeDyldELF.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/ExecutionEngine/JIT/JITEmitter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/ExecutionEngine/JIT/Debug+Asserts/JITEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/ExecutionEngine/JIT/Debug+Asserts/JITEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/ExecutionEngine/JIT/Debug+Asserts/JITDwarfEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/ExecutionEngine/JIT/Debug+Asserts/JITDwarfEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/ExecutionEngine/JIT/Debug+Asserts/JIT.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/ExecutionEngine/JIT/Debug+Asserts/JIT.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/ExecutionEngine/JIT/Debug+Asserts/JITMemoryManager.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/ExecutionEngine/JIT/Debug+Asserts/JITMemoryManager.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/ExecutionEngine/JIT/JITMemoryManager.cpp:#include "llvm/Support/raw_ostream.h"
./lib/ExecutionEngine/IntelJITEvents/IntelJITEventListener.cpp:#include "llvm/Support/raw_ostream.h"
./lib/ExecutionEngine/MCJIT/Debug+Asserts/SectionMemoryManager.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/ExecutionEngine/MCJIT/Debug+Asserts/SectionMemoryManager.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/ExecutionEngine/MCJIT/Debug+Asserts/MCJIT.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/ExecutionEngine/MCJIT/Debug+Asserts/MCJIT.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/ExecutionEngine/OProfileJIT/OProfileJITEventListener.cpp:#include "llvm/Support/raw_ostream.h"
./lib/ExecutionEngine/OProfileJIT/OProfileWrapper.cpp:#include "llvm/Support/raw_ostream.h"
./lib/ExecutionEngine/Interpreter/Interpreter.h:#include "llvm/Support/raw_ostream.h"
./lib/ExecutionEngine/Interpreter/Debug+Asserts/ExternalFunctions.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/ExecutionEngine/Interpreter/Debug+Asserts/ExternalFunctions.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/ExecutionEngine/Interpreter/Debug+Asserts/Execution.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/ExecutionEngine/Interpreter/Debug+Asserts/Execution.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/ExecutionEngine/Interpreter/Debug+Asserts/Interpreter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/ExecutionEngine/Interpreter/Debug+Asserts/Interpreter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/ExecutionEngine/Debug+Asserts/ExecutionEngine.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/ExecutionEngine/Debug+Asserts/ExecutionEngine.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/ExecutionEngine/ExecutionEngine.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/TargetRegistry.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/TargetRegistry.cpp:  raw_ostream &OS = outs();
./lib/Support/Regex.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/CommandLine.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/CommandLine.cpp:    raw_ostream &OS = outs();
./lib/Support/ConstantRange.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/ConstantRange.cpp:void ConstantRange::print(raw_ostream &OS) const {
./lib/Support/PrettyStackTrace.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/PrettyStackTrace.cpp:static unsigned PrintStack(const PrettyStackTraceEntry *Entry, raw_ostream &OS){
./lib/Support/PrettyStackTrace.cpp:static void PrintCurStackTrace(raw_ostream &OS) {
./lib/Support/PrettyStackTrace.cpp:void PrettyStackTraceString::print(raw_ostream &OS) const {
./lib/Support/PrettyStackTrace.cpp:void PrettyStackTraceProgram::print(raw_ostream &OS) const {
./lib/Support/FileUtilities.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/raw_ostream.cpp://===--- raw_ostream.cpp - Implement the raw_ostream classes --------------===//
./lib/Support/raw_ostream.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/raw_ostream.cpp:raw_ostream::~raw_ostream() {
./lib/Support/raw_ostream.cpp:  // raw_ostream's subclasses should take care to flush the buffer
./lib/Support/raw_ostream.cpp:         "raw_ostream destructor called with non-empty buffer!");
./lib/Support/raw_ostream.cpp:void raw_ostream::handle() {}
./lib/Support/raw_ostream.cpp:size_t raw_ostream::preferred_buffer_size() const {
./lib/Support/raw_ostream.cpp:void raw_ostream::SetBuffered() {
./lib/Support/raw_ostream.cpp:void raw_ostream::SetBufferAndMode(char *BufferStart, size_t Size,
./lib/Support/raw_ostream.cpp:raw_ostream &raw_ostream::operator<<(unsigned long N) {
./lib/Support/raw_ostream.cpp:raw_ostream &raw_ostream::operator<<(long N) {
./lib/Support/raw_ostream.cpp:raw_ostream &raw_ostream::operator<<(unsigned long long N) {
./lib/Support/raw_ostream.cpp:raw_ostream &raw_ostream::operator<<(long long N) {
./lib/Support/raw_ostream.cpp:raw_ostream &raw_ostream::write_hex(unsigned long long N) {
./lib/Support/raw_ostream.cpp:raw_ostream &raw_ostream::write_escaped(StringRef Str,
./lib/Support/raw_ostream.cpp:raw_ostream &raw_ostream::operator<<(const void *P) {
./lib/Support/raw_ostream.cpp:raw_ostream &raw_ostream::operator<<(double N) {
./lib/Support/raw_ostream.cpp:void raw_ostream::flush_nonempty() {
./lib/Support/raw_ostream.cpp:raw_ostream &raw_ostream::write(unsigned char C) {
./lib/Support/raw_ostream.cpp:raw_ostream &raw_ostream::write(const char *Ptr, size_t Size) {
./lib/Support/raw_ostream.cpp:void raw_ostream::copy_to_buffer(const char *Ptr, size_t Size) {
./lib/Support/raw_ostream.cpp:raw_ostream &raw_ostream::operator<<(const format_object_base &Fmt) {
./lib/Support/raw_ostream.cpp:raw_ostream &raw_ostream::indent(unsigned NumSpaces) {
./lib/Support/raw_ostream.cpp:  : raw_ostream(unbuffered), FD(fd),
./lib/Support/raw_ostream.cpp:  // destructing raw_ostream objects which may have errors.
./lib/Support/raw_ostream.cpp:      // raw_ostream isn't designed to do non-blocking I/O. However, some
./lib/Support/raw_ostream.cpp:      // don't use O_NONBLOCK file descriptors with raw_ostream.
./lib/Support/raw_ostream.cpp:  return raw_ostream::preferred_buffer_size();
./lib/Support/raw_ostream.cpp:raw_ostream &raw_fd_ostream::changeColor(enum Colors colors, bool bold,
./lib/Support/raw_ostream.cpp:raw_ostream &raw_fd_ostream::resetColor() {
./lib/Support/raw_ostream.cpp:raw_ostream &raw_fd_ostream::reverseColor() {
./lib/Support/raw_ostream.cpp:/// outs() - This returns a reference to a raw_ostream for standard output.
./lib/Support/raw_ostream.cpp:raw_ostream &llvm::outs() {
./lib/Support/raw_ostream.cpp:/// errs() - This returns a reference to a raw_ostream for standard error.
./lib/Support/raw_ostream.cpp:raw_ostream &llvm::errs() {
./lib/Support/raw_ostream.cpp:/// nulls() - This returns a reference to a raw_ostream which discards output.
./lib/Support/raw_ostream.cpp:raw_ostream &llvm::nulls() {
./lib/Support/raw_ostream.cpp:// buffer for the raw_ostream. We guarantee that the raw_ostream buffer is
./lib/Support/raw_ostream.cpp:// capacity. This allows raw_ostream to write directly into the correct place,
./lib/Support/raw_ostream.cpp:  // least 128 bytes free; raw_ostream itself only requires 64, but we want to
./lib/Support/raw_ostream.cpp:  // ~raw_ostream asserts that the buffer is empty. This isn't necessary
./lib/Support/FormattedStream.cpp:// This file contains the implementation of formatted_raw_ostream.
./lib/Support/FormattedStream.cpp:void formatted_raw_ostream::ComputeColumn(const char *Ptr, size_t Size) {
./lib/Support/FormattedStream.cpp:  // scanned those bytes. This depends on raw_ostream to not change our buffer
./lib/Support/FormattedStream.cpp:formatted_raw_ostream &formatted_raw_ostream::PadToColumn(unsigned NewCol) { 
./lib/Support/FormattedStream.cpp:void formatted_raw_ostream::write_impl(const char *Ptr, size_t Size) {
./lib/Support/FormattedStream.cpp:/// fouts() - This returns a reference to a formatted_raw_ostream for
./lib/Support/FormattedStream.cpp:formatted_raw_ostream &llvm::fouts() {
./lib/Support/FormattedStream.cpp:  static formatted_raw_ostream S(outs());
./lib/Support/FormattedStream.cpp:/// ferrs() - This returns a reference to a formatted_raw_ostream for
./lib/Support/FormattedStream.cpp:formatted_raw_ostream &llvm::ferrs() {
./lib/Support/FormattedStream.cpp:  static formatted_raw_ostream S(errs());
./lib/Support/FormattedStream.cpp:/// fdbgs() - This returns a reference to a formatted_raw_ostream for
./lib/Support/FormattedStream.cpp:formatted_raw_ostream &llvm::fdbgs() {
./lib/Support/FormattedStream.cpp:  static formatted_raw_ostream S(dbgs());
./lib/Support/Timer.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/Timer.cpp:namespace llvm { extern raw_ostream *CreateInfoOutputFile(); }
./lib/Support/Timer.cpp:raw_ostream *llvm::CreateInfoOutputFile() {
./lib/Support/Timer.cpp:  raw_ostream *Result = new raw_fd_ostream(OutputFilename.c_str(),
./lib/Support/Timer.cpp:static void printVal(double Val, double Total, raw_ostream &OS) {
./lib/Support/Timer.cpp:void TimeRecord::print(const TimeRecord &Total, raw_ostream &OS) const {
./lib/Support/Timer.cpp:  raw_ostream *OutStream = CreateInfoOutputFile();
./lib/Support/Timer.cpp:void TimerGroup::PrintQueuedTimers(raw_ostream &OS) {
./lib/Support/Timer.cpp:void TimerGroup::print(raw_ostream &OS) {
./lib/Support/Timer.cpp:void TimerGroup::printAll(raw_ostream &OS) {
./lib/Support/YAMLTraits.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/YAMLTraits.cpp:Output::Output(raw_ostream &yout, void *context)
./lib/Support/YAMLTraits.cpp:void ScalarTraits<bool>::output(const bool &Val, void *, raw_ostream &Out) {
./lib/Support/YAMLTraits.cpp:                                     raw_ostream &Out) {
./lib/Support/YAMLTraits.cpp:                                   raw_ostream &Out) {
./lib/Support/YAMLTraits.cpp:                                    raw_ostream &Out) {
./lib/Support/YAMLTraits.cpp:                                    raw_ostream &Out) {
./lib/Support/YAMLTraits.cpp:                                    raw_ostream &Out) {
./lib/Support/YAMLTraits.cpp:void ScalarTraits<int8_t>::output(const int8_t &Val, void *, raw_ostream &Out) {
./lib/Support/YAMLTraits.cpp:                                   raw_ostream &Out) {
./lib/Support/YAMLTraits.cpp:                                   raw_ostream &Out) {
./lib/Support/YAMLTraits.cpp:                                   raw_ostream &Out) {
./lib/Support/YAMLTraits.cpp:void ScalarTraits<double>::output(const double &Val, void *, raw_ostream &Out) {
./lib/Support/YAMLTraits.cpp:void ScalarTraits<float>::output(const float &Val, void *, raw_ostream &Out) {
./lib/Support/YAMLTraits.cpp:void ScalarTraits<Hex8>::output(const Hex8 &Val, void *, raw_ostream &Out) {
./lib/Support/YAMLTraits.cpp:void ScalarTraits<Hex16>::output(const Hex16 &Val, void *, raw_ostream &Out) {
./lib/Support/YAMLTraits.cpp:void ScalarTraits<Hex32>::output(const Hex32 &Val, void *, raw_ostream &Out) {
./lib/Support/YAMLTraits.cpp:void ScalarTraits<Hex64>::output(const Hex64 &Val, void *, raw_ostream &Out) {
./lib/Support/Debug.cpp:#include "llvm/Support/circular_raw_ostream.h"
./lib/Support/Debug.cpp:  // circular_raw_ostream.  If NDEBUG is defined, then dbgs() ==
./lib/Support/Debug.cpp:  llvm::circular_raw_ostream *dbgout =
./lib/Support/Debug.cpp:    static_cast<llvm::circular_raw_ostream *>(&llvm::dbgs());
./lib/Support/Debug.cpp:raw_ostream &llvm::dbgs() {
./lib/Support/Debug.cpp:    circular_raw_ostream strm;
./lib/Support/Debug.cpp:  raw_ostream &dbgs() {
./lib/Support/APInt.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/APInt.cpp:void APInt::print(raw_ostream &OS, bool isSigned) const {
./lib/Support/BranchProbability.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/BranchProbability.cpp:void BranchProbability::print(raw_ostream &OS) const {
./lib/Support/BranchProbability.cpp:raw_ostream &operator<<(raw_ostream &OS, const BranchProbability &Prob) {
./lib/Support/YAMLParser.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/YAMLParser.cpp:bool yaml::dumpTokens(StringRef Input, raw_ostream &OS) {
./lib/Support/Twine.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/Twine.cpp:void Twine::printOneChild(raw_ostream &OS, Child Ptr,
./lib/Support/Twine.cpp:void Twine::printOneChildRepr(raw_ostream &OS, Child Ptr,
./lib/Support/Twine.cpp:void Twine::print(raw_ostream &OS) const {
./lib/Support/Twine.cpp:void Twine::printRepr(raw_ostream &OS) const {
./lib/Support/circular_raw_ostream.cpp://===- circular_raw_ostream.cpp - Implement circular_raw_ostream ----------===//
./lib/Support/circular_raw_ostream.cpp:#include "llvm/Support/circular_raw_ostream.h"
./lib/Support/circular_raw_ostream.cpp:void circular_raw_ostream::write_impl(const char *Ptr, size_t Size) {
./lib/Support/circular_raw_ostream.cpp:void circular_raw_ostream::flushBufferWithBanner() {
./lib/Support/Host.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/Allocator.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/Statistic.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/Statistic.cpp:namespace llvm { extern raw_ostream *CreateInfoOutputFile(); }
./lib/Support/Statistic.cpp:  friend void llvm::PrintStatistics(raw_ostream &OS);
./lib/Support/Statistic.cpp:void llvm::PrintStatistics(raw_ostream &OS) {
./lib/Support/Statistic.cpp:  raw_ostream &OutStream = *CreateInfoOutputFile();
./lib/Support/ErrorHandling.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/Debug+Asserts/raw_ostream.d:/home/andreu/Trabalhos/llvm-git/lib/Support/Debug+Asserts/raw_ostream.o \
./lib/Support/Debug+Asserts/raw_ostream.d:  /home/andreu/Trabalhos/llvm-git/lib/Support/Debug+Asserts/raw_ostream.d: \
./lib/Support/Debug+Asserts/raw_ostream.d:  raw_ostream.cpp \
./lib/Support/Debug+Asserts/raw_ostream.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Support/Debug+Asserts/raw_ostream.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/YAMLParser.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Support/Debug+Asserts/YAMLParser.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/YAMLTraits.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Support/Debug+Asserts/YAMLTraits.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/PrettyStackTrace.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Support/Debug+Asserts/PrettyStackTrace.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/ErrorHandling.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Support/Debug+Asserts/ErrorHandling.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/ConstantRange.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Support/Debug+Asserts/ConstantRange.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/SourceMgr.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Support/Debug+Asserts/SourceMgr.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/Allocator.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Support/Debug+Asserts/Allocator.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/CommandLine.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Support/Debug+Asserts/CommandLine.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/FileUtilities.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Support/Debug+Asserts/FileUtilities.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/SystemUtils.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Support/Debug+Asserts/SystemUtils.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/Regex.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Support/Debug+Asserts/Regex.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/Host.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Support/Debug+Asserts/Host.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/circular_raw_ostream.d:/home/andreu/Trabalhos/llvm-git/lib/Support/Debug+Asserts/circular_raw_ostream.o \
./lib/Support/Debug+Asserts/circular_raw_ostream.d:  /home/andreu/Trabalhos/llvm-git/lib/Support/Debug+Asserts/circular_raw_ostream.d: \
./lib/Support/Debug+Asserts/circular_raw_ostream.d:  circular_raw_ostream.cpp \
./lib/Support/Debug+Asserts/circular_raw_ostream.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/circular_raw_ostream.h \
./lib/Support/Debug+Asserts/circular_raw_ostream.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Support/Debug+Asserts/circular_raw_ostream.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/circular_raw_ostream.h:
./lib/Support/Debug+Asserts/circular_raw_ostream.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/BranchProbability.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Support/Debug+Asserts/BranchProbability.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/FormattedStream.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Support/Debug+Asserts/FormattedStream.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/FileOutputBuffer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Support/Debug+Asserts/FileOutputBuffer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/ToolOutputFile.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Support/Debug+Asserts/ToolOutputFile.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/BlockFrequency.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Support/Debug+Asserts/BlockFrequency.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/PluginLoader.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Support/Debug+Asserts/PluginLoader.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/Statistic.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Support/Debug+Asserts/Statistic.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/Twine.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Support/Debug+Asserts/Twine.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/TargetRegistry.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Support/Debug+Asserts/TargetRegistry.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/DAGDeltaAlgorithm.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Support/Debug+Asserts/DAGDeltaAlgorithm.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/APInt.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Support/Debug+Asserts/APInt.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/GraphWriter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Support/Debug+Asserts/GraphWriter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/raw_os_ostream.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Support/Debug+Asserts/raw_os_ostream.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/LockFileManager.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Support/Debug+Asserts/LockFileManager.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/Errno.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Support/Debug+Asserts/Errno.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/Debug.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/circular_raw_ostream.h \
./lib/Support/Debug+Asserts/Debug.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Support/Debug+Asserts/Debug.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/circular_raw_ostream.h:
./lib/Support/Debug+Asserts/Debug.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/Debug+Asserts/Timer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Support/Debug+Asserts/Timer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Support/PluginLoader.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/DAGDeltaAlgorithm.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/FileOutputBuffer.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/Errno.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/CMakeLists.txt:  circular_raw_ostream.cpp
./lib/Support/CMakeLists.txt:  raw_ostream.cpp
./lib/Support/SystemUtils.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/SystemUtils.cpp:bool llvm::CheckBitcodeOutputToConsole(raw_ostream &stream_to_check,
./lib/Support/Release+Asserts/CommandLine.d.tmp: /home/andreu/Trabalhos/llvm/include/llvm/Support/raw_ostream.h \
./lib/Support/Release+Asserts/CommandLine.d.tmp:/home/andreu/Trabalhos/llvm/include/llvm/Support/raw_ostream.h:
./lib/Support/Release+Asserts/ConstantRange.d.tmp: /home/andreu/Trabalhos/llvm/include/llvm/Support/raw_ostream.h
./lib/Support/Release+Asserts/ConstantRange.d.tmp:/home/andreu/Trabalhos/llvm/include/llvm/Support/raw_ostream.h:
./lib/Support/raw_os_ostream.cpp:// This implements support adapting raw_ostream to std::ostream.
./lib/Support/SourceMgr.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/SourceMgr.cpp:void SourceMgr::PrintIncludeStack(SMLoc IncludeLoc, raw_ostream &OS) const {
./lib/Support/SourceMgr.cpp:  raw_ostream &OS = errs();
./lib/Support/SourceMgr.cpp:static void printSourceLine(raw_ostream &S, StringRef LineContents) {
./lib/Support/SourceMgr.cpp:void SMDiagnostic::print(const char *ProgName, raw_ostream &S,
./lib/Support/SourceMgr.cpp:    S.changeColor(raw_ostream::SAVEDCOLOR, true);
./lib/Support/SourceMgr.cpp:      S.changeColor(raw_ostream::RED, true);
./lib/Support/SourceMgr.cpp:      S.changeColor(raw_ostream::MAGENTA, true);
./lib/Support/SourceMgr.cpp:      S.changeColor(raw_ostream::BLACK, true);
./lib/Support/SourceMgr.cpp:    S.changeColor(raw_ostream::SAVEDCOLOR, true);
./lib/Support/SourceMgr.cpp:    S.changeColor(raw_ostream::GREEN, true);
./lib/Support/BlockFrequency.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Support/BlockFrequency.cpp:void BlockFrequency::print(raw_ostream &OS) const {
./lib/Support/BlockFrequency.cpp:raw_ostream &operator<<(raw_ostream &OS, const BlockFrequency &Freq) {
./lib/Support/LockFileManager.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/MachineFunctionPrinterPass.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/MachineFunctionPrinterPass.cpp:  raw_ostream &OS;
./lib/CodeGen/MachineFunctionPrinterPass.cpp:  MachineFunctionPrinterPass(raw_ostream &os, const std::string &banner) 
./lib/CodeGen/MachineFunctionPrinterPass.cpp:MachineFunctionPass *createMachineFunctionPrinterPass(raw_ostream &OS,
./lib/CodeGen/BranchFolding.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/MachineDominators.cpp:void MachineDominatorTree::print(raw_ostream &OS, const Module*) const {
./lib/CodeGen/MachineSink.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/MachineTraceMetrics.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/MachineTraceMetrics.cpp:void MachineTraceMetrics::Ensemble::print(raw_ostream &OS) const {
./lib/CodeGen/MachineTraceMetrics.cpp:void MachineTraceMetrics::TraceBlockInfo::print(raw_ostream &OS) const {
./lib/CodeGen/MachineTraceMetrics.cpp:void MachineTraceMetrics::Trace::print(raw_ostream &OS) const {
./lib/CodeGen/RegisterPressure.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/MachineInstr.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/MachineInstr.cpp:void MachineOperand::print(raw_ostream &OS, const TargetMachine *TM) const {
./lib/CodeGen/MachineInstr.cpp:raw_ostream &llvm::operator<<(raw_ostream &OS, const MachineMemOperand &MMO) {
./lib/CodeGen/MachineInstr.cpp:                         raw_ostream &CommentOS) {
./lib/CodeGen/MachineInstr.cpp:void MachineInstr::print(raw_ostream &OS, const TargetMachine *TM,
./lib/CodeGen/ScheduleDAGPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/RegAllocBasic.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/EdgeBundles.cpp:raw_ostream &llvm::WriteGraph(raw_ostream &O, const EdgeBundles &G,
./lib/CodeGen/SplitKit.h:class raw_ostream;
./lib/CodeGen/ExecutionDepsFix.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/ScheduleDAG.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/MachineLICM.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/MachineFunctionPass.cpp:Pass *MachineFunctionPass::createPrinterPass(raw_ostream &O,
./lib/CodeGen/LexicalScopes.cpp:  raw_ostream &err = dbgs();
./lib/CodeGen/CallingConvLower.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/MachineVerifier.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/MachineVerifier.cpp:    raw_ostream *OS;
./lib/CodeGen/MachineVerifier.cpp:  raw_ostream *OutFile = 0;
./lib/CodeGen/CalcSpillWeights.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/RegAllocFast.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/RegisterCoalescer.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/RegisterCoalescer.cpp:    virtual void print(raw_ostream &O, const Module* = 0) const;
./lib/CodeGen/RegisterCoalescer.cpp:void RegisterCoalescer::print(raw_ostream &O, const Module* m) const {
./lib/CodeGen/RegAllocBase.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/GCMetadata.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/GCMetadata.cpp:    raw_ostream &OS;
./lib/CodeGen/GCMetadata.cpp:    explicit Printer(raw_ostream &OS) : FunctionPass(ID), OS(OS) {}
./lib/CodeGen/GCMetadata.cpp:FunctionPass *llvm::createGCInfoPrinter(raw_ostream &OS) {
./lib/CodeGen/LocalStackSlotAllocation.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/AggressiveAntiDepBreaker.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/MachineFunction.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/MachineFunction.cpp:void MachineFunction::print(raw_ostream &OS, SlotIndexes *Indexes) const {
./lib/CodeGen/MachineFunction.cpp:void MachineFrameInfo::print(const MachineFunction &MF, raw_ostream &OS) const{
./lib/CodeGen/MachineFunction.cpp:void MachineJumpTableInfo::print(raw_ostream &OS) const {
./lib/CodeGen/MachineFunction.cpp:void MachineConstantPool::print(raw_ostream &OS) const {
./lib/CodeGen/IntrinsicLowering.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/RegAllocGreedy.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/InlineSpiller.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/InlineSpiller.cpp:static raw_ostream &operator<<(raw_ostream &OS,
./lib/CodeGen/SjLjEHPrepare.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/SelectionDAG/SelectionDAG.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/SelectionDAG/LegalizeTypes.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/SelectionDAG/LegalizeFloatTypes.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/SelectionDAG/SelectionDAGPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/SelectionDAG/LegalizeDAG.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/SelectionDAG/DAGCombiner.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/SelectionDAG/Debug+Asserts/SelectionDAGPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/SelectionDAG/Debug+Asserts/SelectionDAGPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/SelectionDAG/Debug+Asserts/ScheduleDAGFast.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/SelectionDAG/Debug+Asserts/ScheduleDAGFast.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/SelectionDAG/Debug+Asserts/SelectionDAGBuilder.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/SelectionDAG/Debug+Asserts/SelectionDAGBuilder.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/SelectionDAG/Debug+Asserts/LegalizeTypes.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/CodeGen/SelectionDAG/Debug+Asserts/LegalizeTypes.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/SelectionDAG/Debug+Asserts/LegalizeFloatTypes.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/CodeGen/SelectionDAG/Debug+Asserts/LegalizeFloatTypes.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/SelectionDAG/Debug+Asserts/ResourcePriorityQueue.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/CodeGen/SelectionDAG/Debug+Asserts/ResourcePriorityQueue.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/SelectionDAG/Debug+Asserts/FastISel.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/SelectionDAG/Debug+Asserts/FastISel.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/SelectionDAG/Debug+Asserts/FunctionLoweringInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/SelectionDAG/Debug+Asserts/FunctionLoweringInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/SelectionDAG/Debug+Asserts/ScheduleDAGSDNodes.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/SelectionDAG/Debug+Asserts/ScheduleDAGSDNodes.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/SelectionDAG/Debug+Asserts/ScheduleDAGVLIW.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/CodeGen/SelectionDAG/Debug+Asserts/ScheduleDAGVLIW.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/SelectionDAG/Debug+Asserts/LegalizeDAG.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/SelectionDAG/Debug+Asserts/LegalizeDAG.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/SelectionDAG/Debug+Asserts/SelectionDAG.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/SelectionDAG/Debug+Asserts/SelectionDAG.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/SelectionDAG/Debug+Asserts/DAGCombiner.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/SelectionDAG/Debug+Asserts/DAGCombiner.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/SelectionDAG/Debug+Asserts/SelectionDAGDumper.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/SelectionDAG/Debug+Asserts/SelectionDAGDumper.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/SelectionDAG/Debug+Asserts/ScheduleDAGRRList.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/SelectionDAG/Debug+Asserts/ScheduleDAGRRList.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/SelectionDAG/Debug+Asserts/LegalizeVectorTypes.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/CodeGen/SelectionDAG/Debug+Asserts/LegalizeVectorTypes.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/SelectionDAG/Debug+Asserts/LegalizeIntegerTypes.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/CodeGen/SelectionDAG/Debug+Asserts/LegalizeIntegerTypes.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/SelectionDAG/Debug+Asserts/SelectionDAGISel.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/SelectionDAG/Debug+Asserts/SelectionDAGISel.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/SelectionDAG/SelectionDAGDumper.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/SelectionDAG/SelectionDAGDumper.cpp:void SDNode::print_types(raw_ostream &OS, const SelectionDAG *G) const {
./lib/CodeGen/SelectionDAG/SelectionDAGDumper.cpp:void SDNode::print_details(raw_ostream &OS, const SelectionDAG *G) const {
./lib/CodeGen/SelectionDAG/SelectionDAGDumper.cpp:void SDNode::printr(raw_ostream &OS, const SelectionDAG *G) const {
./lib/CodeGen/SelectionDAG/SelectionDAGDumper.cpp:static void DumpNodesr(raw_ostream &OS, const SDNode *N, unsigned indent,
./lib/CodeGen/SelectionDAG/SelectionDAGDumper.cpp:static void printrWithDepthHelper(raw_ostream &OS, const SDNode *N,
./lib/CodeGen/SelectionDAG/SelectionDAGDumper.cpp:void SDNode::printrWithDepth(raw_ostream &OS, const SelectionDAG *G,
./lib/CodeGen/SelectionDAG/SelectionDAGDumper.cpp:void SDNode::printrFull(raw_ostream &OS, const SelectionDAG *G) const {
./lib/CodeGen/SelectionDAG/SelectionDAGDumper.cpp:void SDNode::print(raw_ostream &OS, const SelectionDAG *G) const {
./lib/CodeGen/ProcessImplicitDefs.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/LiveDebugVariables.cpp:  void print(raw_ostream&, const TargetMachine*);
./lib/CodeGen/LiveDebugVariables.cpp:  void print(raw_ostream&);
./lib/CodeGen/LiveDebugVariables.cpp:void UserValue::print(raw_ostream &OS, const TargetMachine *TM) {
./lib/CodeGen/LiveDebugVariables.cpp:void LDVImpl::print(raw_ostream &OS) {
./lib/CodeGen/LiveIntervalUnion.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/LiveIntervalUnion.cpp:LiveIntervalUnion::print(raw_ostream &OS, const TargetRegisterInfo *TRI) const {
./lib/CodeGen/IfConversion.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/AllocationOrder.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/LiveInterval.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/LiveInterval.cpp:raw_ostream& llvm::operator<<(raw_ostream& os, const LiveRange &LR) {
./lib/CodeGen/LiveInterval.cpp:void LiveInterval::print(raw_ostream &OS) const {
./lib/CodeGen/LiveInterval.cpp:void LiveRange::print(raw_ostream &os) const {
./lib/CodeGen/LiveInterval.cpp:void LiveRangeUpdater::print(raw_ostream &OS) const {
./lib/CodeGen/PseudoSourceValue.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/PseudoSourceValue.cpp:void PseudoSourceValue::printCustom(raw_ostream &O) const {
./lib/CodeGen/PseudoSourceValue.cpp:void FixedStackPseudoSourceValue::printCustom(raw_ostream &OS) const {
./lib/CodeGen/MachineBasicBlock.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/MachineBasicBlock.cpp:raw_ostream &llvm::operator<<(raw_ostream &OS, const MachineBasicBlock &MBB) {
./lib/CodeGen/MachineBasicBlock.cpp:void MachineBasicBlock::print(raw_ostream &OS, SlotIndexes *Indexes) const {
./lib/CodeGen/MachineBasicBlock.cpp:void llvm::WriteAsOperand(raw_ostream &OS, const MachineBasicBlock *MBB,
./lib/CodeGen/Spiller.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/LiveStackAnalysis.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/LiveStackAnalysis.cpp:void LiveStacks::print(raw_ostream &OS, const Module*) const {
./lib/CodeGen/MachinePostDominators.cpp:MachinePostDominatorTree::print(llvm::raw_ostream &OS, const Module *M) const {
./lib/CodeGen/MachineScheduler.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/MachineScheduler.cpp:  virtual void print(raw_ostream &O, const Module* = 0) const;
./lib/CodeGen/MachineScheduler.cpp:void MachineScheduler::print(raw_ostream &O, const Module* m) const {
./lib/CodeGen/PostRASchedulerList.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/LiveRangeEdit.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/LiveIntervalAnalysis.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/LiveIntervalAnalysis.cpp:void LiveIntervals::print(raw_ostream &OS, const Module* ) const {
./lib/CodeGen/LiveIntervalAnalysis.cpp:void LiveIntervals::printInstrs(raw_ostream &OS) const {
./lib/CodeGen/TargetRegisterInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/TargetRegisterInfo.cpp:void PrintReg::print(raw_ostream &OS) const {
./lib/CodeGen/TargetRegisterInfo.cpp:void PrintRegUnit::print(raw_ostream &OS) const {
./lib/CodeGen/TargetSchedule.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/LatencyPriorityQueue.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/StackColoring.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/RegAllocPBQP.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/GCStrategy.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/CriticalAntiDepBreaker.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/AsmPrinter/AsmPrinter.cpp:static void emitComments(const MachineInstr &MI, raw_ostream &CommentOS) {
./lib/CodeGen/AsmPrinter/AsmPrinter.cpp:void AsmPrinter::printOffset(int64_t Offset, raw_ostream &OS) const {
./lib/CodeGen/AsmPrinter/AsmPrinter.cpp:static void PrintParentLoopComment(raw_ostream &OS, const MachineLoop *Loop,
./lib/CodeGen/AsmPrinter/AsmPrinter.cpp:static void PrintChildLoopComment(raw_ostream &OS, const MachineLoop *Loop,
./lib/CodeGen/AsmPrinter/AsmPrinter.cpp:  raw_ostream &OS = AP.OutStreamer.GetCommentOS();
./lib/CodeGen/AsmPrinter/DwarfAccelTable.cpp:void DwarfAccelTable::print(raw_ostream &O) {
./lib/CodeGen/AsmPrinter/DwarfAccelTable.h:    void print(raw_ostream &O) {
./lib/CodeGen/AsmPrinter/DwarfAccelTable.h:    void print(raw_ostream &O) {
./lib/CodeGen/AsmPrinter/DwarfAccelTable.h:    void print (raw_ostream &O) {
./lib/CodeGen/AsmPrinter/DwarfAccelTable.h:    void print(raw_ostream &O) const {
./lib/CodeGen/AsmPrinter/DwarfAccelTable.h:    void print(raw_ostream &O) {
./lib/CodeGen/AsmPrinter/DwarfAccelTable.h:  void print(raw_ostream &O);
./lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp:                               raw_ostream &OS) {
./lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp:                                unsigned LocCookie, raw_ostream &OS) {
./lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp:void AsmPrinter::PrintSpecial(const MachineInstr *MI, raw_ostream &OS,
./lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp:                                 raw_ostream &O) {
./lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp:                                       const char *ExtraCode, raw_ostream &O) {
./lib/CodeGen/AsmPrinter/Debug+Asserts/DwarfCFIException.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/AsmPrinter/Debug+Asserts/DwarfCFIException.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/AsmPrinter/Debug+Asserts/DwarfCompileUnit.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/AsmPrinter/Debug+Asserts/DwarfCompileUnit.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/AsmPrinter/Debug+Asserts/DIE.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/AsmPrinter/Debug+Asserts/DIE.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/AsmPrinter/Debug+Asserts/ARMException.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/AsmPrinter/Debug+Asserts/ARMException.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/AsmPrinter/Debug+Asserts/DwarfDebug.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/AsmPrinter/Debug+Asserts/DwarfDebug.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/AsmPrinter/Debug+Asserts/OcamlGCPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/AsmPrinter/Debug+Asserts/OcamlGCPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/AsmPrinter/Debug+Asserts/AsmPrinterDwarf.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/AsmPrinter/Debug+Asserts/AsmPrinterDwarf.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/AsmPrinter/Debug+Asserts/DwarfException.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/AsmPrinter/Debug+Asserts/DwarfException.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/AsmPrinter/Debug+Asserts/AsmPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/AsmPrinter/Debug+Asserts/AsmPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/AsmPrinter/Debug+Asserts/AsmPrinterInlineAsm.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/AsmPrinter/Debug+Asserts/AsmPrinterInlineAsm.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/AsmPrinter/Debug+Asserts/DwarfAccelTable.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/AsmPrinter/Debug+Asserts/DwarfAccelTable.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/AsmPrinter/Debug+Asserts/Win64Exception.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/AsmPrinter/Debug+Asserts/Win64Exception.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/AsmPrinter/DIE.cpp:void DIEAbbrev::print(raw_ostream &O) {
./lib/CodeGen/AsmPrinter/DIE.cpp:void DIE::print(raw_ostream &O, unsigned IncIndent) {
./lib/CodeGen/AsmPrinter/DIE.cpp:void DIEInteger::print(raw_ostream &O) {
./lib/CodeGen/AsmPrinter/DIE.cpp:void DIELabel::print(raw_ostream &O) {
./lib/CodeGen/AsmPrinter/DIE.cpp:void DIEDelta::print(raw_ostream &O) {
./lib/CodeGen/AsmPrinter/DIE.cpp:void DIEEntry::print(raw_ostream &O) {
./lib/CodeGen/AsmPrinter/DIE.cpp:void DIEBlock::print(raw_ostream &O) {
./lib/CodeGen/AsmPrinter/DIE.h:  class raw_ostream;
./lib/CodeGen/AsmPrinter/DIE.h:    void print(raw_ostream &O);
./lib/CodeGen/AsmPrinter/DIE.h:    void print(raw_ostream &O, unsigned IncIndent = 0);
./lib/CodeGen/AsmPrinter/DIE.h:    virtual void print(raw_ostream &O) = 0;
./lib/CodeGen/AsmPrinter/DIE.h:    virtual void print(raw_ostream &O);
./lib/CodeGen/AsmPrinter/DIE.h:    virtual void print(raw_ostream &O);
./lib/CodeGen/AsmPrinter/DIE.h:    virtual void print(raw_ostream &O);
./lib/CodeGen/AsmPrinter/DIE.h:    virtual void print(raw_ostream &O);
./lib/CodeGen/AsmPrinter/DIE.h:    virtual void print(raw_ostream &O);
./lib/CodeGen/ExpandPostRAPseudos.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/LLVMTargetMachine.cpp:                                            formatted_raw_ostream &Out,
./lib/CodeGen/LLVMTargetMachine.cpp:                                          raw_ostream &Out,
./lib/CodeGen/RegisterClassInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/LiveRegMatrix.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/SplitKit.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/MachineBranchProbabilityInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/MachineBranchProbabilityInfo.cpp:raw_ostream &MachineBranchProbabilityInfo::
./lib/CodeGen/MachineBranchProbabilityInfo.cpp:printEdgeProbability(raw_ostream &OS, MachineBasicBlock *Src,
./lib/CodeGen/DeadMachineInstructionElim.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/VirtRegMap.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/VirtRegMap.cpp:void VirtRegMap::print(raw_ostream &OS, const Module*) const {
./lib/CodeGen/ScoreboardHazardRecognizer.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/MachineCopyPropagation.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/Debug+Asserts/TailDuplication.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/TailDuplication.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/SjLjEHPrepare.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/SjLjEHPrepare.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/ScoreboardHazardRecognizer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/ScoreboardHazardRecognizer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/MachineBranchProbabilityInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/CodeGen/Debug+Asserts/MachineBranchProbabilityInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/RegAllocGreedy.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/RegAllocGreedy.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/StrongPHIElimination.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/StrongPHIElimination.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/RegAllocBasic.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/RegAllocBasic.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/ExpandPostRAPseudos.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/ExpandPostRAPseudos.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/PeepholeOptimizer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/PeepholeOptimizer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/MachineInstr.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/MachineInstr.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/MachineSSAUpdater.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/MachineSSAUpdater.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/IfConversion.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/IfConversion.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/VirtRegMap.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/VirtRegMap.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/MachineLoopInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/MachineLoopInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/SplitKit.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/SplitKit.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/TargetInstrInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/TargetInstrInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/DwarfEHPrepare.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/DwarfEHPrepare.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/DFAPacketizer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/DFAPacketizer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/LatencyPriorityQueue.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/CodeGen/Debug+Asserts/LatencyPriorityQueue.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/LLVMTargetMachine.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/LLVMTargetMachine.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/LiveIntervalAnalysis.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/LiveIntervalAnalysis.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/RegisterCoalescer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/RegisterCoalescer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/LocalStackSlotAllocation.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/LocalStackSlotAllocation.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/RegisterPressure.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/RegisterPressure.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/DeadMachineInstructionElim.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/DeadMachineInstructionElim.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/GCMetadata.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/CodeGen/Debug+Asserts/GCMetadata.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/RegisterScavenging.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/RegisterScavenging.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/TwoAddressInstructionPass.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/TwoAddressInstructionPass.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/LiveIntervalUnion.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/LiveIntervalUnion.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/UnreachableBlockElim.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/UnreachableBlockElim.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/PrologEpilogInserter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/PrologEpilogInserter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/LiveRegMatrix.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/LiveRegMatrix.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/LiveVariables.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/LiveVariables.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/MachineBasicBlock.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/MachineBasicBlock.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/TargetSchedule.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/TargetSchedule.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/MachineCopyPropagation.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/MachineCopyPropagation.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/Spiller.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/Spiller.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/RegAllocPBQP.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/RegAllocPBQP.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/IntrinsicLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/CodeGen/Debug+Asserts/IntrinsicLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/MachineDominators.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/MachineDominators.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/PostRASchedulerList.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/PostRASchedulerList.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/AllocationOrder.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/CodeGen/Debug+Asserts/AllocationOrder.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/ProcessImplicitDefs.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/ProcessImplicitDefs.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/EdgeBundles.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/CodeGen/Debug+Asserts/EdgeBundles.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/CallingConvLower.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/CallingConvLower.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/InlineSpiller.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/InlineSpiller.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/EarlyIfConversion.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/EarlyIfConversion.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/MachineModuleInfoImpls.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/MachineModuleInfoImpls.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/StackProtector.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/StackProtector.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/GCStrategy.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/GCStrategy.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/StackSlotColoring.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/StackSlotColoring.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/LiveInterval.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/CodeGen/Debug+Asserts/LiveInterval.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/PHIElimination.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/PHIElimination.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/ScheduleDAG.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/ScheduleDAG.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/BranchFolding.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/BranchFolding.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/RegisterClassInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/RegisterClassInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/CalcSpillWeights.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/CalcSpillWeights.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/ShrinkWrapping.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/ShrinkWrapping.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/MachinePostDominators.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/MachinePostDominators.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/LexicalScopes.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/CodeGen/Debug+Asserts/LexicalScopes.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/MachineScheduler.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/MachineScheduler.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/ScheduleDAGInstrs.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/ScheduleDAGInstrs.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/PseudoSourceValue.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/CodeGen/Debug+Asserts/PseudoSourceValue.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/MachineFunctionAnalysis.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/MachineFunctionAnalysis.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/MachineBlockPlacement.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/MachineBlockPlacement.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/SpillPlacement.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/SpillPlacement.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/RegAllocBase.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/RegAllocBase.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/LiveStackAnalysis.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/CodeGen/Debug+Asserts/LiveStackAnalysis.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/StackColoring.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/StackColoring.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/ExecutionDepsFix.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/ExecutionDepsFix.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/MachineVerifier.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/MachineVerifier.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/AggressiveAntiDepBreaker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/AggressiveAntiDepBreaker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/TargetLoweringObjectFileImpl.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/TargetLoweringObjectFileImpl.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/MachineSink.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/MachineSink.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/LiveRangeEdit.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/LiveRangeEdit.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/MachineTraceMetrics.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/MachineTraceMetrics.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/RegAllocFast.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/RegAllocFast.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/MachineFunction.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/MachineFunction.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/MachineFunctionPrinterPass.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/CodeGen/Debug+Asserts/MachineFunctionPrinterPass.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/CodePlacementOpt.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/CodePlacementOpt.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/MachineCSE.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/MachineCSE.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/MachineLICM.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/MachineLICM.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/ScheduleDAGPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/ScheduleDAGPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/CriticalAntiDepBreaker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/CriticalAntiDepBreaker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/MachineModuleInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/MachineModuleInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/TargetRegisterInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/CodeGen/Debug+Asserts/TargetRegisterInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/LiveDebugVariables.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/LiveDebugVariables.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/MachineBlockFrequencyInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/MachineBlockFrequencyInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/SlotIndexes.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/SlotIndexes.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/Debug+Asserts/LiveRangeCalc.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/CodeGen/Debug+Asserts/LiveRangeCalc.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/CodeGen/TailDuplication.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/EarlyIfConversion.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/MachineSSAUpdater.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/TargetInstrInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/SlotIndexes.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/SlotIndexes.cpp:// Print a SlotIndex to a raw_ostream.
./lib/CodeGen/SlotIndexes.cpp:void SlotIndex::print(raw_ostream &os) const {
./lib/CodeGen/TargetLoweringObjectFileImpl.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/RegisterScavenging.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/ScheduleDAGInstrs.cpp:#include "llvm/Support/raw_ostream.h"
./lib/CodeGen/ScheduleDAGInstrs.cpp:void ILPValue::print(raw_ostream &OS) const {
./lib/CodeGen/ScheduleDAGInstrs.cpp:raw_ostream &operator<<(raw_ostream &OS, const ILPValue &Val) {
./lib/IR/Constants.cpp:#include "llvm/Support/raw_ostream.h"
./lib/IR/PrintModulePass.cpp:#include "llvm/Support/raw_ostream.h"
./lib/IR/PrintModulePass.cpp:    raw_ostream *Out;       // raw_ostream to print on
./lib/IR/PrintModulePass.cpp:    PrintModulePass(const std::string &B, raw_ostream *o, bool DS)
./lib/IR/PrintModulePass.cpp:    raw_ostream *Out;       // raw_ostream to print on
./lib/IR/PrintModulePass.cpp:    PrintFunctionPass(const std::string &B, raw_ostream *o, bool DS)
./lib/IR/PrintModulePass.cpp:    raw_ostream *Out;       // raw_ostream to print on
./lib/IR/PrintModulePass.cpp:    PrintBasicBlockPass(const std::string &B, raw_ostream *o, bool DS)
./lib/IR/PrintModulePass.cpp:/// module to the specified raw_ostream.
./lib/IR/PrintModulePass.cpp:ModulePass *llvm::createPrintModulePass(llvm::raw_ostream *OS, 
./lib/IR/PrintModulePass.cpp:/// functions to the specified raw_ostream as they are processed.
./lib/IR/PrintModulePass.cpp:                                            llvm::raw_ostream *OS, 
./lib/IR/PrintModulePass.cpp:/// BB to the specified raw_ostream.
./lib/IR/PrintModulePass.cpp:BasicBlockPass *llvm::createPrintBasicBlockPass(llvm::raw_ostream *OS,
./lib/IR/Verifier.cpp:#include "llvm/Support/raw_ostream.h"
./lib/IR/Attributes.cpp:#include "llvm/Support/raw_ostream.h"
./lib/IR/ConstantsContext.h:#include "llvm/Support/raw_ostream.h"
./lib/IR/Pass.cpp:#include "llvm/Support/raw_ostream.h"
./lib/IR/Pass.cpp:Pass *ModulePass::createPrinterPass(raw_ostream &O,
./lib/IR/Pass.cpp:void Pass::print(raw_ostream &O,const Module*) const {
./lib/IR/Pass.cpp:Pass *FunctionPass::createPrinterPass(raw_ostream &O,
./lib/IR/Pass.cpp:Pass *BasicBlockPass::createPrinterPass(raw_ostream &O,
./lib/IR/AsmWriter.cpp:static void PrintCallingConv(unsigned cc, raw_ostream &Out) {
./lib/IR/AsmWriter.cpp:static void PrintEscapedString(StringRef Name, raw_ostream &Out) {
./lib/IR/AsmWriter.cpp:static void PrintLLVMName(raw_ostream &OS, StringRef Name, PrefixType Prefix) {
./lib/IR/AsmWriter.cpp:static void PrintLLVMName(raw_ostream &OS, const Value *V) {
./lib/IR/AsmWriter.cpp:  void print(Type *Ty, raw_ostream &OS);
./lib/IR/AsmWriter.cpp:  void printStructBody(StructType *Ty, raw_ostream &OS);
./lib/IR/AsmWriter.cpp:/// CalcTypeName - Write the specified type to the specified raw_ostream, making
./lib/IR/AsmWriter.cpp:void TypePrinting::print(Type *Ty, raw_ostream &OS) {
./lib/IR/AsmWriter.cpp:void TypePrinting::printStructBody(StructType *STy, raw_ostream &OS) {
./lib/IR/AsmWriter.cpp:static void WriteAsOperandInternal(raw_ostream &Out, const Value *V,
./lib/IR/AsmWriter.cpp:static void writeAtomicRMWOperation(raw_ostream &Out,
./lib/IR/AsmWriter.cpp:static void WriteOptimizationInfo(raw_ostream &Out, const User *U) {
./lib/IR/AsmWriter.cpp:static void WriteConstantInternal(raw_ostream &Out, const Constant *CV,
./lib/IR/AsmWriter.cpp:static void WriteMDNodeBodyInternal(raw_ostream &Out, const MDNode *Node,
./lib/IR/AsmWriter.cpp:static void WriteAsOperandInternal(raw_ostream &Out, const Value *V,
./lib/IR/AsmWriter.cpp:void llvm::WriteAsOperand(raw_ostream &Out, const Value *V,
./lib/IR/AsmWriter.cpp:  formatted_raw_ostream &Out;
./lib/IR/AsmWriter.cpp:  inline AssemblyWriter(formatted_raw_ostream &o, SlotTracker &Mac,
./lib/IR/AsmWriter.cpp:                         formatted_raw_ostream &Out) {
./lib/IR/AsmWriter.cpp:                            formatted_raw_ostream &Out) {
./lib/IR/AsmWriter.cpp:                                  formatted_raw_ostream &Out) {
./lib/IR/AsmWriter.cpp:                               formatted_raw_ostream &Out) {
./lib/IR/AsmWriter.cpp:void Module::print(raw_ostream &ROS, AssemblyAnnotationWriter *AAW) const {
./lib/IR/AsmWriter.cpp:  formatted_raw_ostream OS(ROS);
./lib/IR/AsmWriter.cpp:void NamedMDNode::print(raw_ostream &ROS, AssemblyAnnotationWriter *AAW) const {
./lib/IR/AsmWriter.cpp:  formatted_raw_ostream OS(ROS);
./lib/IR/AsmWriter.cpp:void Type::print(raw_ostream &OS) const {
./lib/IR/AsmWriter.cpp:void Value::print(raw_ostream &ROS, AssemblyAnnotationWriter *AAW) const {
./lib/IR/AsmWriter.cpp:  formatted_raw_ostream OS(ROS);
./lib/IR/AsmWriter.cpp:void Value::printCustom(raw_ostream &OS) const {
./lib/IR/Core.cpp:#include "llvm/Support/raw_ostream.h"
./lib/IR/Dominators.cpp:#include "llvm/Support/raw_ostream.h"
./lib/IR/Dominators.cpp:void DominatorTree::print(raw_ostream &OS, const Module *) const {
./lib/IR/ValueSymbolTable.cpp:#include "llvm/Support/raw_ostream.h"
./lib/IR/DebugInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/IR/DebugInfo.cpp:void DIDescriptor::print(raw_ostream &OS) const {
./lib/IR/DebugInfo.cpp:void DISubrange::printInternal(raw_ostream &OS) const {
./lib/IR/DebugInfo.cpp:void DIScope::printInternal(raw_ostream &OS) const {
./lib/IR/DebugInfo.cpp:void DICompileUnit::printInternal(raw_ostream &OS) const {
./lib/IR/DebugInfo.cpp:void DIEnumerator::printInternal(raw_ostream &OS) const {
./lib/IR/DebugInfo.cpp:void DIType::printInternal(raw_ostream &OS) const {
./lib/IR/DebugInfo.cpp:void DIDerivedType::printInternal(raw_ostream &OS) const {
./lib/IR/DebugInfo.cpp:void DICompositeType::printInternal(raw_ostream &OS) const {
./lib/IR/DebugInfo.cpp:void DISubprogram::printInternal(raw_ostream &OS) const {
./lib/IR/DebugInfo.cpp:void DIGlobalVariable::printInternal(raw_ostream &OS) const {
./lib/IR/DebugInfo.cpp:void DIVariable::printInternal(raw_ostream &OS) const {
./lib/IR/DebugInfo.cpp:void DIObjCProperty::printInternal(raw_ostream &OS) const {
./lib/IR/DebugInfo.cpp:static void printDebugLoc(DebugLoc DL, raw_ostream &CommentOS,
./lib/IR/DebugInfo.cpp:void DIVariable::printExtendedName(raw_ostream &OS) const {
./lib/IR/PassManager.cpp:#include "llvm/Support/raw_ostream.h"
./lib/IR/PassManager.cpp:void PassManagerPrettyStackEntry::print(raw_ostream &OS) const {
./lib/IR/PassManager.cpp:  Pass *createPrinterPass(raw_ostream &O, const std::string &Banner) const {
./lib/IR/PassManager.cpp:  Pass *createPrinterPass(raw_ostream &O, const std::string &Banner) const {
./lib/IR/PassManager.cpp:  Pass *createPrinterPass(raw_ostream &O, const std::string &Banner) const {
./lib/IR/Debug+Asserts/DebugLoc.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/IR/Debug+Asserts/DebugLoc.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/IR/Debug+Asserts/Core.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/IR/Debug+Asserts/Core.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/IR/Debug+Asserts/Dominators.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/IR/Debug+Asserts/Dominators.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/IR/Debug+Asserts/Instructions.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/IR/Debug+Asserts/Instructions.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/IR/Debug+Asserts/PassManager.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/IR/Debug+Asserts/PassManager.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/IR/Debug+Asserts/LLVMContextImpl.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/IR/Debug+Asserts/LLVMContextImpl.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/IR/Debug+Asserts/Value.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/IR/Debug+Asserts/Value.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/IR/Debug+Asserts/AsmWriter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/IR/Debug+Asserts/AsmWriter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/IR/Debug+Asserts/InlineAsm.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/IR/Debug+Asserts/InlineAsm.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/IR/Debug+Asserts/GCOV.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/IR/Debug+Asserts/GCOV.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/IR/Debug+Asserts/Type.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/IR/Debug+Asserts/Type.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/IR/Debug+Asserts/Verifier.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/IR/Debug+Asserts/Verifier.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/IR/Debug+Asserts/LeakDetector.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/IR/Debug+Asserts/LeakDetector.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/IR/Debug+Asserts/Metadata.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/IR/Debug+Asserts/Metadata.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/IR/Debug+Asserts/LLVMContext.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/IR/Debug+Asserts/LLVMContext.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/IR/Debug+Asserts/PrintModulePass.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/IR/Debug+Asserts/PrintModulePass.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/IR/Debug+Asserts/DebugInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/IR/Debug+Asserts/DebugInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/IR/Debug+Asserts/ValueSymbolTable.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/IR/Debug+Asserts/ValueSymbolTable.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/IR/Debug+Asserts/Constants.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/IR/Debug+Asserts/Constants.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/IR/Debug+Asserts/Pass.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/IR/Debug+Asserts/Pass.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/IR/Debug+Asserts/DataLayout.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/IR/Debug+Asserts/DataLayout.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/IR/Debug+Asserts/Attributes.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/IR/Debug+Asserts/Attributes.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/IR/DataLayout.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Object/Debug+Asserts/MachOObject.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Object/Debug+Asserts/MachOObject.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Object/Debug+Asserts/ELFObjectFile.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Object/Debug+Asserts/ELFObjectFile.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Object/Debug+Asserts/MachOObjectFile.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Object/Debug+Asserts/MachOObjectFile.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Object/MachOObject.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Object/MachOObject.cpp:void MachOObject::printHeader(raw_ostream &O) const {
./lib/Object/MachOObject.cpp:void MachOObject::print(raw_ostream &O) const {
./lib/DebugInfo/DWARFDebugInfoEntry.cpp:#include "llvm/Support/raw_ostream.h"
./lib/DebugInfo/DWARFDebugInfoEntry.cpp:void DWARFDebugInfoEntryMinimal::dump(raw_ostream &OS,
./lib/DebugInfo/DWARFDebugInfoEntry.cpp:void DWARFDebugInfoEntryMinimal::dumpAttribute(raw_ostream &OS,
./lib/DebugInfo/DWARFDebugLine.h:class raw_ostream;
./lib/DebugInfo/DWARFDebugLine.h:    void dump(raw_ostream &OS) const;
./lib/DebugInfo/DWARFDebugLine.h:    void dump(raw_ostream &OS) const;
./lib/DebugInfo/DWARFDebugLine.h:    void dump(raw_ostream &OS) const;
./lib/DebugInfo/DWARFDebugLine.h:    DumpingState(raw_ostream &OS) : OS(OS) {}
./lib/DebugInfo/DWARFDebugLine.h:    raw_ostream &OS;
./lib/DebugInfo/DWARFDebugRangeList.cpp:#include "llvm/Support/raw_ostream.h"
./lib/DebugInfo/DWARFDebugRangeList.cpp:void DWARFDebugRangeList::dump(raw_ostream &OS) const {
./lib/DebugInfo/DWARFDebugFrame.cpp:#include "llvm/Support/raw_ostream.h"
./lib/DebugInfo/DWARFDebugFrame.cpp:  virtual void dumpHeader(raw_ostream &OS) const = 0;
./lib/DebugInfo/DWARFDebugFrame.cpp:  virtual void dumpInstructions(raw_ostream &OS) const;
./lib/DebugInfo/DWARFDebugFrame.cpp:void FrameEntry::dumpInstructions(raw_ostream &OS) const {
./lib/DebugInfo/DWARFDebugFrame.cpp:  void dumpHeader(raw_ostream &OS) const {
./lib/DebugInfo/DWARFDebugFrame.cpp:  void dumpHeader(raw_ostream &OS) const {
./lib/DebugInfo/DWARFDebugFrame.cpp:void DWARFDebugFrame::dump(raw_ostream &OS) const {
./lib/DebugInfo/DWARFContext.cpp:#include "llvm/Support/raw_ostream.h"
./lib/DebugInfo/DWARFContext.cpp:void DWARFContext::dump(raw_ostream &OS, DIDumpType DumpType) {
./lib/DebugInfo/DWARFDebugAranges.cpp:#include "llvm/Support/raw_ostream.h"
./lib/DebugInfo/DWARFDebugAranges.cpp:void DWARFDebugAranges::dump(raw_ostream &OS) const {
./lib/DebugInfo/DWARFDebugAranges.cpp:void DWARFDebugAranges::Range::dump(raw_ostream &OS) const {
./lib/DebugInfo/DWARFCompileUnit.h:class raw_ostream;
./lib/DebugInfo/DWARFCompileUnit.h:  void dump(raw_ostream &OS);
./lib/DebugInfo/DWARFDebugFrame.h:#include "llvm/Support/raw_ostream.h"
./lib/DebugInfo/DWARFDebugFrame.h:  void dump(raw_ostream &OS) const;
./lib/DebugInfo/DWARFCompileUnit.cpp:#include "llvm/Support/raw_ostream.h"
./lib/DebugInfo/DWARFCompileUnit.cpp:void DWARFCompileUnit::dump(raw_ostream &OS) {
./lib/DebugInfo/DWARFFormValue.h:class raw_ostream;
./lib/DebugInfo/DWARFFormValue.h:  void dump(raw_ostream &OS, const DWARFCompileUnit* cu) const;
./lib/DebugInfo/DWARFDebugArangeSet.h:class raw_ostream;
./lib/DebugInfo/DWARFDebugArangeSet.h:  void dump(raw_ostream &OS) const;
./lib/DebugInfo/DWARFDebugInfoEntry.h:  void dump(raw_ostream &OS, const DWARFCompileUnit *cu,
./lib/DebugInfo/DWARFDebugInfoEntry.h:  void dumpAttribute(raw_ostream &OS, const DWARFCompileUnit *cu,
./lib/DebugInfo/DWARFDebugLine.cpp:#include "llvm/Support/raw_ostream.h"
./lib/DebugInfo/DWARFDebugLine.cpp:void DWARFDebugLine::Prologue::dump(raw_ostream &OS) const {
./lib/DebugInfo/DWARFDebugLine.cpp:void DWARFDebugLine::Row::dump(raw_ostream &OS) const {
./lib/DebugInfo/DWARFDebugLine.cpp:void DWARFDebugLine::LineTable::dump(raw_ostream &OS) const {
./lib/DebugInfo/DWARFDebugAranges.h:    void dump(raw_ostream &OS) const;
./lib/DebugInfo/DWARFDebugAranges.h:  void dump(raw_ostream &OS) const;
./lib/DebugInfo/DWARFAbbreviationDeclaration.h:class raw_ostream;
./lib/DebugInfo/DWARFAbbreviationDeclaration.h:  void dump(raw_ostream &OS) const;
./lib/DebugInfo/DWARFDebugArangeSet.cpp:#include "llvm/Support/raw_ostream.h"
./lib/DebugInfo/DWARFDebugArangeSet.cpp:void DWARFDebugArangeSet::dump(raw_ostream &OS) const {
./lib/DebugInfo/Debug+Asserts/DWARFDebugArangeSet.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/DebugInfo/Debug+Asserts/DWARFDebugArangeSet.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/DebugInfo/Debug+Asserts/DWARFDebugAbbrev.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/DebugInfo/Debug+Asserts/DWARFDebugAbbrev.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/DebugInfo/Debug+Asserts/DWARFDebugLine.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/DebugInfo/Debug+Asserts/DWARFDebugLine.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/DebugInfo/Debug+Asserts/DWARFContext.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/DebugInfo/Debug+Asserts/DWARFContext.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/DebugInfo/Debug+Asserts/DWARFDebugRangeList.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/DebugInfo/Debug+Asserts/DWARFDebugRangeList.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/DebugInfo/Debug+Asserts/DWARFDebugAranges.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/DebugInfo/Debug+Asserts/DWARFDebugAranges.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/DebugInfo/Debug+Asserts/DWARFFormValue.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/DebugInfo/Debug+Asserts/DWARFFormValue.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/DebugInfo/Debug+Asserts/DWARFDebugFrame.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/DebugInfo/Debug+Asserts/DWARFDebugFrame.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/DebugInfo/Debug+Asserts/DWARFCompileUnit.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/DebugInfo/Debug+Asserts/DWARFCompileUnit.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/DebugInfo/Debug+Asserts/DIContext.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/DebugInfo/Debug+Asserts/DIContext.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/DebugInfo/Debug+Asserts/DWARFDebugInfoEntry.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/DebugInfo/Debug+Asserts/DWARFDebugInfoEntry.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/DebugInfo/Debug+Asserts/DWARFAbbreviationDeclaration.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/DebugInfo/Debug+Asserts/DWARFAbbreviationDeclaration.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/DebugInfo/DWARFDebugAbbrev.h:  void dump(raw_ostream &OS) const;
./lib/DebugInfo/DWARFDebugAbbrev.h:  void dump(raw_ostream &OS) const;
./lib/DebugInfo/DWARFDebugAbbrev.cpp:#include "llvm/Support/raw_ostream.h"
./lib/DebugInfo/DWARFDebugAbbrev.cpp:void DWARFAbbreviationDeclarationSet::dump(raw_ostream &OS) const {
./lib/DebugInfo/DWARFDebugAbbrev.cpp:void DWARFDebugAbbrev::dump(raw_ostream &OS) const {
./lib/DebugInfo/DWARFFormValue.cpp:#include "llvm/Support/raw_ostream.h"
./lib/DebugInfo/DWARFFormValue.cpp:DWARFFormValue::dump(raw_ostream &OS, const DWARFCompileUnit *cu) const {
./lib/DebugInfo/DWARFAbbreviationDeclaration.cpp:#include "llvm/Support/raw_ostream.h"
./lib/DebugInfo/DWARFAbbreviationDeclaration.cpp:void DWARFAbbreviationDeclaration::dump(raw_ostream &OS) const {
./lib/DebugInfo/DWARFDebugRangeList.h:class raw_ostream;
./lib/DebugInfo/DWARFDebugRangeList.h:  void dump(raw_ostream &OS) const;
./lib/DebugInfo/DWARFContext.h:  virtual void dump(raw_ostream &OS, DIDumpType DumpType = DIDT_All);
./lib/Linker/LinkModules.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Linker/Linker.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Linker/Debug+Asserts/LinkModules.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Linker/Debug+Asserts/LinkModules.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Linker/Debug+Asserts/Linker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Linker/Debug+Asserts/Linker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Bitcode/Writer/BitcodeWriterPass.cpp:    raw_ostream &OS; // raw_ostream to print on
./lib/Bitcode/Writer/BitcodeWriterPass.cpp:    explicit WriteBitcodePass(raw_ostream &o)
./lib/Bitcode/Writer/BitcodeWriterPass.cpp:ModulePass *llvm::createBitcodeWriterPass(raw_ostream &Str) {
./lib/Bitcode/Writer/ValueEnumerator.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Bitcode/Writer/ValueEnumerator.cpp:void ValueEnumerator::print(raw_ostream &OS, const ValueMapType &Map,
./lib/Bitcode/Writer/BitcodeWriter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Bitcode/Writer/BitcodeWriter.cpp:void llvm::WriteBitcodeToFile(const Module *M, raw_ostream &Out) {
./lib/Bitcode/Writer/ValueEnumerator.h:class raw_ostream;
./lib/Bitcode/Writer/ValueEnumerator.h:  void print(raw_ostream &OS, const ValueMapType &Map, const char *Name) const;
./lib/Bitcode/Writer/Debug+Asserts/BitcodeWriter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Bitcode/Writer/Debug+Asserts/BitcodeWriter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Bitcode/Writer/Debug+Asserts/BitWriter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Bitcode/Writer/Debug+Asserts/BitWriter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Bitcode/Writer/Debug+Asserts/ValueEnumerator.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Bitcode/Writer/Debug+Asserts/ValueEnumerator.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Bitcode/Writer/BitWriter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Option/Arg.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Option/OptTable.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Option/OptTable.cpp:static void PrintHelpOptionList(raw_ostream &OS, StringRef Title,
./lib/Option/OptTable.cpp:void OptTable::PrintHelp(raw_ostream &OS, const char *Name,
./lib/Option/ArgList.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Option/Option.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Option/Debug+Asserts/Arg.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Option/Debug+Asserts/Arg.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Option/Debug+Asserts/Option.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Option/Debug+Asserts/Option.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Option/Debug+Asserts/OptTable.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Option/Debug+Asserts/OptTable.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Option/Debug+Asserts/ArgList.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Option/Debug+Asserts/ArgList.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/CostModel.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/CostModel.cpp:    virtual void print(raw_ostream &OS, const Module*) const;
./lib/Analysis/CostModel.cpp:void CostModelAnalysis::print(raw_ostream &OS, const Module*) const {
./lib/Analysis/PathNumbering.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/InstCount.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/InstCount.cpp:    virtual void print(raw_ostream &O, const Module *M) const {}
./lib/Analysis/PHITransAddr.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/ProfileDataLoaderPass.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/ProfileInfoLoaderPass.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/ProfileDataLoader.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/ProfileDataLoader.cpp:raw_ostream &llvm::operator<<(raw_ostream &O, std::pair<const BasicBlock *,
./lib/Analysis/ProfileInfoLoader.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/CFGPrinter.cpp:    void print(raw_ostream &OS, const Module* = 0) const {}
./lib/Analysis/CFGPrinter.cpp:    void print(raw_ostream &OS, const Module* = 0) const {}
./lib/Analysis/CFGPrinter.cpp:    void print(raw_ostream &OS, const Module* = 0) const {}
./lib/Analysis/CFGPrinter.cpp:    void print(raw_ostream &OS, const Module* = 0) const {}
./lib/Analysis/LoopPass.cpp:  raw_ostream &Out;       // raw_ostream to print on.
./lib/Analysis/LoopPass.cpp:  PrintLoopPass(const std::string &B, raw_ostream &o)
./lib/Analysis/LoopPass.cpp:Pass *LoopPass::createPrinterPass(raw_ostream &O,
./lib/Analysis/MemoryBuiltins.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/LoopInfo.cpp:void LoopInfo::print(raw_ostream &OS, const Module*) const {
./lib/Analysis/IPA/FindUsedTypes.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/IPA/FindUsedTypes.cpp:void FindUsedTypes::print(raw_ostream &OS, const Module *M) const {
./lib/Analysis/IPA/InlineCost.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/IPA/Debug+Asserts/CallGraph.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Analysis/IPA/Debug+Asserts/CallGraph.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/IPA/Debug+Asserts/FindUsedTypes.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Analysis/IPA/Debug+Asserts/FindUsedTypes.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/IPA/Debug+Asserts/CallPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Analysis/IPA/Debug+Asserts/CallPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/IPA/Debug+Asserts/CallGraphSCCPass.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Analysis/IPA/Debug+Asserts/CallGraphSCCPass.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/IPA/Debug+Asserts/InlineCost.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Analysis/IPA/Debug+Asserts/InlineCost.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/IPA/CallGraphSCCPass.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/IPA/CallGraphSCCPass.cpp:    raw_ostream &Out;       // raw_ostream to print on.
./lib/Analysis/IPA/CallGraphSCCPass.cpp:    PrintCallGraphPass(const std::string &B, raw_ostream &o)
./lib/Analysis/IPA/CallGraphSCCPass.cpp:Pass *CallGraphSCCPass::createPrinterPass(raw_ostream &O,
./lib/Analysis/IPA/CallGraph.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/IPA/CallGraph.cpp:  virtual void print(raw_ostream &OS, const Module *) const {
./lib/Analysis/IPA/CallGraph.cpp:void CallGraph::print(raw_ostream &OS, Module*) const {
./lib/Analysis/IPA/CallGraph.cpp:void CallGraphNode::print(raw_ostream &OS) const {
./lib/Analysis/DependenceAnalysis.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/DependenceAnalysis.cpp:void dumpExampleDependence(raw_ostream &OS, Function *F,
./lib/Analysis/DependenceAnalysis.cpp:void DependenceAnalysis::print(raw_ostream &OS, const Module*) const {
./lib/Analysis/DependenceAnalysis.cpp:void DependenceAnalysis::Constraint::dump(raw_ostream &OS) const {
./lib/Analysis/DependenceAnalysis.cpp:void Dependence::dump(raw_ostream &OS) const {
./lib/Analysis/MemDepPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/MemDepPrinter.cpp:    void print(raw_ostream &OS, const Module * = 0) const;
./lib/Analysis/MemDepPrinter.cpp:void MemDepPrinter::print(raw_ostream &OS, const Module *M) const {
./lib/Analysis/LazyValueInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/LazyValueInfo.cpp:raw_ostream &operator<<(raw_ostream &OS, const LVILatticeVal &Val)
./lib/Analysis/LazyValueInfo.cpp:raw_ostream &operator<<(raw_ostream &OS, const LVILatticeVal &Val) {
./lib/Analysis/Interval.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/Interval.cpp:void Interval::print(raw_ostream &OS) const {
./lib/Analysis/IVUsers.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/IVUsers.cpp:void IVUsers::print(raw_ostream &OS, const Module *M) const {
./lib/Analysis/AliasAnalysisCounter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/ProfileInfo.cpp:raw_ostream& operator<<(raw_ostream &O, const MachineFunction *MF) {
./lib/Analysis/ProfileInfo.cpp:raw_ostream& operator<<(raw_ostream &O, const MachineBasicBlock *MBB) {
./lib/Analysis/ProfileInfo.cpp:raw_ostream& operator<<(raw_ostream &O, std::pair<const MachineBasicBlock *, const MachineBasicBlock *> E) {
./lib/Analysis/BlockFrequencyInfo.cpp:void BlockFrequencyInfo::print(raw_ostream &O, const Module *) const {
./lib/Analysis/IntervalPartition.cpp:void IntervalPartition::print(raw_ostream &O, const Module*) const {
./lib/Analysis/DominanceFrontier.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/DominanceFrontier.cpp:void DominanceFrontierBase::print(raw_ostream &OS, const Module* ) const {
./lib/Analysis/ProfileVerifierPass.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/RegionInfo.cpp:void Region::print(raw_ostream &OS, bool print_tree, unsigned level,
./lib/Analysis/RegionInfo.cpp:void RegionInfo::print(raw_ostream &OS, const Module *) const {
./lib/Analysis/ScalarEvolution.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/ScalarEvolution.cpp:void SCEV::print(raw_ostream &OS) const {
./lib/Analysis/ScalarEvolution.cpp:static void PrintLoopInfo(raw_ostream &OS, ScalarEvolution *SE,
./lib/Analysis/ScalarEvolution.cpp:void ScalarEvolution::print(raw_ostream &OS, const Module *) const {
./lib/Analysis/AliasAnalysisEvaluator.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/RegionPass.cpp:  raw_ostream &Out;       // raw_ostream to print on.
./lib/Analysis/RegionPass.cpp:  PrintRegionPass(const std::string &B, raw_ostream &o)
./lib/Analysis/RegionPass.cpp:Pass *RegionPass::createPrinterPass(raw_ostream &O,
./lib/Analysis/Lint.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/Lint.cpp:    virtual void print(raw_ostream &O, const Module *M) const {}
./lib/Analysis/RegionPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/RegionPrinter.cpp:    raw_ostream &O = GW.getOStream();
./lib/Analysis/RegionPrinter.cpp:    raw_ostream &O = GW.getOStream();
./lib/Analysis/ModuleDebugInfoPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/ModuleDebugInfoPrinter.cpp:    virtual void print(raw_ostream &O, const Module *M) const;
./lib/Analysis/ModuleDebugInfoPrinter.cpp:void ModuleDebugInfoPrinter::print(raw_ostream &O, const Module *M) const {
./lib/Analysis/Debug+Asserts/InstructionSimplify.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/InstructionSimplify.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/PHITransAddr.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/PHITransAddr.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/ProfileVerifierPass.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/ProfileVerifierPass.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/MemoryDependenceAnalysis.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/MemoryDependenceAnalysis.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/AliasSetTracker.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Analysis/Debug+Asserts/AliasSetTracker.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/MemDepPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Analysis/Debug+Asserts/MemDepPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/ScalarEvolutionExpander.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/ScalarEvolutionExpander.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/PathProfileInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Analysis/Debug+Asserts/PathProfileInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/ProfileInfoLoaderPass.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/ProfileInfoLoaderPass.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/LazyValueInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/LazyValueInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/ProfileDataLoaderPass.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Analysis/Debug+Asserts/ProfileDataLoaderPass.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/DomPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/DomPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/ScalarEvolutionNormalization.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/ScalarEvolutionNormalization.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/ProfileInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/ProfileInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/MemoryBuiltins.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/MemoryBuiltins.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/PostDominators.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/PostDominators.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/LoopPass.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/LoopPass.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/LoopInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/LoopInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/ProfileDataLoader.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/ProfileDataLoader.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/AliasAnalysisEvaluator.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Analysis/Debug+Asserts/AliasAnalysisEvaluator.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/RegionInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/RegionInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/ScalarEvolution.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/ScalarEvolution.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/Interval.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Analysis/Debug+Asserts/Interval.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/DependenceAnalysis.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/DependenceAnalysis.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/AliasAnalysisCounter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Analysis/Debug+Asserts/AliasAnalysisCounter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/BranchProbabilityInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/BranchProbabilityInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/Trace.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Analysis/Debug+Asserts/Trace.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/DominanceFrontier.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/DominanceFrontier.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/BlockFrequencyInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/BlockFrequencyInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/SparsePropagation.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Analysis/Debug+Asserts/SparsePropagation.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/PathNumbering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Analysis/Debug+Asserts/PathNumbering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/ModuleDebugInfoPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Analysis/Debug+Asserts/ModuleDebugInfoPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/RegionPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/RegionPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/ProfileEstimatorPass.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/ProfileEstimatorPass.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/AliasAnalysis.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/AliasAnalysis.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/IVUsers.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/IVUsers.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/ProfileInfoLoader.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Analysis/Debug+Asserts/ProfileInfoLoader.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/RegionPass.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/RegionPass.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/CostModel.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Analysis/Debug+Asserts/CostModel.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/PathProfileVerifier.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Analysis/Debug+Asserts/PathProfileVerifier.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/Lint.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/Lint.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/CFGPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Analysis/Debug+Asserts/CFGPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/DbgInfoPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Analysis/Debug+Asserts/DbgInfoPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Debug+Asserts/InstCount.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Analysis/Debug+Asserts/InstCount.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Analysis/Trace.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/Trace.cpp:void Trace::print(raw_ostream &O) const {
./lib/Analysis/AliasSetTracker.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/AliasSetTracker.cpp:void AliasSet::print(raw_ostream &OS) const {
./lib/Analysis/AliasSetTracker.cpp:void AliasSetTracker::print(raw_ostream &OS) const {
./lib/Analysis/BranchProbabilityInfo.cpp:void BranchProbabilityInfo::print(raw_ostream &OS, const Module *) const {
./lib/Analysis/BranchProbabilityInfo.cpp:raw_ostream &
./lib/Analysis/BranchProbabilityInfo.cpp:BranchProbabilityInfo::printEdgeProbability(raw_ostream &OS,
./lib/Analysis/PostDominators.cpp:void PostDominatorTree::print(raw_ostream &OS, const Module *) const {
./lib/Analysis/SparsePropagation.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/SparsePropagation.cpp:void AbstractLatticeFunction::PrintValue(LatticeVal V, raw_ostream &OS) {
./lib/Analysis/SparsePropagation.cpp:void SparseSolver::Print(Function &F, raw_ostream &OS) const {
./lib/Analysis/ProfileEstimatorPass.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/PathProfileVerifier.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/PathProfileInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/DbgInfoPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Analysis/DbgInfoPrinter.cpp:    raw_ostream &Out;
./lib/Transforms/Instrumentation/GCOVProfiling.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Instrumentation/GCOVProfiling.cpp:    raw_ostream *os;
./lib/Transforms/Instrumentation/GCOVProfiling.cpp:    GCOVLines(StringRef F, raw_ostream *os) 
./lib/Transforms/Instrumentation/GCOVProfiling.cpp:    GCOVBlock(uint32_t Number, raw_ostream *os)
./lib/Transforms/Instrumentation/GCOVProfiling.cpp:    GCOVFunction(DISubprogram SP, raw_ostream *os,
./lib/Transforms/Instrumentation/BlackList.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Instrumentation/MemorySanitizer.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Instrumentation/PathProfiling.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Instrumentation/PathProfiling.cpp:  raw_ostream& operator<<(raw_ostream& os,
./lib/Transforms/Instrumentation/PathProfiling.cpp:  raw_ostream& operator<<(raw_ostream& os,
./lib/Transforms/Instrumentation/ThreadSanitizer.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Instrumentation/EdgeProfiling.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Instrumentation/BoundsChecking.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Instrumentation/Debug+Asserts/OptimalEdgeProfiling.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Instrumentation/Debug+Asserts/OptimalEdgeProfiling.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Instrumentation/Debug+Asserts/PathProfiling.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Instrumentation/Debug+Asserts/PathProfiling.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Instrumentation/Debug+Asserts/MemorySanitizer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Instrumentation/Debug+Asserts/MemorySanitizer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Instrumentation/Debug+Asserts/BoundsChecking.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Instrumentation/Debug+Asserts/BoundsChecking.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Instrumentation/Debug+Asserts/AddressSanitizer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Instrumentation/Debug+Asserts/AddressSanitizer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Instrumentation/Debug+Asserts/ThreadSanitizer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Instrumentation/Debug+Asserts/ThreadSanitizer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Instrumentation/Debug+Asserts/EdgeProfiling.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Instrumentation/Debug+Asserts/EdgeProfiling.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Instrumentation/Debug+Asserts/BlackList.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Instrumentation/Debug+Asserts/BlackList.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Instrumentation/Debug+Asserts/GCOVProfiling.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Instrumentation/Debug+Asserts/GCOVProfiling.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Instrumentation/AddressSanitizer.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Instrumentation/OptimalEdgeProfiling.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Scalar/Sink.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Scalar/CodeGenPrepare.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Scalar/CodeGenPrepare.cpp:  void print(raw_ostream &OS) const;
./lib/Transforms/Scalar/CodeGenPrepare.cpp:static inline raw_ostream &operator<<(raw_ostream &OS, const ExtAddrMode &AM) {
./lib/Transforms/Scalar/CodeGenPrepare.cpp:void ExtAddrMode::print(raw_ostream &OS) const {
./lib/Transforms/Scalar/LoopUnrollPass.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Scalar/MemCpyOptimizer.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Scalar/CorrelatedValuePropagation.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Scalar/ScalarReplAggregates.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Scalar/SROA.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Scalar/SROA.cpp:  void print(raw_ostream &OS, const_iterator I, StringRef Indent = "  ") const;
./lib/Transforms/Scalar/SROA.cpp:  void printUsers(raw_ostream &OS, const_iterator I,
./lib/Transforms/Scalar/SROA.cpp:  void print(raw_ostream &OS) const;
./lib/Transforms/Scalar/SROA.cpp:void AllocaPartitioning::print(raw_ostream &OS, const_iterator I,
./lib/Transforms/Scalar/SROA.cpp:void AllocaPartitioning::printUsers(raw_ostream &OS, const_iterator I,
./lib/Transforms/Scalar/SROA.cpp:void AllocaPartitioning::print(raw_ostream &OS) const {
./lib/Transforms/Scalar/Reassociate.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Scalar/IndVarSimplify.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Scalar/JumpThreading.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Scalar/TailRecursionElimination.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Scalar/LICM.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Scalar/LoopIdiomRecognize.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Scalar/LoopUnswitch.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Scalar/Debug+Asserts/Reassociate.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/Reassociate.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/CodeGenPrepare.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/CodeGenPrepare.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/CorrelatedValuePropagation.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/CorrelatedValuePropagation.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/SimplifyLibCalls.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/SimplifyLibCalls.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/LoopUnrollPass.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/LoopUnrollPass.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/SROA.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/SROA.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/EarlyCSE.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/EarlyCSE.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/LoopRotation.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/LoopRotation.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/LoopInstSimplify.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/LoopInstSimplify.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/SCCP.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/SCCP.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/LoopUnswitch.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/LoopUnswitch.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/DeadStoreElimination.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/DeadStoreElimination.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/ScalarReplAggregates.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/ScalarReplAggregates.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/BasicBlockPlacement.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/BasicBlockPlacement.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/LoopDeletion.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/LoopDeletion.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/JumpThreading.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/JumpThreading.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/LoopStrengthReduce.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/LoopStrengthReduce.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/IndVarSimplify.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/IndVarSimplify.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/Sink.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/Sink.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/TailRecursionElimination.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/TailRecursionElimination.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/LICM.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/LICM.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/GVN.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/GVN.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/LoopIdiomRecognize.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/LoopIdiomRecognize.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/Debug+Asserts/MemCpyOptimizer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Scalar/Debug+Asserts/MemCpyOptimizer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Scalar/SCCP.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Scalar/LoopStrengthReduce.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Scalar/LoopStrengthReduce.cpp:  void print(raw_ostream &OS) const;
./lib/Transforms/Scalar/LoopStrengthReduce.cpp:void RegSortData::print(raw_ostream &OS) const {
./lib/Transforms/Scalar/LoopStrengthReduce.cpp:  void print(raw_ostream &OS) const;
./lib/Transforms/Scalar/LoopStrengthReduce.cpp:void Formula::print(raw_ostream &OS) const {
./lib/Transforms/Scalar/LoopStrengthReduce.cpp:  void print(raw_ostream &OS) const;
./lib/Transforms/Scalar/LoopStrengthReduce.cpp:void Cost::print(raw_ostream &OS) const {
./lib/Transforms/Scalar/LoopStrengthReduce.cpp:  void print(raw_ostream &OS) const;
./lib/Transforms/Scalar/LoopStrengthReduce.cpp:void LSRFixup::print(raw_ostream &OS) const {
./lib/Transforms/Scalar/LoopStrengthReduce.cpp:  void print(raw_ostream &OS) const;
./lib/Transforms/Scalar/LoopStrengthReduce.cpp:void LSRUse::print(raw_ostream &OS) const {
./lib/Transforms/Scalar/LoopStrengthReduce.cpp:  void print_factors_and_types(raw_ostream &OS) const;
./lib/Transforms/Scalar/LoopStrengthReduce.cpp:  void print_fixups(raw_ostream &OS) const;
./lib/Transforms/Scalar/LoopStrengthReduce.cpp:  void print_uses(raw_ostream &OS) const;
./lib/Transforms/Scalar/LoopStrengthReduce.cpp:  void print(raw_ostream &OS) const;
./lib/Transforms/Scalar/LoopStrengthReduce.cpp:  void print(raw_ostream &OS) const;
./lib/Transforms/Scalar/LoopStrengthReduce.cpp:void WorkItem::print(raw_ostream &OS) const {
./lib/Transforms/Scalar/LoopStrengthReduce.cpp:void LSRInstance::print_factors_and_types(raw_ostream &OS) const {
./lib/Transforms/Scalar/LoopStrengthReduce.cpp:void LSRInstance::print_fixups(raw_ostream &OS) const {
./lib/Transforms/Scalar/LoopStrengthReduce.cpp:void LSRInstance::print_uses(raw_ostream &OS) const {
./lib/Transforms/Scalar/LoopStrengthReduce.cpp:void LSRInstance::print(raw_ostream &OS) const {
./lib/Transforms/Scalar/SimplifyLibCalls.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Utils/SimplifyCFG.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Utils/LoopUnroll.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Utils/SSAUpdater.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Utils/LowerSwitch.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Utils/LowerSwitch.cpp:static raw_ostream& operator<<(raw_ostream &O,
./lib/Transforms/Utils/LowerSwitch.cpp:static raw_ostream& operator<<(raw_ostream &O,
./lib/Transforms/Utils/CodeExtractor.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Utils/Debug+Asserts/SSAUpdater.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Utils/Debug+Asserts/SSAUpdater.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Utils/Debug+Asserts/LoopUnroll.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Utils/Debug+Asserts/LoopUnroll.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Utils/Debug+Asserts/BreakCriticalEdges.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Utils/Debug+Asserts/BreakCriticalEdges.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Utils/Debug+Asserts/PromoteMemoryToRegister.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Utils/Debug+Asserts/PromoteMemoryToRegister.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Utils/Debug+Asserts/SimplifyIndVar.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Utils/Debug+Asserts/SimplifyIndVar.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Utils/Debug+Asserts/LoopSimplify.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Utils/Debug+Asserts/LoopSimplify.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Utils/Debug+Asserts/BasicBlockUtils.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Utils/Debug+Asserts/BasicBlockUtils.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Utils/Debug+Asserts/SimplifyCFG.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Utils/Debug+Asserts/SimplifyCFG.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Utils/Debug+Asserts/LCSSA.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Utils/Debug+Asserts/LCSSA.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Utils/Debug+Asserts/Mem2Reg.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Utils/Debug+Asserts/Mem2Reg.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Utils/Debug+Asserts/CodeExtractor.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Utils/Debug+Asserts/CodeExtractor.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Utils/Debug+Asserts/LoopUnrollRuntime.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Utils/Debug+Asserts/LoopUnrollRuntime.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Utils/Debug+Asserts/Local.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Utils/Debug+Asserts/Local.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Utils/Debug+Asserts/LowerSwitch.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Utils/Debug+Asserts/LowerSwitch.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Utils/Debug+Asserts/SimplifyInstructions.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Utils/Debug+Asserts/SimplifyInstructions.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Utils/LoopUnrollRuntime.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Utils/SimplifyIndVar.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Utils/Local.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/IPO/Internalize.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/IPO/GlobalOpt.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/IPO/ArgumentPromotion.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/IPO/Inliner.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/IPO/DeadArgumentElimination.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/IPO/MergeFunctions.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/IPO/Debug+Asserts/GlobalOpt.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/IPO/Debug+Asserts/GlobalOpt.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/IPO/Debug+Asserts/Inliner.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/IPO/Debug+Asserts/Inliner.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/IPO/Debug+Asserts/LoopExtractor.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/IPO/Debug+Asserts/LoopExtractor.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/IPO/Debug+Asserts/Internalize.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Transforms/IPO/Debug+Asserts/Internalize.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/IPO/Debug+Asserts/PartialInlining.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/IPO/Debug+Asserts/PartialInlining.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/IPO/Debug+Asserts/ArgumentPromotion.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Transforms/IPO/Debug+Asserts/ArgumentPromotion.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/IPO/Debug+Asserts/MergeFunctions.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Transforms/IPO/Debug+Asserts/MergeFunctions.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/IPO/Debug+Asserts/DeadArgumentElimination.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Transforms/IPO/Debug+Asserts/DeadArgumentElimination.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Vectorize/BBVectorize.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Vectorize/LoopVectorize.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Vectorize/Debug+Asserts/BBVectorize.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Vectorize/Debug+Asserts/BBVectorize.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/Vectorize/Debug+Asserts/LoopVectorize.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/Vectorize/Debug+Asserts/LoopVectorize.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/InstCombine/InstCombineWorklist.h:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/InstCombine/Debug+Asserts/InstCombineCompares.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/InstCombine/Debug+Asserts/InstCombineCompares.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/InstCombine/Debug+Asserts/InstCombineLoadStoreAlloca.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/InstCombine/Debug+Asserts/InstCombineLoadStoreAlloca.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/InstCombine/Debug+Asserts/InstCombinePHI.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/InstCombine/Debug+Asserts/InstCombinePHI.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/InstCombine/Debug+Asserts/InstructionCombining.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/InstCombine/Debug+Asserts/InstructionCombining.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/InstCombine/Debug+Asserts/InstCombineMulDivRem.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/InstCombine/Debug+Asserts/InstCombineMulDivRem.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/InstCombine/Debug+Asserts/InstCombineCasts.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/InstCombine/Debug+Asserts/InstCombineCasts.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/InstCombine/Debug+Asserts/InstCombineSelect.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/InstCombine/Debug+Asserts/InstCombineSelect.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/InstCombine/Debug+Asserts/InstCombineShifts.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/InstCombine/Debug+Asserts/InstCombineShifts.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/InstCombine/Debug+Asserts/InstCombineAndOrXor.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/InstCombine/Debug+Asserts/InstCombineAndOrXor.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/InstCombine/Debug+Asserts/InstCombineCalls.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/InstCombine/Debug+Asserts/InstCombineCalls.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/InstCombine/Debug+Asserts/InstCombineAddSub.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/InstCombine/Debug+Asserts/InstCombineAddSub.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/InstCombine/Debug+Asserts/InstCombineSimplifyDemanded.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/InstCombine/Debug+Asserts/InstCombineSimplifyDemanded.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/InstCombine/Debug+Asserts/InstCombineVectorOps.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/InstCombine/Debug+Asserts/InstCombineVectorOps.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/ObjCARC/ObjCARCAPElim.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/ObjCARC/ObjCARC.h:class raw_ostream;
./lib/Transforms/ObjCARC/ObjCARC.h:raw_ostream &operator<<(raw_ostream &OS, const InstructionClass Class);
./lib/Transforms/ObjCARC/ObjCARCUtil.cpp:raw_ostream &llvm::objcarc::operator<<(raw_ostream &OS,
./lib/Transforms/ObjCARC/ObjCARCOpts.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/ObjCARC/ObjCARCOpts.cpp:  raw_ostream &operator<<(raw_ostream &OS, const Sequence S)
./lib/Transforms/ObjCARC/ObjCARCOpts.cpp:  raw_ostream &operator<<(raw_ostream &OS, const Sequence S) {
./lib/Transforms/ObjCARC/Debug+Asserts/ObjCARCExpand.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Transforms/ObjCARC/Debug+Asserts/ObjCARCExpand.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/ObjCARC/Debug+Asserts/ObjCARCAPElim.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Transforms/ObjCARC/Debug+Asserts/ObjCARCAPElim.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/ObjCARC/Debug+Asserts/ObjCARCContract.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Transforms/ObjCARC/Debug+Asserts/ObjCARCContract.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/ObjCARC/Debug+Asserts/ObjCARCOpts.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Transforms/ObjCARC/Debug+Asserts/ObjCARCOpts.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Transforms/ObjCARC/ObjCARCExpand.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Hello/Hello.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Transforms/Hello/Debug+Asserts/Hello.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Transforms/Hello/Debug+Asserts/Hello.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/AsmParser/LLParser.cpp:#include "llvm/Support/raw_ostream.h"
./lib/AsmParser/LLLexer.cpp:#include "llvm/Support/raw_ostream.h"
./lib/AsmParser/Debug+Asserts/LLLexer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/AsmParser/Debug+Asserts/LLLexer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/AsmParser/Debug+Asserts/Parser.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/AsmParser/Debug+Asserts/Parser.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/AsmParser/Debug+Asserts/LLParser.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/AsmParser/Debug+Asserts/LLParser.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/AsmParser/Parser.cpp:#include "llvm/Support/raw_ostream.h"
./lib/MC/MCELFStreamer.cpp:#include "llvm/Support/raw_ostream.h"
./lib/MC/MCELFStreamer.cpp:                                    raw_ostream &OS, MCCodeEmitter *CE,
./lib/MC/MCStreamer.cpp:#include "llvm/Support/raw_ostream.h"
./lib/MC/MCStreamer.cpp:raw_ostream &MCStreamer::GetCommentOS() {
./lib/MC/MCDisassembler/Disassembler.h:#include "llvm/Support/raw_ostream.h"
./lib/MC/MCDisassembler/Debug+Asserts/Disassembler.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/MCDisassembler/Debug+Asserts/Disassembler.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/MCSectionCOFF.cpp:#include "llvm/Support/raw_ostream.h"
./lib/MC/MCSectionCOFF.cpp:                                         raw_ostream &OS) const {
./lib/MC/MCContext.cpp:  delete (raw_ostream*)SecureLog;
./lib/MC/MCSectionELF.cpp:#include "llvm/Support/raw_ostream.h"
./lib/MC/MCSectionELF.cpp:                                        raw_ostream &OS) const {
./lib/MC/MCObjectStreamer.cpp:                                   MCAsmBackend &TAB, raw_ostream &OS,
./lib/MC/MCObjectStreamer.cpp:                                   MCAsmBackend &TAB, raw_ostream &OS,
./lib/MC/WinCOFFStreamer.cpp:#include "llvm/Support/raw_ostream.h"
./lib/MC/WinCOFFStreamer.cpp:                  raw_ostream &OS);
./lib/MC/WinCOFFStreamer.cpp:                                 MCCodeEmitter &CE, raw_ostream &OS)
./lib/MC/WinCOFFStreamer.cpp:                                    raw_ostream &OS,
./lib/MC/MCAssembler.cpp:#include "llvm/Support/raw_ostream.h"
./lib/MC/MCAssembler.cpp:                         raw_ostream &OS_)
./lib/MC/MCAssembler.cpp:raw_ostream &operator<<(raw_ostream &OS, const MCFixup &AF) {
./lib/MC/MCAssembler.cpp:  raw_ostream &OS = llvm::errs();
./lib/MC/MCAssembler.cpp:  raw_ostream &OS = llvm::errs();
./lib/MC/MCAssembler.cpp:  raw_ostream &OS = llvm::errs();
./lib/MC/MCAssembler.cpp:  raw_ostream &OS = llvm::errs();
./lib/MC/MCValue.cpp:#include "llvm/Support/raw_ostream.h"
./lib/MC/MCValue.cpp:void MCValue::print(raw_ostream &OS, const MCAsmInfo *MAI) const {
./lib/MC/MCSection.cpp:#include "llvm/Support/raw_ostream.h"
./lib/MC/MCInstPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/MC/MCInstPrinter.cpp:void MCInstPrinter::printRegName(raw_ostream &OS, unsigned RegNo) const {
./lib/MC/MCInstPrinter.cpp:void MCInstPrinter::printAnnotation(raw_ostream &OS, StringRef Annot) {
./lib/MC/MCMachOStreamer.cpp:#include "llvm/Support/raw_ostream.h"
./lib/MC/MCMachOStreamer.cpp:  MCMachOStreamer(MCContext &Context, MCAsmBackend &MAB, raw_ostream &OS,
./lib/MC/MCMachOStreamer.cpp:                                      raw_ostream &OS, MCCodeEmitter *CE,
./lib/MC/MCInst.cpp:#include "llvm/Support/raw_ostream.h"
./lib/MC/MCInst.cpp:void MCOperand::print(raw_ostream &OS, const MCAsmInfo *MAI) const {
./lib/MC/MCInst.cpp:void MCInst::print(raw_ostream &OS, const MCAsmInfo *MAI) const {
./lib/MC/MCInst.cpp:void MCInst::dump_pretty(raw_ostream &OS, const MCAsmInfo *MAI,
./lib/MC/ELFObjectWriter.cpp:                    raw_ostream &_OS, bool IsLittleEndian)
./lib/MC/ELFObjectWriter.cpp:                                            raw_ostream &OS,
./lib/MC/WinCOFFObjectWriter.cpp:  WinCOFFObjectWriter(MCWinCOFFObjectTargetWriter *MOTW, raw_ostream &OS);
./lib/MC/WinCOFFObjectWriter.cpp:                                         raw_ostream &OS)
./lib/MC/WinCOFFObjectWriter.cpp:                                            raw_ostream &OS) {
./lib/MC/MCDwarf.cpp:#include "llvm/Support/raw_ostream.h"
./lib/MC/MCDwarf.cpp:                             raw_ostream &OS) {
./lib/MC/MCDwarf.cpp:void MCDwarfFile::print(raw_ostream &OS) const {
./lib/MC/MCDwarf.cpp:                                           raw_ostream &OS) {
./lib/MC/MCSubtargetInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/MC/SubtargetFeature.cpp:#include "llvm/Support/raw_ostream.h"
./lib/MC/SubtargetFeature.cpp:void SubtargetFeatures::print(raw_ostream &OS) const {
./lib/MC/MachObjectWriter.cpp:                                             raw_ostream &OS,
./lib/MC/MCLabel.cpp:#include "llvm/Support/raw_ostream.h"
./lib/MC/MCLabel.cpp:void MCLabel::print(raw_ostream &OS) const {
./lib/MC/MCParser/MCAsmParser.cpp:#include "llvm/Support/raw_ostream.h"
./lib/MC/MCParser/DarwinAsmParser.cpp:  raw_ostream *OS = getContext().getSecureLog();
./lib/MC/MCParser/Debug+Asserts/COFFAsmParser.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/MCParser/Debug+Asserts/COFFAsmParser.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/MCParser/Debug+Asserts/ELFAsmParser.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/MCParser/Debug+Asserts/ELFAsmParser.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/MCParser/Debug+Asserts/AsmParser.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/MCParser/Debug+Asserts/AsmParser.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/MCParser/Debug+Asserts/DarwinAsmParser.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/MCParser/Debug+Asserts/DarwinAsmParser.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/MCParser/Debug+Asserts/MCAsmParser.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/MC/MCParser/Debug+Asserts/MCAsmParser.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/MCParser/AsmParser.cpp:#include "llvm/Support/raw_ostream.h"
./lib/MC/MCParser/AsmParser.cpp:  raw_ostream &OS = errs();
./lib/MC/MCExpr.cpp:#include "llvm/Support/raw_ostream.h"
./lib/MC/MCExpr.cpp:void MCExpr::print(raw_ostream &OS) const {
./lib/MC/Debug+Asserts/MCMachOStreamer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/MCMachOStreamer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCObjectFileInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/MCObjectFileInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCExpr.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/MCExpr.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCObjectWriter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/MCObjectWriter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCStreamer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/MCStreamer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCObjectStreamer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/MCObjectStreamer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCELFStreamer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/MCELFStreamer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCSection.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/MC/Debug+Asserts/MCSection.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCAsmInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/MCAsmInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCValue.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/MC/Debug+Asserts/MCValue.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCNullStreamer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/MCNullStreamer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCLabel.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/MCLabel.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCInstPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/MC/Debug+Asserts/MCInstPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCContext.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/MCContext.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCSymbol.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/MC/Debug+Asserts/MCSymbol.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCWin64EH.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/MCWin64EH.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MachObjectWriter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/MachObjectWriter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCPureStreamer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/MCPureStreamer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/SubtargetFeature.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/MC/Debug+Asserts/SubtargetFeature.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCSectionELF.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/MCSectionELF.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/ELFObjectWriter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/ELFObjectWriter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCSubtargetInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/MC/Debug+Asserts/MCSubtargetInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCSectionCOFF.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/MCSectionCOFF.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCDwarf.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/MCDwarf.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/WinCOFFStreamer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/WinCOFFStreamer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCInst.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/MC/Debug+Asserts/MCInst.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCSectionMachO.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/MC/Debug+Asserts/MCSectionMachO.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCAssembler.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/MCAssembler.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCAsmInfoDarwin.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/MCAsmInfoDarwin.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/WinCOFFObjectWriter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/WinCOFFObjectWriter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCMachObjectTargetWriter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/MCMachObjectTargetWriter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/Debug+Asserts/MCAsmStreamer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/MC/Debug+Asserts/MCAsmStreamer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/MC/MCPureStreamer.cpp:  MCPureStreamer(MCContext &Context, MCAsmBackend &TAB, raw_ostream &OS,
./lib/MC/MCPureStreamer.cpp:                                     raw_ostream &OS, MCCodeEmitter *CE) {
./lib/MC/MCSymbol.cpp:#include "llvm/Support/raw_ostream.h"
./lib/MC/MCSymbol.cpp:void MCSymbol::print(raw_ostream &OS) const {
./lib/MC/MCSectionMachO.cpp:#include "llvm/Support/raw_ostream.h"
./lib/MC/MCSectionMachO.cpp:                                          raw_ostream &OS) const {
./lib/MC/MCAsmStreamer.cpp:  formatted_raw_ostream &OS;
./lib/MC/MCAsmStreamer.cpp:  MCAsmStreamer(MCContext &Context, formatted_raw_ostream &os,
./lib/MC/MCAsmStreamer.cpp:  /// GetCommentOS - Return a raw_ostream that comments can be written to.
./lib/MC/MCAsmStreamer.cpp:  virtual raw_ostream &GetCommentOS() {
./lib/MC/MCAsmStreamer.cpp:static void PrintQuotedString(StringRef Data, raw_ostream &OS) {
./lib/MC/MCAsmStreamer.cpp:  raw_ostream &OS = GetCommentOS();
./lib/MC/MCAsmStreamer.cpp:                                    formatted_raw_ostream &OS,
./lib/TableGen/TableGenBackend.cpp:#include "llvm/Support/raw_ostream.h"
./lib/TableGen/TableGenBackend.cpp:static void printLine(raw_ostream &OS, const Twine &Prefix, char Fill,
./lib/TableGen/TableGenBackend.cpp:void llvm::emitSourceFileHeader(StringRef Desc, raw_ostream &OS) {
./lib/TableGen/StringMatcher.cpp:#include "llvm/Support/raw_ostream.h"
./lib/TableGen/Record.cpp:void RecordVal::print(raw_ostream &OS, bool PrintSem) const {
./lib/TableGen/Record.cpp:raw_ostream &llvm::operator<<(raw_ostream &OS, const Record &R) {
./lib/TableGen/Record.cpp:raw_ostream &llvm::operator<<(raw_ostream &OS, const RecordKeeper &RK) {
./lib/TableGen/Error.cpp:#include "llvm/Support/raw_ostream.h"
./lib/TableGen/Debug+Asserts/Main.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/TableGen/Debug+Asserts/Main.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/TableGen/Debug+Asserts/TableGenBackend.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/TableGen/Debug+Asserts/TableGenBackend.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/TableGen/Debug+Asserts/Record.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/TableGen/Debug+Asserts/Record.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/TableGen/Debug+Asserts/TGParser.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/TableGen/Debug+Asserts/TGParser.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/TableGen/Debug+Asserts/Error.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/TableGen/Debug+Asserts/Error.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/TableGen/Debug+Asserts/StringMatcher.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/TableGen/Debug+Asserts/StringMatcher.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.h:class raw_ostream;
./lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.h:MCObjectWriter *createPPCELFObjectWriter(raw_ostream &OS,
./lib/Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp:  void EncodeInstruction(const MCInst &MI, raw_ostream &OS,
./lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp:                                    raw_ostream &OS,
./lib/Target/PowerPC/MCTargetDesc/PPCELFObjectWriter.cpp:MCObjectWriter *llvm::createPPCELFObjectWriter(raw_ostream &OS,
./lib/Target/PowerPC/MCTargetDesc/Debug+Asserts/PPCMCCodeEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/PowerPC/MCTargetDesc/Debug+Asserts/PPCMCCodeEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/PowerPC/MCTargetDesc/Debug+Asserts/PPCMCTargetDesc.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/PowerPC/MCTargetDesc/Debug+Asserts/PPCMCTargetDesc.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/PowerPC/MCTargetDesc/Debug+Asserts/PPCAsmBackend.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/PowerPC/MCTargetDesc/Debug+Asserts/PPCAsmBackend.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp:    MCObjectWriter *createObjectWriter(raw_ostream &OS) const {
./lib/Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp:    MCObjectWriter *createObjectWriter(raw_ostream &OS) const {
./lib/Target/PowerPC/PPCISelDAGToDAG.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/PowerPC/PPCCodeEmitter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/PowerPC/PPCGenAsmWriter.inc:void PPCInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
./lib/Target/PowerPC/PPCGenAsmWriter.inc:bool PPCInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
./lib/Target/PowerPC/PPCRegisterInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.h:  virtual void printRegName(raw_ostream &OS, unsigned RegNo) const;
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.h:  virtual void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot);
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.h:  void printInstruction(const MCInst *MI, raw_ostream &O);
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.h:  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.h:                             raw_ostream &O, const char *Modifier = 0);
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.h:  void printS5ImmOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.h:  void printU5ImmOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.h:  void printU6ImmOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.h:  void printS16ImmOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.h:  void printU16ImmOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.h:  void printS16X4ImmOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.h:  void printBranchOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.h:  void printAbsAddrOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.h:  void printcrbitm(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.h:  void printMemRegImm(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.h:  void printMemRegImmShifted(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.h:  void printMemRegReg(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.h:  void printSymbolLo(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.h:  void printSymbolHi(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.cpp:void PPCInstPrinter::printRegName(raw_ostream &OS, unsigned RegNo) const {
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.cpp:void PPCInstPrinter::printInst(const MCInst *MI, raw_ostream &O,
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.cpp:                                           raw_ostream &O, 
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.cpp:                                       raw_ostream &O) {
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.cpp:                                       raw_ostream &O) {
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.cpp:                                       raw_ostream &O) {
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.cpp:                                        raw_ostream &O) {
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.cpp:                                        raw_ostream &O) {
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.cpp:                                          raw_ostream &O) {
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.cpp:                                        raw_ostream &O) {
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.cpp:                                         raw_ostream &O) {
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.cpp:                                 raw_ostream &O) {
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.cpp:                                    raw_ostream &O) {
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.cpp:                                           raw_ostream &O) {
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.cpp:                                    raw_ostream &O) {
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.cpp:                                  raw_ostream &O) {
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.cpp:                                   raw_ostream &O) {
./lib/Target/PowerPC/InstPrinter/PPCInstPrinter.cpp:                                   raw_ostream &O) {
./lib/Target/PowerPC/InstPrinter/Debug+Asserts/PPCInstPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/PowerPC/InstPrinter/Debug+Asserts/PPCInstPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/PowerPC/PPCJITInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/PowerPC/PPCInstrInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/PowerPC/PPCISelLowering.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/PowerPC/PPCGenSubtargetInfo.inc:#include "llvm/Support/raw_ostream.h"
./lib/Target/PowerPC/PPCCTRLoops.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/PowerPC/PPCCTRLoops.cpp:    void print(raw_ostream &OS, const TargetMachine *TM = 0) const {
./lib/Target/PowerPC/Debug+Asserts/PPCTargetMachine.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/PowerPC/Debug+Asserts/PPCTargetMachine.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/PowerPC/Debug+Asserts/PPCAsmPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/PowerPC/Debug+Asserts/PPCAsmPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/PowerPC/Debug+Asserts/PPCISelLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/PowerPC/Debug+Asserts/PPCISelLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/PowerPC/Debug+Asserts/PPCJITInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/PowerPC/Debug+Asserts/PPCJITInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/PowerPC/Debug+Asserts/PPCGenSubtargetInfo.inc.tmp:#include "llvm/Support/raw_ostream.h"
./lib/Target/PowerPC/Debug+Asserts/PPCRegisterInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/PowerPC/Debug+Asserts/PPCRegisterInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/PowerPC/Debug+Asserts/PPCHazardRecognizers.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/PowerPC/Debug+Asserts/PPCHazardRecognizers.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/PowerPC/Debug+Asserts/PPCGenAsmWriter.inc.tmp:void PPCInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
./lib/Target/PowerPC/Debug+Asserts/PPCGenAsmWriter.inc.tmp:bool PPCInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
./lib/Target/PowerPC/Debug+Asserts/PPCInstrInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/PowerPC/Debug+Asserts/PPCInstrInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/PowerPC/Debug+Asserts/PPCFrameLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/PowerPC/Debug+Asserts/PPCFrameLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/PowerPC/Debug+Asserts/PPCCTRLoops.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/PowerPC/Debug+Asserts/PPCCTRLoops.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/PowerPC/Debug+Asserts/PPCMCInstLower.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/PowerPC/Debug+Asserts/PPCMCInstLower.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/PowerPC/Debug+Asserts/PPCISelDAGToDAG.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/PowerPC/Debug+Asserts/PPCISelDAGToDAG.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/PowerPC/Debug+Asserts/PPCSubtarget.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/PowerPC/Debug+Asserts/PPCSubtarget.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/PowerPC/Debug+Asserts/PPCCodeEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/PowerPC/Debug+Asserts/PPCCodeEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/PowerPC/PPCHazardRecognizers.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/PowerPC/PPCAsmPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/PowerPC/PPCAsmPrinter.cpp:    void printOperand(const MachineInstr *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/PowerPC/PPCAsmPrinter.cpp:                         raw_ostream &O);
./lib/Target/PowerPC/PPCAsmPrinter.cpp:                               raw_ostream &O);
./lib/Target/PowerPC/PPCAsmPrinter.cpp:                                 raw_ostream &O) {
./lib/Target/PowerPC/PPCAsmPrinter.cpp:                                    const char *ExtraCode, raw_ostream &O) {
./lib/Target/PowerPC/PPCAsmPrinter.cpp:                                          raw_ostream &O) {
./lib/Target/X86/X86AsmPrinter.h:  void printSymbolOperand(const MachineOperand &MO, raw_ostream &O);
./lib/Target/X86/X86AsmPrinter.h:  void printOperand(const MachineInstr *MI, unsigned OpNo, raw_ostream &O,
./lib/Target/X86/X86AsmPrinter.h:  void printPCRelImm(const MachineInstr *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/X86/X86AsmPrinter.h:  bool printAsmMRegister(const MachineOperand &MO, char Mode, raw_ostream &O);
./lib/Target/X86/X86AsmPrinter.h:                               raw_ostream &OS) LLVM_OVERRIDE;
./lib/Target/X86/X86AsmPrinter.h:                                     raw_ostream &OS) LLVM_OVERRIDE;
./lib/Target/X86/X86AsmPrinter.h:  void printMemReference(const MachineInstr *MI, unsigned Op, raw_ostream &O,
./lib/Target/X86/X86AsmPrinter.h:  void printLeaMemReference(const MachineInstr *MI, unsigned Op, raw_ostream &O,
./lib/Target/X86/X86AsmPrinter.h:                              raw_ostream &O, const char *Modifier=NULL,
./lib/Target/X86/X86AsmPrinter.h:  void PrintDebugValueComment(const MachineInstr *MI, raw_ostream &OS);
./lib/Target/X86/X86InstrInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/X86/X86ISelDAGToDAG.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/X86/MCTargetDesc/X86AsmBackend.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/X86/MCTargetDesc/X86AsmBackend.cpp:  MCObjectWriter *createObjectWriter(raw_ostream &OS) const {
./lib/Target/X86/MCTargetDesc/X86AsmBackend.cpp:  MCObjectWriter *createObjectWriter(raw_ostream &OS) const {
./lib/Target/X86/MCTargetDesc/X86AsmBackend.cpp:  MCObjectWriter *createObjectWriter(raw_ostream &OS) const {
./lib/Target/X86/MCTargetDesc/X86AsmBackend.cpp:  MCObjectWriter *createObjectWriter(raw_ostream &OS) const {
./lib/Target/X86/MCTargetDesc/X86AsmBackend.cpp:  MCObjectWriter *createObjectWriter(raw_ostream &OS) const {
./lib/Target/X86/MCTargetDesc/X86MCTargetDesc.cpp:                                    raw_ostream &_OS,
./lib/Target/X86/MCTargetDesc/X86MachObjectWriter.cpp:MCObjectWriter *llvm::createX86MachObjectWriter(raw_ostream &OS,
./lib/Target/X86/MCTargetDesc/X86WinCOFFObjectWriter.cpp:MCObjectWriter *llvm::createX86WinCOFFObjectWriter(raw_ostream &OS,
./lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp:  void EmitByte(unsigned char C, unsigned &CurByte, raw_ostream &OS) const {
./lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp:                    raw_ostream &OS) const {
./lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp:                     unsigned &CurByte, raw_ostream &OS,
./lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp:                        unsigned &CurByte, raw_ostream &OS) const {
./lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp:                   unsigned &CurByte, raw_ostream &OS) const {
./lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp:                        uint64_t TSFlags, unsigned &CurByte, raw_ostream &OS,
./lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp:  void EncodeInstruction(const MCInst &MI, raw_ostream &OS,
./lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp:                           raw_ostream &OS) const;
./lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp:                                 raw_ostream &OS) const;
./lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp:                        raw_ostream &OS) const;
./lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp:              MCFixupKind FixupKind, unsigned &CurByte, raw_ostream &OS,
./lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp:                                        raw_ostream &OS,
./lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp:                                           raw_ostream &OS) const {
./lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp:                                        raw_ostream &OS) const {
./lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp:                                        raw_ostream &OS) const {
./lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp:EncodeInstruction(const MCInst &MI, raw_ostream &OS,
./lib/Target/X86/MCTargetDesc/X86MCTargetDesc.h:class raw_ostream;
./lib/Target/X86/MCTargetDesc/X86MCTargetDesc.h:MCObjectWriter *createX86MachObjectWriter(raw_ostream &OS,
./lib/Target/X86/MCTargetDesc/X86MCTargetDesc.h:MCObjectWriter *createX86ELFObjectWriter(raw_ostream &OS,
./lib/Target/X86/MCTargetDesc/X86MCTargetDesc.h:MCObjectWriter *createX86WinCOFFObjectWriter(raw_ostream &OS, bool Is64Bit);
./lib/Target/X86/MCTargetDesc/Debug+Asserts/X86MCAsmInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/MCTargetDesc/Debug+Asserts/X86MCAsmInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/MCTargetDesc/Debug+Asserts/X86MCCodeEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/MCTargetDesc/Debug+Asserts/X86MCCodeEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/MCTargetDesc/Debug+Asserts/X86MachObjectWriter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/MCTargetDesc/Debug+Asserts/X86MachObjectWriter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/MCTargetDesc/Debug+Asserts/X86MCTargetDesc.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/MCTargetDesc/Debug+Asserts/X86MCTargetDesc.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/MCTargetDesc/Debug+Asserts/X86AsmBackend.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/MCTargetDesc/Debug+Asserts/X86AsmBackend.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/MCTargetDesc/X86ELFObjectWriter.cpp:MCObjectWriter *llvm::createX86ELFObjectWriter(raw_ostream &OS,
./lib/Target/X86/X86GenAsmWriter.inc:void X86ATTInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
./lib/Target/X86/X86GenAsmWriter.inc:bool X86ATTInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
./lib/Target/X86/X86FloatingPoint.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.h:#include "llvm/Support/raw_ostream.h"
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.h:  virtual void printRegName(raw_ostream &OS, unsigned RegNo) const;
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.h:  virtual void printInst(const MCInst *MI, raw_ostream &OS, StringRef Annot);
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.h:  void printInstruction(const MCInst *MI, raw_ostream &O);
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.h:  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.h:  void printMemReference(const MCInst *MI, unsigned Op, raw_ostream &O);
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.h:  void printSSECC(const MCInst *MI, unsigned Op, raw_ostream &O);
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.h:  void printAVXCC(const MCInst *MI, unsigned Op, raw_ostream &O);
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.h:  void printPCRelImm(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.h:  void printopaquemem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.h:  void printi8mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.h:  void printi16mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.h:  void printi32mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.h:  void printi64mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.h:  void printi128mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.h:  void printi256mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.h:  void printf32mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.h:  void printf64mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.h:  void printf80mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.h:  void printf128mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.h:  void printf256mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.cpp:void X86IntelInstPrinter::printRegName(raw_ostream &OS, unsigned RegNo) const {
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.cpp:void X86IntelInstPrinter::printInst(const MCInst *MI, raw_ostream &OS,
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.cpp:                                     raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.cpp:                                     raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.cpp:                                        raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.cpp:static void PrintRegName(raw_ostream &O, StringRef RegName) {
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.cpp:                                       raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86IntelInstPrinter.cpp:                                            raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.h:  virtual void printRegName(raw_ostream &OS, unsigned RegNo) const;
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.h:  virtual void printInst(const MCInst *MI, raw_ostream &OS, StringRef Annot);
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.h:  bool printAliasInstr(const MCInst *MI, raw_ostream &OS);
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.h:  void printInstruction(const MCInst *MI, raw_ostream &OS);
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.h:  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &OS);
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.h:  void printMemReference(const MCInst *MI, unsigned Op, raw_ostream &OS);
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.h:  void printSSECC(const MCInst *MI, unsigned Op, raw_ostream &OS);
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.h:  void printAVXCC(const MCInst *MI, unsigned Op, raw_ostream &OS);
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.h:  void printPCRelImm(const MCInst *MI, unsigned OpNo, raw_ostream &OS);
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.h:  void printopaquemem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.h:  void printi8mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.h:  void printi16mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.h:  void printi32mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.h:  void printi64mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.h:  void printi128mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.h:  void printi256mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.h:  void printf32mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.h:  void printf64mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.h:  void printf80mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.h:  void printf128mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.h:  void printf256mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86InstComments.h:  class raw_ostream;
./lib/Target/X86/InstPrinter/X86InstComments.h:  void EmitAnyX86InstComments(const MCInst *MI, raw_ostream &OS,
./lib/Target/X86/InstPrinter/X86InstComments.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/X86/InstPrinter/X86InstComments.cpp:void llvm::EmitAnyX86InstComments(const MCInst *MI, raw_ostream &OS,
./lib/Target/X86/InstPrinter/Debug+Asserts/X86IntelInstPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/InstPrinter/Debug+Asserts/X86IntelInstPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/InstPrinter/Debug+Asserts/X86ATTInstPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/InstPrinter/Debug+Asserts/X86ATTInstPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/InstPrinter/Debug+Asserts/X86InstComments.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/X86/InstPrinter/Debug+Asserts/X86InstComments.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.cpp:void X86ATTInstPrinter::printRegName(raw_ostream &OS,
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.cpp:void X86ATTInstPrinter::printInst(const MCInst *MI, raw_ostream &OS,
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.cpp:                                   raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.cpp:                                   raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.cpp:                                      raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.cpp:                                     raw_ostream &O) {
./lib/Target/X86/InstPrinter/X86ATTInstPrinter.cpp:                                          raw_ostream &O) {
./lib/Target/X86/X86PadShortFunction.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/X86/X86AsmPrinter.cpp:                                       raw_ostream &O) {
./lib/Target/X86/X86AsmPrinter.cpp:                                    raw_ostream &O) {
./lib/Target/X86/X86AsmPrinter.cpp:                                 raw_ostream &O, const char *Modifier,
./lib/Target/X86/X86AsmPrinter.cpp:                                         raw_ostream &O, const char *Modifier) {
./lib/Target/X86/X86AsmPrinter.cpp:                                      raw_ostream &O, const char *Modifier) {
./lib/Target/X86/X86AsmPrinter.cpp:                                           raw_ostream &O, const char *Modifier,
./lib/Target/X86/X86AsmPrinter.cpp:                                      raw_ostream &O) {
./lib/Target/X86/X86AsmPrinter.cpp:                                    const char *ExtraCode, raw_ostream &O) {
./lib/Target/X86/X86AsmPrinter.cpp:                                          raw_ostream &O) {
./lib/Target/X86/X86AsmPrinter.cpp:                                           raw_ostream &O) {
./lib/Target/X86/X86GenSubtargetInfo.inc:#include "llvm/Support/raw_ostream.h"
./lib/Target/X86/Disassembler/X86Disassembler.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/X86/Disassembler/X86Disassembler.cpp:///   raw_ostream.
./lib/Target/X86/Disassembler/X86Disassembler.cpp:///                   to a raw_ostream.
./lib/Target/X86/Disassembler/X86Disassembler.cpp:  raw_ostream &vStream = *(static_cast<raw_ostream*>(arg));
./lib/Target/X86/Disassembler/X86Disassembler.cpp:                                       raw_ostream &vStream,
./lib/Target/X86/Disassembler/X86Disassembler.cpp:                                       raw_ostream &cStream) const {
./lib/Target/X86/Disassembler/X86Disassembler.h:class raw_ostream;
./lib/Target/X86/Disassembler/X86Disassembler.h:                              raw_ostream &vStream,
./lib/Target/X86/Disassembler/X86Disassembler.h:                              raw_ostream &cStream) const;
./lib/Target/X86/Disassembler/Debug+Asserts/X86Disassembler.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/Disassembler/Debug+Asserts/X86Disassembler.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/X86Subtarget.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/X86/X86CodeEmitter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/X86/Debug+Asserts/X86InstrInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/Debug+Asserts/X86InstrInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/Debug+Asserts/X86TargetObjectFile.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/Debug+Asserts/X86TargetObjectFile.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/Debug+Asserts/X86CodeEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/Debug+Asserts/X86CodeEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/Debug+Asserts/X86VZeroUpper.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/X86/Debug+Asserts/X86VZeroUpper.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/Debug+Asserts/X86GenSubtargetInfo.inc.tmp:#include "llvm/Support/raw_ostream.h"
./lib/Target/X86/Debug+Asserts/X86FastISel.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/Debug+Asserts/X86FastISel.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/Debug+Asserts/X86ISelLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/Debug+Asserts/X86ISelLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/Debug+Asserts/X86GenAsmWriter1.inc.tmp:void X86IntelInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
./lib/Target/X86/Debug+Asserts/X86GenAsmWriter1.inc.tmp:bool X86IntelInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
./lib/Target/X86/Debug+Asserts/X86TargetTransformInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/Debug+Asserts/X86TargetTransformInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/Debug+Asserts/X86MCInstLower.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/Debug+Asserts/X86MCInstLower.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/Debug+Asserts/X86FrameLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/Debug+Asserts/X86FrameLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/Debug+Asserts/X86ISelDAGToDAG.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/Debug+Asserts/X86ISelDAGToDAG.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/Debug+Asserts/X86FloatingPoint.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/X86/Debug+Asserts/X86FloatingPoint.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/Debug+Asserts/X86Subtarget.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/Debug+Asserts/X86Subtarget.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/Debug+Asserts/X86GenAsmWriter.inc.tmp:void X86ATTInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
./lib/Target/X86/Debug+Asserts/X86GenAsmWriter.inc.tmp:bool X86ATTInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
./lib/Target/X86/Debug+Asserts/X86TargetMachine.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/Debug+Asserts/X86TargetMachine.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/Debug+Asserts/X86RegisterInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/Debug+Asserts/X86RegisterInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/Debug+Asserts/X86AsmPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/Debug+Asserts/X86AsmPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/Debug+Asserts/X86SelectionDAGInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/Debug+Asserts/X86SelectionDAGInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/Debug+Asserts/X86PadShortFunction.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/X86/Debug+Asserts/X86PadShortFunction.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/Debug+Asserts/X86COFFMachineModuleInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/Debug+Asserts/X86COFFMachineModuleInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/Debug+Asserts/X86JITInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/Debug+Asserts/X86JITInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/AsmParser/X86AsmParser.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/X86/AsmParser/X86AsmParser.cpp:  virtual void print(raw_ostream &OS) const {}
./lib/Target/X86/AsmParser/Debug+Asserts/X86AsmParser.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/X86/AsmParser/Debug+Asserts/X86AsmParser.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/X86/X86GenAsmWriter1.inc:void X86IntelInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
./lib/Target/X86/X86GenAsmWriter1.inc:bool X86IntelInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
./lib/Target/X86/X86VZeroUpper.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/NVPTX/NVPTX.h:class formatted_raw_ostream;
./lib/Target/NVPTX/NVPTXTargetMachine.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:                                        raw_ostream &O)
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:                                        raw_ostream &O) {
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:                                              raw_ostream &O) const {
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:                                        raw_ostream &O) {
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:                                     raw_ostream &O) {
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:                                                raw_ostream &O) {
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:                                   raw_ostream &O, const char *Modifier) {
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:printImplicitDef(const MachineInstr *MI, raw_ostream &O) const {
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:                                      raw_ostream &O, const char *Modifier) {
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:                                    raw_ostream &O, const char *Modifier)
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:void NVPTXAsmPrinter::emitDeclaration (const Function *F, raw_ostream &O) {
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:void NVPTXAsmPrinter::emitDeclarations (Module &M, raw_ostream &O) {
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:void NVPTXAsmPrinter::emitHeader (Module &M, raw_ostream &O) {
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:void NVPTXAsmPrinter::emitLinkageDirective(const GlobalValue* V, raw_ostream &O)
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:void NVPTXAsmPrinter::printModuleLevelGV(GlobalVariable* GVar, raw_ostream &O,
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:void NVPTXAsmPrinter::emitDemotedVars(const Function *f, raw_ostream &O) {
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:                                          raw_ostream &O) const {
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:                                            raw_ostream &O) {
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:                                     int paramIndex, raw_ostream &O) {
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:void NVPTXAsmPrinter::printParamName(int paramIndex, raw_ostream &O) {
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:                                            raw_ostream &O) {
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:                                            raw_ostream &O) {
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:void NVPTXAsmPrinter::printFPConstant(const ConstantFP *Fp, raw_ostream &O) {
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:void NVPTXAsmPrinter::printScalarConstant(Constant *CPV, raw_ostream &O) {
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:                                      raw_ostream &O) {
./lib/Target/NVPTX/NVPTXAsmPrinter.cpp:                                            raw_ostream &O) {
./lib/Target/NVPTX/NVPTXISelLowering.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/NVPTX/NVPTXAsmPrinter.h:    raw_ostream &O;
./lib/Target/NVPTX/NVPTXAsmPrinter.h:    AggBuffer(unsigned _size, raw_ostream &_O, NVPTXAsmPrinter &_AP)
./lib/Target/NVPTX/NVPTXAsmPrinter.h:  void printOperand(const MachineInstr *MI, int opNum, raw_ostream &O,
./lib/Target/NVPTX/NVPTXAsmPrinter.h:  void printLdStCode(const MachineInstr *MI, int opNum, raw_ostream &O,
./lib/Target/NVPTX/NVPTXAsmPrinter.h:                                 const char *Modifier, raw_ostream &O);
./lib/Target/NVPTX/NVPTXAsmPrinter.h:  void printMemOperand(const MachineInstr *MI, int opNum, raw_ostream &O,
./lib/Target/NVPTX/NVPTXAsmPrinter.h:  void printImplicitDef(const MachineInstr *MI, raw_ostream &O) const;
./lib/Target/NVPTX/NVPTXAsmPrinter.h:  void printInstruction(const MachineInstr *MI, raw_ostream &O);
./lib/Target/NVPTX/NVPTXAsmPrinter.h:  void printModuleLevelGV(GlobalVariable* GVar, raw_ostream &O,
./lib/Target/NVPTX/NVPTXAsmPrinter.h:  void printParamName(int paramIndex, raw_ostream &O);
./lib/Target/NVPTX/NVPTXAsmPrinter.h:                      raw_ostream &O);
./lib/Target/NVPTX/NVPTXAsmPrinter.h:  void emitHeader(Module &M, raw_ostream &O);
./lib/Target/NVPTX/NVPTXAsmPrinter.h:                                    raw_ostream &O) const;
./lib/Target/NVPTX/NVPTXAsmPrinter.h:  void emitVirtualRegister(unsigned int vr, bool isVec, raw_ostream &O);
./lib/Target/NVPTX/NVPTXAsmPrinter.h:  void emitFunctionParamList(const Function *, raw_ostream &O);
./lib/Target/NVPTX/NVPTXAsmPrinter.h:  void emitFunctionParamList(const MachineFunction &MF, raw_ostream &O);
./lib/Target/NVPTX/NVPTXAsmPrinter.h:                       raw_ostream &);
./lib/Target/NVPTX/NVPTXAsmPrinter.h:                             raw_ostream &);
./lib/Target/NVPTX/NVPTXAsmPrinter.h:  void printReturnValStr(const Function *, raw_ostream &O);
./lib/Target/NVPTX/NVPTXAsmPrinter.h:  void printReturnValStr(const MachineFunction &MF, raw_ostream &O);
./lib/Target/NVPTX/NVPTXAsmPrinter.h:  void emitPTXGlobalVariable(const GlobalVariable *GVar, raw_ostream &O);
./lib/Target/NVPTX/NVPTXAsmPrinter.h:                           raw_ostream &O) const;
./lib/Target/NVPTX/NVPTXAsmPrinter.h:  void printScalarConstant(Constant *CPV, raw_ostream &O) ;
./lib/Target/NVPTX/NVPTXAsmPrinter.h:  void printFPConstant(const ConstantFP *Fp, raw_ostream &O) ;
./lib/Target/NVPTX/NVPTXAsmPrinter.h:  void emitLinkageDirective(const GlobalValue* V, raw_ostream &O);
./lib/Target/NVPTX/NVPTXAsmPrinter.h:  void emitDeclarations(Module &, raw_ostream &O);
./lib/Target/NVPTX/NVPTXAsmPrinter.h:  void emitDeclaration(const Function *, raw_ostream &O);
./lib/Target/NVPTX/NVPTXAsmPrinter.h:  void emitDemotedVars(const Function *, raw_ostream &);
./lib/Target/NVPTX/NVPTXAsmPrinter.h:  virtual void getVirtualRegisterName(unsigned, bool, raw_ostream &);
./lib/Target/NVPTX/Debug+Asserts/NVPTXAsmPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/NVPTX/Debug+Asserts/NVPTXAsmPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/NVPTX/Debug+Asserts/NVPTXISelDAGToDAG.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/NVPTX/Debug+Asserts/NVPTXISelDAGToDAG.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/NVPTX/Debug+Asserts/NVPTXGenSubtargetInfo.inc.tmp:#include "llvm/Support/raw_ostream.h"
./lib/Target/NVPTX/Debug+Asserts/NVPTXSubtarget.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/NVPTX/Debug+Asserts/NVPTXSubtarget.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/NVPTX/Debug+Asserts/NVPTXISelLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/NVPTX/Debug+Asserts/NVPTXISelLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/NVPTX/Debug+Asserts/NVPTXGenAsmWriter.inc.tmp:void NVPTXAsmPrinter::printInstruction(const MachineInstr *MI, raw_ostream &O) {
./lib/Target/NVPTX/Debug+Asserts/NVPTXTargetMachine.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/NVPTX/Debug+Asserts/NVPTXTargetMachine.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/NVPTX/NVPTXGenAsmWriter.inc:void NVPTXAsmPrinter::printInstruction(const MachineInstr *MI, raw_ostream &O) {
./lib/Target/NVPTX/NVPTXTargetMachine.h:                                 raw_ostream &,
./lib/Target/NVPTX/NVPTXGenSubtargetInfo.inc:#include "llvm/Support/raw_ostream.h"
./lib/Target/NVPTX/NVPTXSection.h:                                    raw_ostream &OS) const {}
./lib/Target/MSP430/MSP430GenSubtargetInfo.inc:#include "llvm/Support/raw_ostream.h"
./lib/Target/MSP430/MSP430GenAsmWriter.inc:void MSP430InstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
./lib/Target/MSP430/MSP430GenAsmWriter.inc:bool MSP430InstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
./lib/Target/MSP430/InstPrinter/MSP430InstPrinter.cpp:void MSP430InstPrinter::printInst(const MCInst *MI, raw_ostream &O,
./lib/Target/MSP430/InstPrinter/MSP430InstPrinter.cpp:                                             raw_ostream &O) {
./lib/Target/MSP430/InstPrinter/MSP430InstPrinter.cpp:                                     raw_ostream &O, const char *Modifier) {
./lib/Target/MSP430/InstPrinter/MSP430InstPrinter.cpp:                                           raw_ostream &O,
./lib/Target/MSP430/InstPrinter/MSP430InstPrinter.cpp:                                       raw_ostream &O) {
./lib/Target/MSP430/InstPrinter/MSP430InstPrinter.h:    virtual void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot);
./lib/Target/MSP430/InstPrinter/MSP430InstPrinter.h:    void printInstruction(const MCInst *MI, raw_ostream &O);
./lib/Target/MSP430/InstPrinter/MSP430InstPrinter.h:    void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
./lib/Target/MSP430/InstPrinter/MSP430InstPrinter.h:    void printPCRelImmOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/MSP430/InstPrinter/MSP430InstPrinter.h:    void printSrcMemOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
./lib/Target/MSP430/InstPrinter/MSP430InstPrinter.h:    void printCCOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/MSP430/InstPrinter/Debug+Asserts/MSP430InstPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MSP430/InstPrinter/Debug+Asserts/MSP430InstPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MSP430/MSP430AsmPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/MSP430/MSP430AsmPrinter.cpp:                      raw_ostream &O, const char* Modifier = 0);
./lib/Target/MSP430/MSP430AsmPrinter.cpp:                            raw_ostream &O);
./lib/Target/MSP430/MSP430AsmPrinter.cpp:                         raw_ostream &O);
./lib/Target/MSP430/MSP430AsmPrinter.cpp:                               const char *ExtraCode, raw_ostream &O);
./lib/Target/MSP430/MSP430AsmPrinter.cpp:                                    raw_ostream &O, const char *Modifier) {
./lib/Target/MSP430/MSP430AsmPrinter.cpp:                                          raw_ostream &O) {
./lib/Target/MSP430/MSP430AsmPrinter.cpp:                                       const char *ExtraCode, raw_ostream &O) {
./lib/Target/MSP430/MSP430AsmPrinter.cpp:                                             raw_ostream &O) {
./lib/Target/MSP430/MSP430.h:  class formatted_raw_ostream;
./lib/Target/MSP430/MSP430ISelDAGToDAG.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/MSP430/Debug+Asserts/MSP430GenSubtargetInfo.inc.tmp:#include "llvm/Support/raw_ostream.h"
./lib/Target/MSP430/Debug+Asserts/MSP430ISelDAGToDAG.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MSP430/Debug+Asserts/MSP430ISelDAGToDAG.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MSP430/Debug+Asserts/MSP430GenAsmWriter.inc.tmp:void MSP430InstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
./lib/Target/MSP430/Debug+Asserts/MSP430GenAsmWriter.inc.tmp:bool MSP430InstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
./lib/Target/MSP430/Debug+Asserts/MSP430ISelLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MSP430/Debug+Asserts/MSP430ISelLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MSP430/Debug+Asserts/MSP430Subtarget.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MSP430/Debug+Asserts/MSP430Subtarget.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MSP430/Debug+Asserts/MSP430AsmPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MSP430/Debug+Asserts/MSP430AsmPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MSP430/Debug+Asserts/MSP430MCInstLower.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MSP430/Debug+Asserts/MSP430MCInstLower.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MSP430/Debug+Asserts/MSP430FrameLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MSP430/Debug+Asserts/MSP430FrameLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MSP430/MSP430ISelLowering.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/MSP430/MSP430MCInstLower.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Sparc/SparcISelDAGToDAG.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Sparc/SparcAsmPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Sparc/SparcAsmPrinter.cpp:    void printOperand(const MachineInstr *MI, int opNum, raw_ostream &OS);
./lib/Target/Sparc/SparcAsmPrinter.cpp:    void printMemOperand(const MachineInstr *MI, int opNum, raw_ostream &OS,
./lib/Target/Sparc/SparcAsmPrinter.cpp:    void printCCOperand(const MachineInstr *MI, int opNum, raw_ostream &OS);
./lib/Target/Sparc/SparcAsmPrinter.cpp:    void printInstruction(const MachineInstr *MI, raw_ostream &OS);// autogen'd.
./lib/Target/Sparc/SparcAsmPrinter.cpp:                         raw_ostream &O);
./lib/Target/Sparc/SparcAsmPrinter.cpp:                               raw_ostream &O);
./lib/Target/Sparc/SparcAsmPrinter.cpp:    bool printGetPCX(const MachineInstr *MI, unsigned OpNo, raw_ostream &OS);
./lib/Target/Sparc/SparcAsmPrinter.cpp:                                   raw_ostream &O) {
./lib/Target/Sparc/SparcAsmPrinter.cpp:                                      raw_ostream &O, const char *Modifier) {
./lib/Target/Sparc/SparcAsmPrinter.cpp:                                  raw_ostream &O) {
./lib/Target/Sparc/SparcAsmPrinter.cpp:                                     raw_ostream &O) {
./lib/Target/Sparc/SparcAsmPrinter.cpp:                                      raw_ostream &O) {
./lib/Target/Sparc/SparcAsmPrinter.cpp:                                            raw_ostream &O) {
./lib/Target/Sparc/FPMover.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Sparc/SparcGenAsmWriter.inc:void SparcAsmPrinter::printInstruction(const MachineInstr *MI, raw_ostream &O) {
./lib/Target/Sparc/Sparc.h:  class formatted_raw_ostream;
./lib/Target/Sparc/Debug+Asserts/FPMover.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Sparc/Debug+Asserts/FPMover.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Sparc/Debug+Asserts/SparcSubtarget.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Sparc/Debug+Asserts/SparcSubtarget.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Sparc/Debug+Asserts/SparcFrameLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Sparc/Debug+Asserts/SparcFrameLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Sparc/Debug+Asserts/SparcISelDAGToDAG.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Sparc/Debug+Asserts/SparcISelDAGToDAG.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Sparc/Debug+Asserts/SparcGenSubtargetInfo.inc.tmp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Sparc/Debug+Asserts/SparcGenAsmWriter.inc.tmp:void SparcAsmPrinter::printInstruction(const MachineInstr *MI, raw_ostream &O) {
./lib/Target/Sparc/Debug+Asserts/SparcAsmPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Sparc/Debug+Asserts/SparcAsmPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Sparc/SparcGenSubtargetInfo.inc:#include "llvm/Support/raw_ostream.h"
./lib/Target/R600/MCTargetDesc/AMDGPUAsmBackend.cpp:  AMDGPUMCObjectWriter(raw_ostream &OS) : MCObjectWriter(OS, true) { }
./lib/Target/R600/MCTargetDesc/AMDGPUAsmBackend.cpp:  virtual AMDGPUMCObjectWriter *createObjectWriter(raw_ostream &OS) const;
./lib/Target/R600/MCTargetDesc/AMDGPUAsmBackend.cpp:                                                        raw_ostream &OS) const {
./lib/Target/R600/MCTargetDesc/AMDGPUMCCodeEmitter.h:#include "llvm/Support/raw_ostream.h"
./lib/Target/R600/MCTargetDesc/SIMCCodeEmitter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/R600/MCTargetDesc/SIMCCodeEmitter.cpp:  virtual void EncodeInstruction(const MCInst &MI, raw_ostream &OS,
./lib/Target/R600/MCTargetDesc/SIMCCodeEmitter.cpp:void SIMCCodeEmitter::EncodeInstruction(const MCInst &MI, raw_ostream &OS,
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:  virtual void EncodeInstruction(const MCInst &MI, raw_ostream &OS,
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:                    raw_ostream &OS) const;
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:  void EmitSrc(const MCInst &MI, unsigned OpIdx, raw_ostream &OS) const;
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:                    raw_ostream &OS) const;
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:  void EmitDst(const MCInst &MI, raw_ostream &OS) const;
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:                    raw_ostream &OS) const;
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:  void EmitFCInstr(const MCInst &MI, raw_ostream &OS) const;
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:  void EmitNullBytes(unsigned int byteCount, raw_ostream &OS) const;
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:  void EmitByte(unsigned int byte, raw_ostream &OS) const;
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:  void EmitTwoBytes(uint32_t bytes, raw_ostream &OS) const;
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:  void Emit(uint32_t value, raw_ostream &OS) const;
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:  void Emit(uint64_t value, raw_ostream &OS) const;
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:void R600MCCodeEmitter::EncodeInstruction(const MCInst &MI, raw_ostream &OS,
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:                                     raw_ostream &OS) const {
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:                                raw_ostream &OS) const {
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:                                   unsigned SelOpIdx, raw_ostream &OS) const {
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:                                     raw_ostream &OS) const {
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:void R600MCCodeEmitter::EmitFCInstr(const MCInst &MI, raw_ostream &OS) const {
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:                                      raw_ostream &OS) const {
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:void R600MCCodeEmitter::EmitByte(unsigned int Byte, raw_ostream &OS) const {
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:                                     raw_ostream &OS) const {
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:void R600MCCodeEmitter::Emit(uint32_t Value, raw_ostream &OS) const {
./lib/Target/R600/MCTargetDesc/R600MCCodeEmitter.cpp:void R600MCCodeEmitter::Emit(uint64_t Value, raw_ostream &OS) const {
./lib/Target/R600/MCTargetDesc/AMDGPUMCTargetDesc.cpp:                                    raw_ostream &_OS,
./lib/Target/R600/AMDGPU.h:FunctionPass *createSICodeEmitterPass(formatted_raw_ostream &OS);
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.h:#include "llvm/Support/raw_ostream.h"
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.h:  void printInstruction(const MCInst *MI, raw_ostream &O);
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.h:  virtual void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot);
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.h:  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.h:  void printInterpSlot(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.h:  void printMemOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.h:  void printIfSet(const MCInst *MI, unsigned OpNo, raw_ostream &O, StringRef Asm);
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.h:  void printAbs(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.h:  void printClamp(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.h:  void printLiteral(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.h:  void printLast(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.h:  void printNeg(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.h:  void printOMOD(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.h:  void printRel(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.h:  void printUpdateExecMask(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.h:  void printUpdatePred(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.h:  void printWrite(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.h:  void printSel(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.cpp:void AMDGPUInstPrinter::printInst(const MCInst *MI, raw_ostream &OS,
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.cpp:                                     raw_ostream &O) {
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.cpp:                                        raw_ostream &O) {
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.cpp:                                        raw_ostream &O) {
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.cpp:                                    raw_ostream &O, StringRef Asm) {
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.cpp:                                 raw_ostream &O) {
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.cpp:                                   raw_ostream &O) {
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.cpp:                                     raw_ostream &O) {
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.cpp:                                  raw_ostream &O) {
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.cpp:                                 raw_ostream &O) {
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.cpp:                                  raw_ostream &O) {
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.cpp:                                 raw_ostream &O) {
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.cpp:                                            raw_ostream &O) {
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.cpp:                                        raw_ostream &O) {
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.cpp:                                       raw_ostream &O) {
./lib/Target/R600/InstPrinter/AMDGPUInstPrinter.cpp:                                  raw_ostream &O) {
./lib/Target/R600/AMDIL.h:class raw_ostream;
./lib/Target/R600/AMDILCFGStructurizer.cpp:void PrintLoopinfo(const LoopinfoT &LoopInfo, llvm::raw_ostream &OS) {
./lib/Target/R600/AMDILCFGStructurizer.cpp:  void   printOrderedBlocks(llvm::raw_ostream &OS);
./lib/Target/R600/AMDILCFGStructurizer.cpp:void CFGStructurizer<PassT>::printOrderedBlocks(llvm::raw_ostream &os) {
./lib/Target/R600/AMDILISelLowering.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/AArch64/AArch64AsmPrinter.h:                       raw_ostream &O);
./lib/Target/AArch64/AArch64AsmPrinter.h:                             raw_ostream &O);
./lib/Target/AArch64/AArch64AsmPrinter.h:  void PrintDebugValueComment(const MachineInstr *MI, raw_ostream &OS);
./lib/Target/AArch64/AArch64AsmPrinter.h:                            StringRef Suffix, raw_ostream &O);
./lib/Target/AArch64/AArch64GenSubtargetInfo.inc:#include "llvm/Support/raw_ostream.h"
./lib/Target/AArch64/MCTargetDesc/AArch64MCCodeEmitter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/AArch64/MCTargetDesc/AArch64MCCodeEmitter.cpp:  void EmitByte(unsigned char C, raw_ostream &OS) const {
./lib/Target/AArch64/MCTargetDesc/AArch64MCCodeEmitter.cpp:  void EmitInstruction(uint32_t Val, raw_ostream &OS) const {
./lib/Target/AArch64/MCTargetDesc/AArch64MCCodeEmitter.cpp:  void EncodeInstruction(const MCInst &MI, raw_ostream &OS,
./lib/Target/AArch64/MCTargetDesc/AArch64MCCodeEmitter.cpp:EncodeInstruction(const MCInst &MI, raw_ostream &OS,
./lib/Target/AArch64/MCTargetDesc/AArch64MCTargetDesc.cpp:                                    raw_ostream &OS,
./lib/Target/AArch64/MCTargetDesc/AArch64AsmBackend.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/AArch64/MCTargetDesc/AArch64AsmBackend.cpp:  MCObjectWriter *createObjectWriter(raw_ostream &OS) const {
./lib/Target/AArch64/MCTargetDesc/AArch64MCExpr.cpp:void AArch64MCExpr::PrintImpl(raw_ostream &OS) const {
./lib/Target/AArch64/MCTargetDesc/AArch64ELFStreamer.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/AArch64/MCTargetDesc/AArch64ELFStreamer.cpp:                 raw_ostream &OS, MCCodeEmitter *Emitter)
./lib/Target/AArch64/MCTargetDesc/AArch64ELFStreamer.cpp:                                      raw_ostream &OS, MCCodeEmitter *Emitter,
./lib/Target/AArch64/MCTargetDesc/AArch64ELFStreamer.h:                                          raw_ostream &OS,
./lib/Target/AArch64/MCTargetDesc/Debug+Asserts/AArch64AsmBackend.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/AArch64/MCTargetDesc/Debug+Asserts/AArch64AsmBackend.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/AArch64/MCTargetDesc/Debug+Asserts/AArch64MCCodeEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/AArch64/MCTargetDesc/Debug+Asserts/AArch64MCCodeEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/AArch64/MCTargetDesc/Debug+Asserts/AArch64MCTargetDesc.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/AArch64/MCTargetDesc/Debug+Asserts/AArch64MCTargetDesc.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/AArch64/MCTargetDesc/Debug+Asserts/AArch64ELFStreamer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/AArch64/MCTargetDesc/Debug+Asserts/AArch64ELFStreamer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/AArch64/MCTargetDesc/Debug+Asserts/AArch64MCExpr.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/AArch64/MCTargetDesc/Debug+Asserts/AArch64MCExpr.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/AArch64/MCTargetDesc/AArch64ELFObjectWriter.cpp:MCObjectWriter *llvm::createAArch64ELFObjectWriter(raw_ostream &OS,
./lib/Target/AArch64/MCTargetDesc/AArch64MCTargetDesc.h:class raw_ostream;
./lib/Target/AArch64/MCTargetDesc/AArch64MCTargetDesc.h:MCObjectWriter *createAArch64ELFObjectWriter(raw_ostream &OS,
./lib/Target/AArch64/MCTargetDesc/AArch64MCExpr.h:  void PrintImpl(raw_ostream &OS) const;
./lib/Target/AArch64/AArch64GenDisassemblerTables.inc:#include "llvm/Support/raw_ostream.h"
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:void AArch64InstPrinter::printRegName(raw_ostream &OS, unsigned RegNo) const {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                              unsigned OpNum, raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                          raw_ostream &O, unsigned MemSize,
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                              unsigned OpNum, raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                               raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                        raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                       raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                              raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                         raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                    raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                            raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                           raw_ostream &o) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                            raw_ostream &o) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                         raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                            raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                           raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                               raw_ostream &O, int MemSize) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                      raw_ostream &O,
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                            raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                              raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                       raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                               raw_ostream &O,
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                      raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:                                      raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.cpp:void AArch64InstPrinter::printInst(const MCInst *MI, raw_ostream &O,
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:  void printInstruction(const MCInst *MI, raw_ostream &O);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:  bool printAliasInstr(const MCInst *MI, raw_ostream &O);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:  void printRegName(raw_ostream &O, unsigned RegNum) const;
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:                                 raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:                                 raw_ostream &O, unsigned MemSize,
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:                                 unsigned OpNum, raw_ostream &O);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:                                  unsigned OpNum, raw_ostream &O);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:  void printBareImmOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:  void printBFILSBOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:  void printBFIWidthOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:  void printBFXWidthOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:                            raw_ostream &O);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:                       raw_ostream &O);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:                               raw_ostream &O);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:  void printFPImmOperand(const MCInst *MI, unsigned OpNum, raw_ostream &o);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:  void printFPZeroOperand(const MCInst *MI, unsigned OpNum, raw_ostream &o);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:                                  unsigned OpNum, raw_ostream &o) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:                                  raw_ostream &o, int MemScale);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:                         raw_ostream &O);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:  void printLogicalImmOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:                            raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:                            raw_ostream &O);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:                          raw_ostream &O);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:                       raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:                       raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:                         unsigned OpIdx, raw_ostream &O);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:  void printLSLOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:  void printLSROperand(const MCInst *MI, unsigned OpNum, raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:  void printASROperand(const MCInst *MI, unsigned OpNum, raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:  void printROROperand(const MCInst *MI, unsigned OpNum, raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:  void printShiftOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:                         raw_ostream &O, A64SE::ShiftExtSpecifiers Sh);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:                               raw_ostream &O);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:  printSImm7ScaledOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:                               raw_ostream &O);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:  void printPRFMOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:                             raw_ostream &O) {
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:                             raw_ostream &O, A64SE::ShiftExtSpecifiers Ext);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/AArch64/InstPrinter/AArch64InstPrinter.h:  virtual void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot);
./lib/Target/AArch64/InstPrinter/Debug+Asserts/AArch64InstPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/AArch64/InstPrinter/Debug+Asserts/AArch64InstPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/AArch64/Disassembler/Debug+Asserts/AArch64Disassembler.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/AArch64/Disassembler/Debug+Asserts/AArch64Disassembler.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/AArch64/Disassembler/AArch64Disassembler.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/AArch64/Disassembler/AArch64Disassembler.cpp:                              raw_ostream &vStream,
./lib/Target/AArch64/Disassembler/AArch64Disassembler.cpp:                              raw_ostream &cStream) const;
./lib/Target/AArch64/Disassembler/AArch64Disassembler.cpp:                                                 raw_ostream &os,
./lib/Target/AArch64/Disassembler/AArch64Disassembler.cpp:                                                 raw_ostream &cs) const {
./lib/Target/AArch64/Debug+Asserts/AArch64InstrInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/AArch64/Debug+Asserts/AArch64InstrInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/AArch64/Debug+Asserts/AArch64MCInstLower.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/AArch64/Debug+Asserts/AArch64MCInstLower.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/AArch64/Debug+Asserts/AArch64FrameLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/AArch64/Debug+Asserts/AArch64FrameLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/AArch64/Debug+Asserts/AArch64Subtarget.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/AArch64/Debug+Asserts/AArch64Subtarget.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/AArch64/Debug+Asserts/AArch64GenDisassemblerTables.inc.tmp:#include "llvm/Support/raw_ostream.h"
./lib/Target/AArch64/Debug+Asserts/AArch64AsmPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/AArch64/Debug+Asserts/AArch64AsmPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/AArch64/Debug+Asserts/AArch64GenAsmWriter.inc.tmp:void AArch64InstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
./lib/Target/AArch64/Debug+Asserts/AArch64GenAsmWriter.inc.tmp:bool AArch64InstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
./lib/Target/AArch64/Debug+Asserts/AArch64BranchFixupPass.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/AArch64/Debug+Asserts/AArch64BranchFixupPass.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/AArch64/Debug+Asserts/AArch64GenSubtargetInfo.inc.tmp:#include "llvm/Support/raw_ostream.h"
./lib/Target/AArch64/Debug+Asserts/AArch64ISelDAGToDAG.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/AArch64/Debug+Asserts/AArch64ISelDAGToDAG.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/AArch64/AsmParser/Debug+Asserts/AArch64AsmParser.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/AArch64/AsmParser/Debug+Asserts/AArch64AsmParser.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp:  void print(raw_ostream&) const;
./lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp:void AArch64Operand::print(raw_ostream &OS) const {
./lib/Target/AArch64/AArch64BranchFixupPass.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/AArch64/AArch64GenAsmWriter.inc:void AArch64InstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
./lib/Target/AArch64/AArch64GenAsmWriter.inc:bool AArch64InstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
./lib/Target/AArch64/AArch64AsmPrinter.cpp:                                       raw_ostream &O) {
./lib/Target/AArch64/AArch64AsmPrinter.cpp:                                       raw_ostream &O) {
./lib/Target/AArch64/AArch64AsmPrinter.cpp:                                             StringRef Suffix, raw_ostream &O) {
./lib/Target/AArch64/AArch64AsmPrinter.cpp:                                        const char *ExtraCode, raw_ostream &O) {
./lib/Target/AArch64/AArch64AsmPrinter.cpp:                                              raw_ostream &O) {
./lib/Target/AArch64/AArch64AsmPrinter.cpp:                                               raw_ostream &OS) {
./lib/Target/NewTarget/MCTargetDesc/NewTargetELFStreamer.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/NewTarget/MCTargetDesc/NewTargetELFStreamer.cpp:                 raw_ostream &OS, MCCodeEmitter *Emitter)
./lib/Target/NewTarget/MCTargetDesc/NewTargetELFStreamer.cpp:                                        raw_ostream &OS,
./lib/Target/NewTarget/MCTargetDesc/NewTargetAsmBackend.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/NewTarget/MCTargetDesc/NewTargetAsmBackend.cpp:  MCObjectWriter *createObjectWriter(raw_ostream &OS) const {
./lib/Target/NewTarget/MCTargetDesc/RelocatedELFObjectWriter.cpp:                    raw_ostream &_OS, bool IsLittleEndian, unsigned int BaseAddress_)
./lib/Target/NewTarget/MCTargetDesc/RelocatedELFObjectWriter.cpp:                                            raw_ostream &OS,
./lib/Target/NewTarget/MCTargetDesc/NewTargetMCCodeEmitter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/NewTarget/MCTargetDesc/NewTargetMCCodeEmitter.cpp:  void EmitByte(unsigned char C, raw_ostream &OS) const {
./lib/Target/NewTarget/MCTargetDesc/NewTargetMCCodeEmitter.cpp:  void EmitInstruction(uint64_t Val, unsigned Size, raw_ostream &OS) const {
./lib/Target/NewTarget/MCTargetDesc/NewTargetMCCodeEmitter.cpp:  void EncodeInstruction(const MCInst &MI, raw_ostream &OS,
./lib/Target/NewTarget/MCTargetDesc/NewTargetMCCodeEmitter.cpp:EncodeInstruction(const MCInst &MI, raw_ostream &OS,
./lib/Target/NewTarget/MCTargetDesc/NewTargetMCTargetDesc.h:class raw_ostream;
./lib/Target/NewTarget/MCTargetDesc/NewTargetMCTargetDesc.h:                                        raw_ostream &OS,
./lib/Target/NewTarget/MCTargetDesc/NewTargetMCTargetDesc.h:MCObjectWriter *createNewTargetELFObjectWriter(raw_ostream &OS,
./lib/Target/NewTarget/MCTargetDesc/NewTargetMCTargetDesc.h:                                            raw_ostream &OS,
./lib/Target/NewTarget/MCTargetDesc/Debug+Asserts/NewTargetAsmBackend.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/NewTarget/MCTargetDesc/Debug+Asserts/NewTargetAsmBackend.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/NewTarget/MCTargetDesc/Debug+Asserts/NewTargetMCCodeEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/NewTarget/MCTargetDesc/Debug+Asserts/NewTargetMCCodeEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/NewTarget/MCTargetDesc/Debug+Asserts/RelocatedELFObjectWriter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/NewTarget/MCTargetDesc/Debug+Asserts/RelocatedELFObjectWriter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/NewTarget/MCTargetDesc/Debug+Asserts/NewTargetELFStreamer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/NewTarget/MCTargetDesc/Debug+Asserts/NewTargetELFStreamer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/NewTarget/MCTargetDesc/Debug+Asserts/NewTargetMCTargetDesc.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/NewTarget/MCTargetDesc/Debug+Asserts/NewTargetMCTargetDesc.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/NewTarget/MCTargetDesc/NewTargetELFObjectWriter.cpp:MCObjectWriter *llvm::createNewTargetELFObjectWriter(raw_ostream &OS,
./lib/Target/NewTarget/NewTargetRegisterInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/NewTarget/NewTargetGenDisassemblerTables.inc:#include "llvm/Support/raw_ostream.h"
./lib/Target/NewTarget/InstPrinter/NewTargetInstPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/NewTarget/InstPrinter/NewTargetInstPrinter.cpp:void NewTargetInstPrinter::printRegName(raw_ostream &OS, unsigned RegNo) const {
./lib/Target/NewTarget/InstPrinter/NewTargetInstPrinter.cpp:void NewTargetInstPrinter::printInst(const MCInst *MI, raw_ostream &O,
./lib/Target/NewTarget/InstPrinter/NewTargetInstPrinter.cpp:static void printExpr(const MCExpr *Expr, raw_ostream &OS) {
./lib/Target/NewTarget/InstPrinter/NewTargetInstPrinter.cpp:                                   raw_ostream &O) {
./lib/Target/NewTarget/InstPrinter/NewTargetInstPrinter.cpp:                                   raw_ostream &O) {
./lib/Target/NewTarget/InstPrinter/NewTargetInstPrinter.cpp:                                       raw_ostream &O) {
./lib/Target/NewTarget/InstPrinter/NewTargetInstPrinter.cpp:printMemOperand(const MCInst *MI, int opNum, raw_ostream &O) {
./lib/Target/NewTarget/InstPrinter/NewTargetInstPrinter.cpp:printMemOperandEA(const MCInst *MI, int opNum, raw_ostream &O) {
./lib/Target/NewTarget/InstPrinter/NewTargetInstPrinter.cpp:printFCCOperand(const MCInst *MI, int opNum, raw_ostream &O) {
./lib/Target/NewTarget/InstPrinter/Debug+Asserts/NewTargetInstPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/NewTarget/InstPrinter/Debug+Asserts/NewTargetInstPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/NewTarget/InstPrinter/NewTargetInstPrinter.h:  void printInstruction(const MCInst *MI, raw_ostream &O);
./lib/Target/NewTarget/InstPrinter/NewTargetInstPrinter.h:  virtual void printRegName(raw_ostream &OS, unsigned RegNo) const;
./lib/Target/NewTarget/InstPrinter/NewTargetInstPrinter.h:  virtual void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot);
./lib/Target/NewTarget/InstPrinter/NewTargetInstPrinter.h:  void printCPURegs(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/NewTarget/InstPrinter/NewTargetInstPrinter.h:  bool printAliasInstr(const MCInst *MI, raw_ostream &OS);
./lib/Target/NewTarget/InstPrinter/NewTargetInstPrinter.h:  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/NewTarget/InstPrinter/NewTargetInstPrinter.h:  void printUnsignedImm(const MCInst *MI, int opNum, raw_ostream &O);
./lib/Target/NewTarget/InstPrinter/NewTargetInstPrinter.h:  void printMemOperand(const MCInst *MI, int opNum, raw_ostream &O);
./lib/Target/NewTarget/InstPrinter/NewTargetInstPrinter.h:  void printMemOperandEA(const MCInst *MI, int opNum, raw_ostream &O);
./lib/Target/NewTarget/InstPrinter/NewTargetInstPrinter.h:  void printFCCOperand(const MCInst *MI, int opNum, raw_ostream &O);
./lib/Target/NewTarget/NewTargetGenSubtargetInfo.inc:#include "llvm/Support/raw_ostream.h"
./lib/Target/NewTarget/NewTargetGenAsmWriter.inc:void NewTargetInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
./lib/Target/NewTarget/NewTargetGenAsmWriter.inc:bool NewTargetInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
./lib/Target/NewTarget/NewTargetISelLowering.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/NewTarget/NewTargetISelDAGToDAG.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/NewTarget/Debug+Asserts/NewTargetFrameLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/NewTarget/Debug+Asserts/NewTargetFrameLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/NewTarget/Debug+Asserts/NewTargetAsmPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/NewTarget/Debug+Asserts/NewTargetAsmPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/NewTarget/Debug+Asserts/NewTargetRegisterInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/NewTarget/Debug+Asserts/NewTargetRegisterInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/NewTarget/Debug+Asserts/NewTargetGenAsmWriter.inc.tmp:void NewTargetInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
./lib/Target/NewTarget/Debug+Asserts/NewTargetGenAsmWriter.inc.tmp:bool NewTargetInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
./lib/Target/NewTarget/Debug+Asserts/NewTargetMCInstLower.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/NewTarget/Debug+Asserts/NewTargetMCInstLower.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/NewTarget/Debug+Asserts/NewTargetISelDAGToDAG.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/NewTarget/Debug+Asserts/NewTargetISelDAGToDAG.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/NewTarget/Debug+Asserts/NewTargetISelLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/NewTarget/Debug+Asserts/NewTargetISelLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/NewTarget/Debug+Asserts/NewTargetTargetObjectFile.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/NewTarget/Debug+Asserts/NewTargetTargetObjectFile.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/NewTarget/Debug+Asserts/NewTargetCFGExtractor.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/NewTarget/Debug+Asserts/NewTargetCFGExtractor.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/NewTarget/Debug+Asserts/NewTargetGenDisassemblerTables.inc.tmp:#include "llvm/Support/raw_ostream.h"
./lib/Target/NewTarget/Debug+Asserts/NewTargetWCETEstimator.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/NewTarget/Debug+Asserts/NewTargetWCETEstimator.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/NewTarget/Debug+Asserts/NewTargetSubtarget.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/NewTarget/Debug+Asserts/NewTargetSubtarget.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/NewTarget/Debug+Asserts/NewTargetGenSubtargetInfo.inc.tmp:#include "llvm/Support/raw_ostream.h"
./lib/Target/NewTarget/NewTargetWCETEstimator.cpp:    //                                    raw_ostream &OS,
./lib/Target/NewTarget/NewTargetWCETEstimator.cpp:                                        raw_ostream &OS,
./lib/Target/NewTarget/NewTargetCFGExtractor.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/NewTarget/NewTargetAsmPrinter.h:class raw_ostream;
./lib/Target/NewTarget/NewTargetAsmPrinter.h:  void printSavedRegsBitmask(raw_ostream &O);
./lib/Target/NewTarget/NewTargetAsmPrinter.h:  void printHex32(unsigned int Value, raw_ostream &O);
./lib/Target/NewTarget/NewTargetAsmPrinter.h:                       raw_ostream &O);
./lib/Target/NewTarget/NewTargetAsmPrinter.h:                             raw_ostream &O);
./lib/Target/NewTarget/NewTargetAsmPrinter.h:  void printOperand(const MachineInstr *MI, int opNum, raw_ostream &O);
./lib/Target/NewTarget/NewTargetAsmPrinter.h:  void printUnsignedImm(const MachineInstr *MI, int opNum, raw_ostream &O);
./lib/Target/NewTarget/NewTargetAsmPrinter.h:  void printMemOperand(const MachineInstr *MI, int opNum, raw_ostream &O);
./lib/Target/NewTarget/NewTargetAsmPrinter.h:  void printMemOperandEA(const MachineInstr *MI, int opNum, raw_ostream &O);
./lib/Target/NewTarget/NewTargetAsmPrinter.h:  void printFCCOperand(const MachineInstr *MI, int opNum, raw_ostream &O,
./lib/Target/NewTarget/NewTargetAsmPrinter.h:  void PrintDebugValueComment(const MachineInstr *MI, raw_ostream &OS);
./lib/Target/NewTarget/NewTargetAsmPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/NewTarget/NewTargetAsmPrinter.cpp:void NewTargetAsmPrinter::printSavedRegsBitmask(raw_ostream &O) {
./lib/Target/NewTarget/NewTargetAsmPrinter.cpp:void NewTargetAsmPrinter::printHex32(unsigned Value, raw_ostream &O) {
./lib/Target/NewTarget/NewTargetAsmPrinter.cpp:                                     raw_ostream &O) {
./lib/Target/NewTarget/NewTargetAsmPrinter.cpp:                                           raw_ostream &O) {
./lib/Target/NewTarget/NewTargetAsmPrinter.cpp:                                  raw_ostream &O) {
./lib/Target/NewTarget/NewTargetAsmPrinter.cpp:                                      raw_ostream &O) {
./lib/Target/NewTarget/NewTargetAsmPrinter.cpp:printMemOperand(const MachineInstr *MI, int opNum, raw_ostream &O) {
./lib/Target/NewTarget/NewTargetAsmPrinter.cpp:printMemOperandEA(const MachineInstr *MI, int opNum, raw_ostream &O) {
./lib/Target/NewTarget/NewTargetAsmPrinter.cpp:printFCCOperand(const MachineInstr *MI, int opNum, raw_ostream &O,
./lib/Target/NewTarget/NewTargetAsmPrinter.cpp:                                           raw_ostream &OS) {
./lib/Target/ARM/ARMLoadStoreOptimizer.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/ARM/ARMConstantPoolValue.h:  virtual void print(raw_ostream &O) const;
./lib/Target/ARM/ARMConstantPoolValue.h:  void print(raw_ostream *O) const { if (O) print(*O); }
./lib/Target/ARM/ARMConstantPoolValue.h:inline raw_ostream &operator<<(raw_ostream &O, const ARMConstantPoolValue &V) {
./lib/Target/ARM/ARMConstantPoolValue.h:  virtual void print(raw_ostream &O) const;
./lib/Target/ARM/ARMConstantPoolValue.h:  virtual void print(raw_ostream &O) const;
./lib/Target/ARM/ARMConstantPoolValue.h:  virtual void print(raw_ostream &O) const;
./lib/Target/ARM/ARMConstantPoolValue.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/ARM/ARMConstantPoolValue.cpp:void ARMConstantPoolValue::print(raw_ostream &O) const {
./lib/Target/ARM/ARMConstantPoolValue.cpp:void ARMConstantPoolConstant::print(raw_ostream &O) const {
./lib/Target/ARM/ARMConstantPoolValue.cpp:void ARMConstantPoolSymbol::print(raw_ostream &O) const {
./lib/Target/ARM/ARMConstantPoolValue.cpp:void ARMConstantPoolMBB::print(raw_ostream &O) const {
./lib/Target/ARM/ARMISelLowering.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/ARM/MLxExpansionPass.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/ARM/ARMExpandPseudoInsts.cpp:#include "llvm/Support/raw_ostream.h" // FIXME: for debug only. remove!
./lib/Target/ARM/ARMISelDAGToDAG.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp:                                    raw_ostream &OS,
./lib/Target/ARM/MCTargetDesc/ARMELFObjectWriter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/ARM/MCTargetDesc/ARMELFObjectWriter.cpp:MCObjectWriter *llvm::createARMELFObjectWriter(raw_ostream &OS,
./lib/Target/ARM/MCTargetDesc/ARMMCExpr.h:  void PrintImpl(raw_ostream &OS) const;
./lib/Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp:  void EmitByte(unsigned char C, raw_ostream &OS) const {
./lib/Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp:  void EmitConstant(uint64_t Val, unsigned Size, raw_ostream &OS) const {
./lib/Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp:  void EncodeInstruction(const MCInst &MI, raw_ostream &OS,
./lib/Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp:EncodeInstruction(const MCInst &MI, raw_ostream &OS,
./lib/Target/ARM/MCTargetDesc/ARMELFStreamer.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/ARM/MCTargetDesc/ARMELFStreamer.cpp:  ARMELFStreamer(MCContext &Context, MCAsmBackend &TAB, raw_ostream &OS,
./lib/Target/ARM/MCTargetDesc/ARMELFStreamer.cpp:                                      raw_ostream &OS, MCCodeEmitter *Emitter,
./lib/Target/ARM/MCTargetDesc/ARMAsmBackend.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/ARM/MCTargetDesc/ARMAsmBackend.cpp:  MCObjectWriter *createObjectWriter(raw_ostream &OS) const {
./lib/Target/ARM/MCTargetDesc/ARMAsmBackend.cpp:  MCObjectWriter *createObjectWriter(raw_ostream &OS) const {
./lib/Target/ARM/MCTargetDesc/ARMELFStreamer.h:                                      raw_ostream &OS, MCCodeEmitter *Emitter,
./lib/Target/ARM/MCTargetDesc/ARMMCExpr.cpp:void ARMMCExpr::PrintImpl(raw_ostream &OS) const {
./lib/Target/ARM/MCTargetDesc/Debug+Asserts/ARMMCExpr.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/MCTargetDesc/Debug+Asserts/ARMMCExpr.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/MCTargetDesc/Debug+Asserts/ARMMCCodeEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/MCTargetDesc/Debug+Asserts/ARMMCCodeEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/MCTargetDesc/Debug+Asserts/ARMELFStreamer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/MCTargetDesc/Debug+Asserts/ARMELFStreamer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/MCTargetDesc/Debug+Asserts/ARMAsmBackend.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/MCTargetDesc/Debug+Asserts/ARMAsmBackend.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/MCTargetDesc/Debug+Asserts/ARMELFObjectWriter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/MCTargetDesc/Debug+Asserts/ARMELFObjectWriter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/MCTargetDesc/Debug+Asserts/ARMMCTargetDesc.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/MCTargetDesc/Debug+Asserts/ARMMCTargetDesc.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/MCTargetDesc/Debug+Asserts/ARMMachObjectWriter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/MCTargetDesc/Debug+Asserts/ARMMachObjectWriter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/MCTargetDesc/ARMMachObjectWriter.cpp:MCObjectWriter *llvm::createARMMachObjectWriter(raw_ostream &OS,
./lib/Target/ARM/MCTargetDesc/ARMMCTargetDesc.h:class raw_ostream;
./lib/Target/ARM/MCTargetDesc/ARMMCTargetDesc.h:MCObjectWriter *createARMELFObjectWriter(raw_ostream &OS,
./lib/Target/ARM/MCTargetDesc/ARMMCTargetDesc.h:MCObjectWriter *createARMMachObjectWriter(raw_ostream &OS,
./lib/Target/ARM/ARMAsmPrinter.h:  void printOperand(const MachineInstr *MI, int OpNum, raw_ostream &O,
./lib/Target/ARM/ARMAsmPrinter.h:                               raw_ostream &O) LLVM_OVERRIDE;
./lib/Target/ARM/ARMAsmPrinter.h:                                     raw_ostream &O) LLVM_OVERRIDE;
./lib/Target/ARM/ARMAsmPrinter.h:  void PrintDebugValueComment(const MachineInstr *MI, raw_ostream &OS);
./lib/Target/ARM/Thumb2SizeReduction.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/ARM/ARMBaseRegisterInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:static void printRegImmShift(raw_ostream &O, ARM_AM::ShiftOpc ShOpc,
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:void ARMInstPrinter::printRegName(raw_ostream &OS, unsigned RegNo) const {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:void ARMInstPrinter::printInst(const MCInst *MI, raw_ostream &O,
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                  raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                               raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                       raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                       raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                           raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                           raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                           raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                 raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                         raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                           raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                 raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                             raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                            raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                             raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                           raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                           raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                           raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                           raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                 raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                    raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                     raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                          raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                         raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                         raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                       raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                         raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                        raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                  raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                   raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                         raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                           raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                    raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                              raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                          raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                     raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                     raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                          raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                  raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                  raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                            raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                     raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                      raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                 raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                    raw_ostream &O,
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                     raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                     raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                     raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                 raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                      raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                               raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                  raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                       raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                      raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                        raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                 raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                       raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                            raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                            raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                        raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                  raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                  raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                      raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                        raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                          raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                              raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                          raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                         raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                  raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                  raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                      raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                        raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                       raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp:                                                raw_ostream &O) {
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  virtual void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  virtual void printRegName(raw_ostream &OS, unsigned RegNo) const;
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printInstruction(const MCInst *MI, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printSORegRegOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printSORegImmOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printAddrModeTBB(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printAddrModeTBH(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printAddrMode2Operand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printAM2PostIndexOp(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                  raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                   raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printAddrMode3Operand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                   raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printAM3PostIndexOp(const MCInst *MI, unsigned Op, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printAM3PreOrOffsetIndexOp(const MCInst *MI, unsigned Op,raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                               raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printPostIdxRegOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                               raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printLdStmModeOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printAddrMode5Operand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printAddrMode6Operand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printAddrMode7Operand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                   raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                      raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printMemBOption(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printShiftImmOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printPKHLSLShiftImm(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printPKHASRShiftImm(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printAdrLabelOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printThumbS4ImmOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printThumbSRImm(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printThumbITMask(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                   raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                      raw_ostream &O, unsigned Scale);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                       raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                       raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                       raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                   raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printT2SOOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                 raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                  raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                    raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                    raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                        raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                          raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                   raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printSetendOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printCPSIMod(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printCPSIFlag(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printMSRMaskOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printPredicateOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                      raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printRegisterList(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printNoHashImmediate(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printPImmediate(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printCImmediate(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printCoprocOptionImm(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printFPImmOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printNEONModImmOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printImmPlusOneOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printRotImmOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printGPRPairOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printPCLabel(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                 raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printFBits16(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printFBits32(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printVectorIndex(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printVectorListOne(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printVectorListTwo(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                               raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printVectorListThree(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:  void printVectorListFour(const MCInst *MI, unsigned OpNum, raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                  raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                  raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                    raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                   raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                        raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                          raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                         raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                  raw_ostream &O);
./lib/Target/ARM/InstPrinter/ARMInstPrinter.h:                                  raw_ostream &O);
./lib/Target/ARM/InstPrinter/Debug+Asserts/ARMInstPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/InstPrinter/Debug+Asserts/ARMInstPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/ARMJITInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/ARM/ARMGenAsmWriter.inc:void ARMInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
./lib/Target/ARM/ARMGenAsmWriter.inc:bool ARMInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
./lib/Target/ARM/ARMConstantIslandPass.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/ARM/ARMAsmPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/ARM/ARMAsmPrinter.cpp:                                 raw_ostream &O, const char *Modifier) {
./lib/Target/ARM/ARMAsmPrinter.cpp:                                    raw_ostream &O) {
./lib/Target/ARM/ARMAsmPrinter.cpp:                                          raw_ostream &O) {
./lib/Target/ARM/ARMAsmPrinter.cpp:                                           raw_ostream &OS) {
./lib/Target/ARM/Disassembler/ARMDisassembler.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/ARM/Disassembler/ARMDisassembler.cpp:                              raw_ostream &vStream,
./lib/Target/ARM/Disassembler/ARMDisassembler.cpp:                              raw_ostream &cStream) const;
./lib/Target/ARM/Disassembler/ARMDisassembler.cpp:                              raw_ostream &vStream,
./lib/Target/ARM/Disassembler/ARMDisassembler.cpp:                              raw_ostream &cStream) const;
./lib/Target/ARM/Disassembler/ARMDisassembler.cpp:                                             raw_ostream &os,
./lib/Target/ARM/Disassembler/ARMDisassembler.cpp:                                             raw_ostream &cs) const {
./lib/Target/ARM/Disassembler/ARMDisassembler.cpp:                                               raw_ostream &os,
./lib/Target/ARM/Disassembler/ARMDisassembler.cpp:                                               raw_ostream &cs) const {
./lib/Target/ARM/Disassembler/Debug+Asserts/ARMDisassembler.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/Disassembler/Debug+Asserts/ARMDisassembler.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/Debug+Asserts/ARMLoadStoreOptimizer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/ARM/Debug+Asserts/ARMLoadStoreOptimizer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/Debug+Asserts/ARMExpandPseudoInsts.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/Debug+Asserts/ARMExpandPseudoInsts.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/Debug+Asserts/MLxExpansionPass.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/ARM/Debug+Asserts/MLxExpansionPass.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/Debug+Asserts/ARMSelectionDAGInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/Debug+Asserts/ARMSelectionDAGInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/Debug+Asserts/ARMMCInstLower.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/Debug+Asserts/ARMMCInstLower.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/Debug+Asserts/ARMGenSubtargetInfo.inc.tmp:#include "llvm/Support/raw_ostream.h"
./lib/Target/ARM/Debug+Asserts/Thumb2SizeReduction.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/ARM/Debug+Asserts/Thumb2SizeReduction.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/Debug+Asserts/ARMBaseInstrInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/Debug+Asserts/ARMBaseInstrInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/Debug+Asserts/Thumb1RegisterInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/Debug+Asserts/Thumb1RegisterInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/Debug+Asserts/ARMGenAsmWriter.inc.tmp:void ARMInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
./lib/Target/ARM/Debug+Asserts/ARMGenAsmWriter.inc.tmp:bool ARMInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
./lib/Target/ARM/Debug+Asserts/ARMSubtarget.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/Debug+Asserts/ARMSubtarget.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/Debug+Asserts/ARMTargetTransformInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/Debug+Asserts/ARMTargetTransformInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/Debug+Asserts/ARMInstrInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/Debug+Asserts/ARMInstrInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/Debug+Asserts/ARMGenDisassemblerTables.inc.tmp:#include "llvm/Support/raw_ostream.h"
./lib/Target/ARM/Debug+Asserts/ARMISelDAGToDAG.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/Debug+Asserts/ARMISelDAGToDAG.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/Debug+Asserts/ARMISelLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/Debug+Asserts/ARMISelLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/Debug+Asserts/ARMJITInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/ARM/Debug+Asserts/ARMJITInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/Debug+Asserts/ARMCodeEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/Debug+Asserts/ARMCodeEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/Debug+Asserts/ARMConstantIslandPass.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/ARM/Debug+Asserts/ARMConstantIslandPass.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/Debug+Asserts/ARMConstantPoolValue.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/ARM/Debug+Asserts/ARMConstantPoolValue.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/Debug+Asserts/ARMTargetMachine.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/Debug+Asserts/ARMTargetMachine.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/Debug+Asserts/ARMAsmPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/Debug+Asserts/ARMAsmPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/Debug+Asserts/ARMTargetObjectFile.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/Debug+Asserts/ARMTargetObjectFile.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/Debug+Asserts/ARMFastISel.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/Debug+Asserts/ARMFastISel.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/Debug+Asserts/ARMBaseRegisterInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/ARM/Debug+Asserts/ARMBaseRegisterInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/AsmParser/ARMAsmParser.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/ARM/AsmParser/ARMAsmParser.cpp:  virtual void print(raw_ostream &OS) const;
./lib/Target/ARM/AsmParser/ARMAsmParser.cpp:void ARMOperand::print(raw_ostream &OS) const {
./lib/Target/ARM/AsmParser/Debug+Asserts/ARMAsmParser.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/ARM/AsmParser/Debug+Asserts/ARMAsmParser.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/ARM/ARMGenDisassemblerTables.inc:#include "llvm/Support/raw_ostream.h"
./lib/Target/ARM/Thumb1RegisterInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/ARM/ARMGenSubtargetInfo.inc:#include "llvm/Support/raw_ostream.h"
./lib/Target/ARM/ARMCodeEmitter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/MBlaze/MBlazeRegisterInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/MBlaze/MCTargetDesc/MBlazeMCTargetDesc.h:class raw_ostream;
./lib/Target/MBlaze/MCTargetDesc/MBlazeMCTargetDesc.h:MCObjectWriter *createMBlazeELFObjectWriter(raw_ostream &OS, uint8_t OSABI);
./lib/Target/MBlaze/MCTargetDesc/MBlazeMCTargetDesc.cpp:                                    raw_ostream &_OS,
./lib/Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp:  void EmitByte(unsigned char C, unsigned &CurByte, raw_ostream &OS) const {
./lib/Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp:  void EmitRawByte(unsigned char C, unsigned &CurByte, raw_ostream &OS) const {
./lib/Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp:                    raw_ostream &OS) const {
./lib/Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp:  void EmitIMM(const MCOperand &imm, unsigned &CurByte, raw_ostream &OS) const;
./lib/Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp:  void EmitIMM(const MCInst &MI, unsigned &CurByte, raw_ostream &OS) const;
./lib/Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp:                     unsigned &CurByte, raw_ostream &OS,
./lib/Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp:  void EncodeInstruction(const MCInst &MI, raw_ostream &OS,
./lib/Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp:EmitIMM(const MCOperand &imm, unsigned &CurByte, raw_ostream &OS) const {
./lib/Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp:EmitIMM(const MCInst &MI, unsigned &CurByte,raw_ostream &OS) const {
./lib/Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp:              raw_ostream &OS, SmallVectorImpl<MCFixup> &Fixups) const {
./lib/Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp:EncodeInstruction(const MCInst &MI, raw_ostream &OS,
./lib/Target/MBlaze/MCTargetDesc/MBlazeAsmBackend.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/MBlaze/MCTargetDesc/MBlazeAsmBackend.cpp:  MCObjectWriter *createObjectWriter(raw_ostream &OS) const {
./lib/Target/MBlaze/MCTargetDesc/MBlazeELFObjectWriter.cpp:MCObjectWriter *llvm::createMBlazeELFObjectWriter(raw_ostream &OS,
./lib/Target/MBlaze/MCTargetDesc/Debug+Asserts/MBlazeMCTargetDesc.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MBlaze/MCTargetDesc/Debug+Asserts/MBlazeMCTargetDesc.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MBlaze/MCTargetDesc/Debug+Asserts/MBlazeMCCodeEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MBlaze/MCTargetDesc/Debug+Asserts/MBlazeMCCodeEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MBlaze/MCTargetDesc/Debug+Asserts/MBlazeAsmBackend.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MBlaze/MCTargetDesc/Debug+Asserts/MBlazeAsmBackend.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MBlaze/MBlazeISelDAGToDAG.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/MBlaze/MBlazeGenSubtargetInfo.inc:#include "llvm/Support/raw_ostream.h"
./lib/Target/MBlaze/MBlazeFrameLowering.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/MBlaze/MBlazeAsmPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/MBlaze/MBlazeAsmPrinter.cpp:                         raw_ostream &O);
./lib/Target/MBlaze/MBlazeAsmPrinter.cpp:    void printOperand(const MachineInstr *MI, int opNum, raw_ostream &O);
./lib/Target/MBlaze/MBlazeAsmPrinter.cpp:    void printUnsignedImm(const MachineInstr *MI, int opNum, raw_ostream &O);
./lib/Target/MBlaze/MBlazeAsmPrinter.cpp:    void printFSLImm(const MachineInstr *MI, int opNum, raw_ostream &O);
./lib/Target/MBlaze/MBlazeAsmPrinter.cpp:    void printMemOperand(const MachineInstr *MI, int opNum, raw_ostream &O,
./lib/Target/MBlaze/MBlazeAsmPrinter.cpp:static void printHex32(unsigned int Value, raw_ostream &O) {
./lib/Target/MBlaze/MBlazeAsmPrinter.cpp:                unsigned AsmVariant,const char *ExtraCode, raw_ostream &O) {
./lib/Target/MBlaze/MBlazeAsmPrinter.cpp:                                    raw_ostream &O) {
./lib/Target/MBlaze/MBlazeAsmPrinter.cpp:                                        raw_ostream &O) {
./lib/Target/MBlaze/MBlazeAsmPrinter.cpp:                                   raw_ostream &O) {
./lib/Target/MBlaze/MBlazeAsmPrinter.cpp:printMemOperand(const MachineInstr *MI, int opNum, raw_ostream &O,
./lib/Target/MBlaze/InstPrinter/MBlazeInstPrinter.h:    virtual void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot);
./lib/Target/MBlaze/InstPrinter/MBlazeInstPrinter.h:    void printInstruction(const MCInst *MI, raw_ostream &O);
./lib/Target/MBlaze/InstPrinter/MBlazeInstPrinter.h:    void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
./lib/Target/MBlaze/InstPrinter/MBlazeInstPrinter.h:    void printFSLImm(const MCInst *MI, int OpNo, raw_ostream &O);
./lib/Target/MBlaze/InstPrinter/MBlazeInstPrinter.h:    void printUnsignedImm(const MCInst *MI, int OpNo, raw_ostream &O);
./lib/Target/MBlaze/InstPrinter/MBlazeInstPrinter.h:    void printMemOperand(const MCInst *MI, int OpNo,raw_ostream &O,
./lib/Target/MBlaze/InstPrinter/Debug+Asserts/MBlazeInstPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MBlaze/InstPrinter/Debug+Asserts/MBlazeInstPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MBlaze/InstPrinter/MBlazeInstPrinter.cpp:void MBlazeInstPrinter::printInst(const MCInst *MI, raw_ostream &O,
./lib/Target/MBlaze/InstPrinter/MBlazeInstPrinter.cpp:                                     raw_ostream &O, const char *Modifier) {
./lib/Target/MBlaze/InstPrinter/MBlazeInstPrinter.cpp:                                    raw_ostream &O) {
./lib/Target/MBlaze/InstPrinter/MBlazeInstPrinter.cpp:                                        raw_ostream &O) {
./lib/Target/MBlaze/InstPrinter/MBlazeInstPrinter.cpp:                                        raw_ostream &O, const char *Modifier) {
./lib/Target/MBlaze/MBlazeIntrinsicInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/MBlaze/Disassembler/MBlazeDisassembler.h:class raw_ostream;
./lib/Target/MBlaze/Disassembler/MBlazeDisassembler.h:                      raw_ostream &vStream,
./lib/Target/MBlaze/Disassembler/MBlazeDisassembler.h:                      raw_ostream &cStream) const;
./lib/Target/MBlaze/Disassembler/MBlazeDisassembler.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/MBlaze/Disassembler/MBlazeDisassembler.cpp:                                        raw_ostream &vStream,
./lib/Target/MBlaze/Disassembler/MBlazeDisassembler.cpp:                                        raw_ostream &cStream) const {
./lib/Target/MBlaze/Disassembler/Debug+Asserts/MBlazeDisassembler.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/MBlaze/Disassembler/Debug+Asserts/MBlazeDisassembler.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MBlaze/MBlazeDelaySlotFiller.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/MBlaze/MBlazeGenAsmWriter.inc:void MBlazeInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
./lib/Target/MBlaze/MBlazeGenAsmWriter.inc:bool MBlazeInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
./lib/Target/MBlaze/MBlazeTargetMachine.h:  class formatted_raw_ostream;
./lib/Target/MBlaze/Debug+Asserts/MBlazeIntrinsicInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MBlaze/Debug+Asserts/MBlazeIntrinsicInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MBlaze/Debug+Asserts/MBlazeSubtarget.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MBlaze/Debug+Asserts/MBlazeSubtarget.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MBlaze/Debug+Asserts/MBlazeISelLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MBlaze/Debug+Asserts/MBlazeISelLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MBlaze/Debug+Asserts/MBlazeGenSubtargetInfo.inc.tmp:#include "llvm/Support/raw_ostream.h"
./lib/Target/MBlaze/Debug+Asserts/MBlazeInstrInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MBlaze/Debug+Asserts/MBlazeInstrInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MBlaze/Debug+Asserts/MBlazeSelectionDAGInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MBlaze/Debug+Asserts/MBlazeSelectionDAGInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MBlaze/Debug+Asserts/MBlazeTargetObjectFile.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MBlaze/Debug+Asserts/MBlazeTargetObjectFile.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MBlaze/Debug+Asserts/MBlazeISelDAGToDAG.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MBlaze/Debug+Asserts/MBlazeISelDAGToDAG.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MBlaze/Debug+Asserts/MBlazeGenAsmWriter.inc.tmp:void MBlazeInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
./lib/Target/MBlaze/Debug+Asserts/MBlazeGenAsmWriter.inc.tmp:bool MBlazeInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
./lib/Target/MBlaze/Debug+Asserts/MBlazeRegisterInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MBlaze/Debug+Asserts/MBlazeRegisterInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MBlaze/Debug+Asserts/MBlazeMCInstLower.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MBlaze/Debug+Asserts/MBlazeMCInstLower.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MBlaze/Debug+Asserts/MBlazeAsmPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MBlaze/Debug+Asserts/MBlazeAsmPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MBlaze/Debug+Asserts/MBlazeFrameLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MBlaze/Debug+Asserts/MBlazeFrameLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MBlaze/Debug+Asserts/MBlazeTargetMachine.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MBlaze/Debug+Asserts/MBlazeTargetMachine.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MBlaze/Debug+Asserts/MBlazeDelaySlotFiller.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MBlaze/Debug+Asserts/MBlazeDelaySlotFiller.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MBlaze/AsmParser/MBlazeAsmParser.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/MBlaze/AsmParser/MBlazeAsmParser.cpp:  virtual void print(raw_ostream &OS) const;
./lib/Target/MBlaze/AsmParser/MBlazeAsmParser.cpp:void MBlazeOperand::print(raw_ostream &OS) const {
./lib/Target/MBlaze/AsmParser/Debug+Asserts/MBlazeAsmParser.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/MBlaze/AsmParser/Debug+Asserts/MBlazeAsmParser.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/MBlaze/MBlazeISelLowering.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/MBlaze/MBlazeMCInstLower.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/XCore/XCoreISelLowering.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/XCore/XCoreRegisterInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/XCore/XCoreGenDisassemblerTables.inc:#include "llvm/Support/raw_ostream.h"
./lib/Target/XCore/XCore.h:  class formatted_raw_ostream;
./lib/Target/XCore/InstPrinter/XCoreInstPrinter.h:  void printInstruction(const MCInst *MI, raw_ostream &O);
./lib/Target/XCore/InstPrinter/XCoreInstPrinter.h:  virtual void printRegName(raw_ostream &OS, unsigned RegNo) const;
./lib/Target/XCore/InstPrinter/XCoreInstPrinter.h:  virtual void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot);
./lib/Target/XCore/InstPrinter/XCoreInstPrinter.h:  void printInlineJT(const MCInst *MI, int opNum, raw_ostream &O);
./lib/Target/XCore/InstPrinter/XCoreInstPrinter.h:  void printInlineJT32(const MCInst *MI, int opNum, raw_ostream &O);
./lib/Target/XCore/InstPrinter/XCoreInstPrinter.h:  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/XCore/InstPrinter/XCoreInstPrinter.h:  void printMemOperand(const MCInst *MI, int opNum, raw_ostream &O);
./lib/Target/XCore/InstPrinter/XCoreInstPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/XCore/InstPrinter/XCoreInstPrinter.cpp:void XCoreInstPrinter::printRegName(raw_ostream &OS, unsigned RegNo) const {
./lib/Target/XCore/InstPrinter/XCoreInstPrinter.cpp:void XCoreInstPrinter::printInst(const MCInst *MI, raw_ostream &O,
./lib/Target/XCore/InstPrinter/XCoreInstPrinter.cpp:printInlineJT(const MCInst *MI, int opNum, raw_ostream &O) {
./lib/Target/XCore/InstPrinter/XCoreInstPrinter.cpp:printInlineJT32(const MCInst *MI, int opNum, raw_ostream &O) {
./lib/Target/XCore/InstPrinter/XCoreInstPrinter.cpp:static void printExpr(const MCExpr *Expr, raw_ostream &OS) {
./lib/Target/XCore/InstPrinter/XCoreInstPrinter.cpp:printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/XCore/InstPrinter/XCoreInstPrinter.cpp:printMemOperand(const MCInst *MI, int opNum, raw_ostream &O) {
./lib/Target/XCore/InstPrinter/Debug+Asserts/XCoreInstPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/XCore/InstPrinter/Debug+Asserts/XCoreInstPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/XCore/Disassembler/XCoreDisassembler.cpp:                                      raw_ostream &vStream,
./lib/Target/XCore/Disassembler/XCoreDisassembler.cpp:                                      raw_ostream &cStream) const;
./lib/Target/XCore/Disassembler/XCoreDisassembler.cpp:                                  raw_ostream &vStream,
./lib/Target/XCore/Disassembler/XCoreDisassembler.cpp:                                  raw_ostream &cStream) const {
./lib/Target/XCore/Disassembler/Debug+Asserts/XCoreDisassembler.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/XCore/Disassembler/Debug+Asserts/XCoreDisassembler.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/XCore/XCoreGenSubtargetInfo.inc:#include "llvm/Support/raw_ostream.h"
./lib/Target/XCore/XCoreISelDAGToDAG.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/XCore/Debug+Asserts/XCoreAsmPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/XCore/Debug+Asserts/XCoreAsmPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/XCore/Debug+Asserts/XCoreTargetObjectFile.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/XCore/Debug+Asserts/XCoreTargetObjectFile.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/XCore/Debug+Asserts/XCoreGenSubtargetInfo.inc.tmp:#include "llvm/Support/raw_ostream.h"
./lib/Target/XCore/Debug+Asserts/XCoreSubtarget.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/XCore/Debug+Asserts/XCoreSubtarget.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/XCore/Debug+Asserts/XCoreRegisterInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/XCore/Debug+Asserts/XCoreRegisterInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/XCore/Debug+Asserts/XCoreGenAsmWriter.inc.tmp:void XCoreInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
./lib/Target/XCore/Debug+Asserts/XCoreGenAsmWriter.inc.tmp:bool XCoreInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
./lib/Target/XCore/Debug+Asserts/XCoreGenDisassemblerTables.inc.tmp:#include "llvm/Support/raw_ostream.h"
./lib/Target/XCore/Debug+Asserts/XCoreISelLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/XCore/Debug+Asserts/XCoreISelLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/XCore/Debug+Asserts/XCoreFrameLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/XCore/Debug+Asserts/XCoreFrameLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/XCore/Debug+Asserts/XCoreISelDAGToDAG.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/XCore/Debug+Asserts/XCoreISelDAGToDAG.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/XCore/Debug+Asserts/XCoreInstrInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/XCore/Debug+Asserts/XCoreInstrInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/XCore/Debug+Asserts/XCoreMCInstLower.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/XCore/Debug+Asserts/XCoreMCInstLower.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/XCore/XCoreGenAsmWriter.inc:void XCoreInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
./lib/Target/XCore/XCoreGenAsmWriter.inc:bool XCoreInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
./lib/Target/XCore/XCoreAsmPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/XCore/XCoreAsmPrinter.cpp:    void PrintDebugValueComment(const MachineInstr *MI, raw_ostream &OS);
./lib/Target/XCore/XCoreAsmPrinter.cpp:    void printInlineJT(const MachineInstr *MI, int opNum, raw_ostream &O,
./lib/Target/XCore/XCoreAsmPrinter.cpp:    void printInlineJT32(const MachineInstr *MI, int opNum, raw_ostream &O) {
./lib/Target/XCore/XCoreAsmPrinter.cpp:    void printOperand(const MachineInstr *MI, int opNum, raw_ostream &O);
./lib/Target/XCore/XCoreAsmPrinter.cpp:                         raw_ostream &O);
./lib/Target/XCore/XCoreAsmPrinter.cpp:printInlineJT(const MachineInstr *MI, int opNum, raw_ostream &O,
./lib/Target/XCore/XCoreAsmPrinter.cpp:                                   raw_ostream &O) {
./lib/Target/XCore/XCoreAsmPrinter.cpp:                                      raw_ostream &O) {
./lib/Target/XCore/XCoreAsmPrinter.cpp:                                             raw_ostream &OS) {
./lib/Target/Mips/MipsGenAsmWriter.inc:void MipsInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
./lib/Target/Mips/MipsGenAsmWriter.inc:bool MipsInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
./lib/Target/Mips/MCTargetDesc/MipsELFStreamer.cpp:                                       raw_ostream &OS, MCCodeEmitter *Emitter,
./lib/Target/Mips/MCTargetDesc/MipsAsmBackend.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Mips/MCTargetDesc/MipsAsmBackend.cpp:  MCObjectWriter *createObjectWriter(raw_ostream &OS) const {
./lib/Target/Mips/MCTargetDesc/MipsMCTargetDesc.cpp:                                    raw_ostream &_OS,
./lib/Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp:  void EmitByte(unsigned char C, raw_ostream &OS) const {
./lib/Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp:  void EmitInstruction(uint64_t Val, unsigned Size, raw_ostream &OS) const {
./lib/Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp:  void EncodeInstruction(const MCInst &MI, raw_ostream &OS,
./lib/Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp:EncodeInstruction(const MCInst &MI, raw_ostream &OS,
./lib/Target/Mips/MCTargetDesc/MipsELFStreamer.h:                  raw_ostream &OS, MCCodeEmitter *Emitter,
./lib/Target/Mips/MCTargetDesc/MipsELFStreamer.h:                                       raw_ostream &OS, MCCodeEmitter *Emitter,
./lib/Target/Mips/MCTargetDesc/Debug+Asserts/MipsELFStreamer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Mips/MCTargetDesc/Debug+Asserts/MipsELFStreamer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/MCTargetDesc/Debug+Asserts/MipsReginfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Mips/MCTargetDesc/Debug+Asserts/MipsReginfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/MCTargetDesc/Debug+Asserts/MipsAsmBackend.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Mips/MCTargetDesc/Debug+Asserts/MipsAsmBackend.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/MCTargetDesc/Debug+Asserts/MipsMCCodeEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Mips/MCTargetDesc/Debug+Asserts/MipsMCCodeEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/MCTargetDesc/Debug+Asserts/MipsMCTargetDesc.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Mips/MCTargetDesc/Debug+Asserts/MipsMCTargetDesc.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/MCTargetDesc/Debug+Asserts/MipsDirectObjLower.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Mips/MCTargetDesc/Debug+Asserts/MipsDirectObjLower.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp:MCObjectWriter *llvm::createMipsELFObjectWriter(raw_ostream &OS,
./lib/Target/Mips/MCTargetDesc/MipsMCTargetDesc.h:class raw_ostream;
./lib/Target/Mips/MCTargetDesc/MipsMCTargetDesc.h:MCObjectWriter *createMipsELFObjectWriter(raw_ostream &OS,
./lib/Target/Mips/MipsGenSubtargetInfo.inc:#include "llvm/Support/raw_ostream.h"
./lib/Target/Mips/MipsISelDAGToDAG.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Mips/MipsCodeEmitter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Mips/MipsAsmPrinter.h:class raw_ostream;
./lib/Target/Mips/MipsAsmPrinter.h:  void printSavedRegsBitmask(raw_ostream &O);
./lib/Target/Mips/MipsAsmPrinter.h:  void printHex32(unsigned int Value, raw_ostream &O);
./lib/Target/Mips/MipsAsmPrinter.h:                       raw_ostream &O);
./lib/Target/Mips/MipsAsmPrinter.h:                             raw_ostream &O);
./lib/Target/Mips/MipsAsmPrinter.h:  void printOperand(const MachineInstr *MI, int opNum, raw_ostream &O);
./lib/Target/Mips/MipsAsmPrinter.h:  void printUnsignedImm(const MachineInstr *MI, int opNum, raw_ostream &O);
./lib/Target/Mips/MipsAsmPrinter.h:  void printMemOperand(const MachineInstr *MI, int opNum, raw_ostream &O);
./lib/Target/Mips/MipsAsmPrinter.h:  void printMemOperandEA(const MachineInstr *MI, int opNum, raw_ostream &O);
./lib/Target/Mips/MipsAsmPrinter.h:  void printFCCOperand(const MachineInstr *MI, int opNum, raw_ostream &O,
./lib/Target/Mips/MipsAsmPrinter.h:  void PrintDebugValueComment(const MachineInstr *MI, raw_ostream &OS);
./lib/Target/Mips/Mips16RegisterInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Mips/MipsAsmPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Mips/MipsAsmPrinter.cpp:void MipsAsmPrinter::printSavedRegsBitmask(raw_ostream &O) {
./lib/Target/Mips/MipsAsmPrinter.cpp:void MipsAsmPrinter::printHex32(unsigned Value, raw_ostream &O) {
./lib/Target/Mips/MipsAsmPrinter.cpp:                                     raw_ostream &O) {
./lib/Target/Mips/MipsAsmPrinter.cpp:                                           raw_ostream &O) {
./lib/Target/Mips/MipsAsmPrinter.cpp:                                  raw_ostream &O) {
./lib/Target/Mips/MipsAsmPrinter.cpp:                                      raw_ostream &O) {
./lib/Target/Mips/MipsAsmPrinter.cpp:printMemOperand(const MachineInstr *MI, int opNum, raw_ostream &O) {
./lib/Target/Mips/MipsAsmPrinter.cpp:printMemOperandEA(const MachineInstr *MI, int opNum, raw_ostream &O) {
./lib/Target/Mips/MipsAsmPrinter.cpp:printFCCOperand(const MachineInstr *MI, int opNum, raw_ostream &O,
./lib/Target/Mips/MipsAsmPrinter.cpp:                                           raw_ostream &OS) {
./lib/Target/Mips/InstPrinter/MipsInstPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Mips/InstPrinter/MipsInstPrinter.cpp:void MipsInstPrinter::printRegName(raw_ostream &OS, unsigned RegNo) const {
./lib/Target/Mips/InstPrinter/MipsInstPrinter.cpp:void MipsInstPrinter::printInst(const MCInst *MI, raw_ostream &O,
./lib/Target/Mips/InstPrinter/MipsInstPrinter.cpp:static void printExpr(const MCExpr *Expr, raw_ostream &OS) {
./lib/Target/Mips/InstPrinter/MipsInstPrinter.cpp:                                   raw_ostream &O) {
./lib/Target/Mips/InstPrinter/MipsInstPrinter.cpp:                                   raw_ostream &O) {
./lib/Target/Mips/InstPrinter/MipsInstPrinter.cpp:                                       raw_ostream &O) {
./lib/Target/Mips/InstPrinter/MipsInstPrinter.cpp:printMemOperand(const MCInst *MI, int opNum, raw_ostream &O) {
./lib/Target/Mips/InstPrinter/MipsInstPrinter.cpp:printMemOperandEA(const MCInst *MI, int opNum, raw_ostream &O) {
./lib/Target/Mips/InstPrinter/MipsInstPrinter.cpp:printFCCOperand(const MCInst *MI, int opNum, raw_ostream &O) {
./lib/Target/Mips/InstPrinter/MipsInstPrinter.h:  void printInstruction(const MCInst *MI, raw_ostream &O);
./lib/Target/Mips/InstPrinter/MipsInstPrinter.h:  virtual void printRegName(raw_ostream &OS, unsigned RegNo) const;
./lib/Target/Mips/InstPrinter/MipsInstPrinter.h:  virtual void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot);
./lib/Target/Mips/InstPrinter/MipsInstPrinter.h:  void printCPURegs(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/Mips/InstPrinter/MipsInstPrinter.h:  bool printAliasInstr(const MCInst *MI, raw_ostream &OS);
./lib/Target/Mips/InstPrinter/MipsInstPrinter.h:  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/Mips/InstPrinter/MipsInstPrinter.h:  void printUnsignedImm(const MCInst *MI, int opNum, raw_ostream &O);
./lib/Target/Mips/InstPrinter/MipsInstPrinter.h:  void printMemOperand(const MCInst *MI, int opNum, raw_ostream &O);
./lib/Target/Mips/InstPrinter/MipsInstPrinter.h:  void printMemOperandEA(const MCInst *MI, int opNum, raw_ostream &O);
./lib/Target/Mips/InstPrinter/MipsInstPrinter.h:  void printFCCOperand(const MCInst *MI, int opNum, raw_ostream &O);
./lib/Target/Mips/InstPrinter/Debug+Asserts/MipsInstPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Mips/InstPrinter/Debug+Asserts/MipsInstPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/MipsJITInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Mips/MipsGenDisassemblerTables.inc:#include "llvm/Support/raw_ostream.h"
./lib/Target/Mips/MipsRegisterInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Mips/Disassembler/MipsDisassembler.cpp:                                      raw_ostream &vStream,
./lib/Target/Mips/Disassembler/MipsDisassembler.cpp:                                      raw_ostream &cStream) const;
./lib/Target/Mips/Disassembler/MipsDisassembler.cpp:                                      raw_ostream &vStream,
./lib/Target/Mips/Disassembler/MipsDisassembler.cpp:                                      raw_ostream &cStream) const;
./lib/Target/Mips/Disassembler/MipsDisassembler.cpp:                                 raw_ostream &vStream,
./lib/Target/Mips/Disassembler/MipsDisassembler.cpp:                                 raw_ostream &cStream) const {
./lib/Target/Mips/Disassembler/MipsDisassembler.cpp:                                   raw_ostream &vStream,
./lib/Target/Mips/Disassembler/MipsDisassembler.cpp:                                   raw_ostream &cStream) const {
./lib/Target/Mips/Disassembler/Debug+Asserts/MipsDisassembler.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/Mips/Disassembler/Debug+Asserts/MipsDisassembler.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/MipsTargetMachine.h:class formatted_raw_ostream;
./lib/Target/Mips/MipsISelLowering.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Mips/Debug+Asserts/MipsISelDAGToDAG.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Mips/Debug+Asserts/MipsISelDAGToDAG.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/Debug+Asserts/MipsJITInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/Mips/Debug+Asserts/MipsJITInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/Debug+Asserts/MipsSubtarget.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Mips/Debug+Asserts/MipsSubtarget.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/Debug+Asserts/Mips16RegisterInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/Mips/Debug+Asserts/Mips16RegisterInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/Debug+Asserts/MipsCodeEmitter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Mips/Debug+Asserts/MipsCodeEmitter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/Debug+Asserts/MipsISelLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Mips/Debug+Asserts/MipsISelLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/Debug+Asserts/MipsSEFrameLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Mips/Debug+Asserts/MipsSEFrameLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/Debug+Asserts/MipsGenSubtargetInfo.inc.tmp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Mips/Debug+Asserts/Mips16FrameLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Mips/Debug+Asserts/Mips16FrameLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/Debug+Asserts/MipsMCInstLower.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Mips/Debug+Asserts/MipsMCInstLower.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/Debug+Asserts/MipsAsmPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Mips/Debug+Asserts/MipsAsmPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/Debug+Asserts/MipsGenAsmWriter.inc.tmp:void MipsInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
./lib/Target/Mips/Debug+Asserts/MipsGenAsmWriter.inc.tmp:bool MipsInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
./lib/Target/Mips/Debug+Asserts/MipsSERegisterInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/Mips/Debug+Asserts/MipsSERegisterInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/Debug+Asserts/MipsRegisterInfo.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/Mips/Debug+Asserts/MipsRegisterInfo.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/Debug+Asserts/MipsTargetObjectFile.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Mips/Debug+Asserts/MipsTargetObjectFile.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/Debug+Asserts/MipsGenDisassemblerTables.inc.tmp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Mips/Debug+Asserts/MipsFrameLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Mips/Debug+Asserts/MipsFrameLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/AsmParser/MipsAsmParser.cpp:  virtual void print(raw_ostream &OS) const {
./lib/Target/Mips/AsmParser/Debug+Asserts/MipsAsmParser.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Mips/AsmParser/Debug+Asserts/MipsAsmParser.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Mips/MipsSERegisterInfo.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/TargetLoweringObjectFile.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Debug+Asserts/TargetMachineC.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Debug+Asserts/TargetMachineC.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Debug+Asserts/Mangler.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Debug+Asserts/Mangler.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Debug+Asserts/TargetLoweringObjectFile.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Debug+Asserts/TargetLoweringObjectFile.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/CppBackend/CPPBackend.cpp:    formatted_raw_ostream &Out;
./lib/Target/CppBackend/CPPBackend.cpp:    explicit CppWriter(formatted_raw_ostream &o) :
./lib/Target/CppBackend/CPPBackend.cpp:    formatted_raw_ostream& nl(formatted_raw_ostream &Out, int delta = 0);
./lib/Target/CppBackend/CPPBackend.cpp:formatted_raw_ostream &CppWriter::nl(formatted_raw_ostream &Out, int delta) {
./lib/Target/CppBackend/CPPBackend.cpp:                                           formatted_raw_ostream &o,
./lib/Target/CppBackend/Debug+Asserts/CPPBackend.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/CppBackend/Debug+Asserts/CPPBackend.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/CppBackend/CPPTargetMachine.h:class formatted_raw_ostream;
./lib/Target/CppBackend/CPPTargetMachine.h:                                   formatted_raw_ostream &Out,
./lib/Target/Mangler.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/TargetMachineC.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/TargetMachineC.cpp:  formatted_raw_ostream destf(dest);
./lib/Target/Hexagon/HexagonPeephole.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Hexagon/MCTargetDesc/Debug+Asserts/HexagonMCTargetDesc.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Hexagon/MCTargetDesc/Debug+Asserts/HexagonMCTargetDesc.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Hexagon/Hexagon.h:  class raw_ostream;
./lib/Target/Hexagon/HexagonISelLowering.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.h:    virtual void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot);
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.h:    void printInst(const HexagonMCInst *MI, raw_ostream &O, StringRef Annot);
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.h:    void printInstruction(const MCInst *MI, raw_ostream &O);
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.h:    void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.h:    void printImmOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.h:    void printExtOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.h:                                 raw_ostream &O) const;
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.h:    void printNegImmOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O)
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.h:    void printNOneImmOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O)
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.h:    void printMEMriOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O)
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.h:                                raw_ostream &O) const;
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.h:    void printBranchOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O)
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.h:    void printCallOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O)
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.h:    void printAbsAddrOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O)
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.h:    void printPredicateOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O)
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.h:    void printGlobalOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O)
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.h:    void printJumpTable(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.h:                           raw_ostream &O) const;
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.h:    void printSymbolHi(const MCInst *MI, unsigned OpNo, raw_ostream &O) const
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.h:    void printSymbolLo(const MCInst *MI, unsigned OpNo, raw_ostream &O) const
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.h:    void printSymbol(const MCInst *MI, unsigned OpNo, raw_ostream &O, bool hi)
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp:void HexagonInstPrinter::printInst(const MCInst *MI, raw_ostream &O,
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp:void HexagonInstPrinter::printInst(const HexagonMCInst *MI, raw_ostream &O,
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp:                                      raw_ostream &O) const {
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp:                                         raw_ostream &O) const {
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp:                                         raw_ostream &O) const {
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp:                                    unsigned OpNo, raw_ostream &O) const {
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp:                                            raw_ostream &O) const {
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp:                                             raw_ostream &O) const {
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp:                                           raw_ostream &O) const {
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp:                                                raw_ostream &O) const {
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp:                                            raw_ostream &O) const {
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp:                                        raw_ostream &O) const {
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp:                                           raw_ostream &O) const {
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp:                                            raw_ostream &O) const {
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp:                                          raw_ostream &O) const {
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp:                                             raw_ostream &O) const {
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp:                                               raw_ostream &O) const {
./lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp:                                     raw_ostream &O, bool hi) const {
./lib/Target/Hexagon/InstPrinter/Debug+Asserts/HexagonInstPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Hexagon/InstPrinter/Debug+Asserts/HexagonInstPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Hexagon/HexagonAsmPrinter.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Hexagon/HexagonAsmPrinter.cpp:                                    raw_ostream &O) {
./lib/Target/Hexagon/HexagonAsmPrinter.cpp:                                        raw_ostream &OS) {
./lib/Target/Hexagon/HexagonAsmPrinter.cpp:                                            raw_ostream &O) {
./lib/Target/Hexagon/HexagonAsmPrinter.cpp:                                              raw_ostream &O) {
./lib/Target/Hexagon/HexagonAsmPrinter.cpp:// static void PrintUnmangledNameSafely(const Value *V, raw_ostream &OS) {
./lib/Target/Hexagon/HexagonAsmPrinter.cpp:                                                    int OpNo, raw_ostream &O) {
./lib/Target/Hexagon/HexagonAsmPrinter.cpp:                                           raw_ostream &O) {
./lib/Target/Hexagon/HexagonAsmPrinter.cpp:                                       raw_ostream &O) {
./lib/Target/Hexagon/HexagonAsmPrinter.cpp:                                       raw_ostream &O) {
./lib/Target/Hexagon/HexagonAsmPrinter.h:#include "llvm/Support/raw_ostream.h"
./lib/Target/Hexagon/HexagonAsmPrinter.h:    void printOperand(const MachineInstr *MI, unsigned OpNo, raw_ostream &O);
./lib/Target/Hexagon/HexagonAsmPrinter.h:                         raw_ostream &OS);
./lib/Target/Hexagon/HexagonAsmPrinter.h:                               raw_ostream &OS);
./lib/Target/Hexagon/HexagonAsmPrinter.h:    void printInstruction(const MachineInstr *MI, raw_ostream &O);
./lib/Target/Hexagon/HexagonAsmPrinter.h:    void printOp(const MachineOperand &MO, raw_ostream &O);
./lib/Target/Hexagon/HexagonAsmPrinter.h:                       raw_ostream &O) {
./lib/Target/Hexagon/HexagonAsmPrinter.h:                                raw_ostream &O) {
./lib/Target/Hexagon/HexagonAsmPrinter.h:                                   raw_ostream &O) {
./lib/Target/Hexagon/HexagonAsmPrinter.h:                                  raw_ostream &O) {
./lib/Target/Hexagon/HexagonAsmPrinter.h:                                       raw_ostream &O) {
./lib/Target/Hexagon/HexagonAsmPrinter.h:                            raw_ostream &O) {
./lib/Target/Hexagon/HexagonAsmPrinter.h:                          raw_ostream &O) {
./lib/Target/Hexagon/HexagonAsmPrinter.h:                             raw_ostream &O) {
./lib/Target/Hexagon/HexagonAsmPrinter.h:    void printSymbolHi(const MachineInstr *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/Hexagon/HexagonAsmPrinter.h:    void printSymbolLo(const MachineInstr *MI, unsigned OpNo, raw_ostream &O) {
./lib/Target/Hexagon/HexagonAsmPrinter.h:                               raw_ostream &O);
./lib/Target/Hexagon/HexagonAsmPrinter.h:    void printModuleLevelGV(const GlobalVariable* GVar, raw_ostream &O);
./lib/Target/Hexagon/HexagonAsmPrinter.h:                                     raw_ostream &O);
./lib/Target/Hexagon/HexagonAsmPrinter.h:    void printGlobalOperand(const MachineInstr *MI, int OpNo, raw_ostream &O);
./lib/Target/Hexagon/HexagonAsmPrinter.h:    void printJumpTable(const MachineInstr *MI, int OpNo, raw_ostream &O);
./lib/Target/Hexagon/HexagonAsmPrinter.h:    void printConstantPool(const MachineInstr *MI, int OpNo, raw_ostream &O);
./lib/Target/Hexagon/Debug+Asserts/HexagonFrameLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Hexagon/Debug+Asserts/HexagonFrameLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Hexagon/Debug+Asserts/HexagonMCInstLower.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Hexagon/Debug+Asserts/HexagonMCInstLower.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Hexagon/Debug+Asserts/HexagonExpandPredSpillCode.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Hexagon/Debug+Asserts/HexagonExpandPredSpillCode.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Hexagon/Debug+Asserts/HexagonVLIWPacketizer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Hexagon/Debug+Asserts/HexagonVLIWPacketizer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Hexagon/Debug+Asserts/HexagonTargetMachine.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Hexagon/Debug+Asserts/HexagonTargetMachine.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Hexagon/Debug+Asserts/HexagonCFGOptimizer.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Hexagon/Debug+Asserts/HexagonCFGOptimizer.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Hexagon/Debug+Asserts/HexagonSplitTFRCondSets.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Hexagon/Debug+Asserts/HexagonSplitTFRCondSets.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Hexagon/Debug+Asserts/HexagonTargetObjectFile.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Hexagon/Debug+Asserts/HexagonTargetObjectFile.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Hexagon/Debug+Asserts/HexagonSubtarget.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Hexagon/Debug+Asserts/HexagonSubtarget.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Hexagon/Debug+Asserts/HexagonCallingConvLower.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Hexagon/Debug+Asserts/HexagonCallingConvLower.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Hexagon/Debug+Asserts/HexagonMachineScheduler.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Hexagon/Debug+Asserts/HexagonMachineScheduler.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Hexagon/Debug+Asserts/HexagonHardwareLoops.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Hexagon/Debug+Asserts/HexagonHardwareLoops.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Hexagon/Debug+Asserts/HexagonGenAsmWriter.inc.tmp:void HexagonInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
./lib/Target/Hexagon/Debug+Asserts/HexagonGenAsmWriter.inc.tmp:bool HexagonInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
./lib/Target/Hexagon/Debug+Asserts/HexagonISelLowering.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Hexagon/Debug+Asserts/HexagonISelLowering.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Hexagon/Debug+Asserts/HexagonPeephole.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h
./lib/Target/Hexagon/Debug+Asserts/HexagonPeephole.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Hexagon/Debug+Asserts/HexagonNewValueJump.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Hexagon/Debug+Asserts/HexagonNewValueJump.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Hexagon/Debug+Asserts/HexagonGenSubtargetInfo.inc.tmp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Hexagon/Debug+Asserts/HexagonAsmPrinter.d:  /home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h \
./lib/Target/Hexagon/Debug+Asserts/HexagonAsmPrinter.d:/home/andreu/Trabalhos/llvm-git/include/llvm/Support/raw_ostream.h:
./lib/Target/Hexagon/HexagonHardwareLoops.cpp:#include "llvm/Support/raw_ostream.h"
./lib/Target/Hexagon/HexagonHardwareLoops.cpp:    void print(raw_ostream &OS, const TargetMachine *TM = 0) const {
./lib/Target/Hexagon/HexagonMachineScheduler.h:#include "llvm/Support/raw_ostream.h"
./lib/Target/Hexagon/HexagonGenSubtargetInfo.inc:#include "llvm/Support/raw_ostream.h"
./lib/Target/Hexagon/HexagonGenAsmWriter.inc:void HexagonInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
./lib/Target/Hexagon/HexagonGenAsmWriter.inc:bool HexagonInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
./lib/Target/Hexagon/HexagonCallingConvLower.cpp:#include "llvm/Support/raw_ostream.h"
