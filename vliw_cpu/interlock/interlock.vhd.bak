library IEEE;
use ieee.std_logic_arith.all;
--use ieee.std_logic_unsigned.all;
use ieee.std_logic_signed.all;
use IEEE.STD_LOGIC_1164.all;
use work.cpu_typedef_package.all;
use work.alu_functions.all;
use work.opcodes.all;

entity interlock is
port (
	clk    : in std_logic;	
	reset  : in std_logic;
	
	-- cycle that need forward
	rd_ctrl_src_0_a		: in std_logic_vector(REG_ADDR_SIZE-1 downto 0);
	rd_ctrl_src_1_a		: in std_logic_vector(REG_ADDR_SIZE-1 downto 0);
	rd_ctrl_src_2_a		: in std_logic_vector(REG_ADDR_SIZE-1 downto 0);
	rd_ctrl_src_3_a		: in std_logic_vector(REG_ADDR_SIZE-1 downto 0);
	
	rd_ctrl_src_0_b		: in std_logic_vector(REG_ADDR_SIZE-1 downto 0);
	rd_ctrl_src_1_b		: in std_logic_vector(REG_ADDR_SIZE-1 downto 0);
	rd_ctrl_src_2_b		: in std_logic_vector(REG_ADDR_SIZE-1 downto 0);
	rd_ctrl_src_3_b		: in std_logic_vector(REG_ADDR_SIZE-1 downto 0);
	
	rd_ctrl_opc_0			: in std_logic_vector(OPCODE_SIZE-1 downto 0);		
	rd_ctrl_opc_1			: in std_logic_vector(OPCODE_SIZE-1 downto 0);
	rd_ctrl_opc_2			: in std_logic_vector(OPCODE_SIZE-1 downto 0);
	rd_ctrl_opc_3			: in std_logic_vector(OPCODE_SIZE-1 downto 0);
	
--	-- immediates	
--	imm_0							: word_t;
--	imm_1							: word_t;
--	imm_2							: word_t;
--	imm_3							: word_t;
--	
--	-- register / immediate selection
--	src_2_sel_0				: IN STD_LOGIC;
--	src_2_sel_1				: IN STD_LOGIC;
--	src_2_sel_2				: IN STD_LOGIC;
--	src_2_sel_3				: IN STD_LOGIC;
	
	-- destination registers
	wb_addr_reg_0		: in std_logic_vector(REG_ADDR_SIZE-1 downto 0);
	wb_reg_w_en_0	: in std_logic;
	wb_alu_func_0		: in std_logic;	
		
	wb_addr_reg_1		: in std_logic_vector(REG_ADDR_SIZE-1 downto 0);
	wb_reg_w_en_1	: in std_logic;
	wb_alu_func_1		: in std_logic;
	
	wb_addr_reg_2		: in std_logic_vector(REG_ADDR_SIZE-1 downto 0);
	wb_reg_w_en_2	: in std_logic;
	wb_alu_func_2		: in std_logic;
	
	wb_addr_reg_3		: in std_logic_vector(REG_ADDR_SIZE-1 downto 0);
	wb_reg_w_en_3	: in std_logic;
	wb_alu_func_3		: in std_logic;
	
	ctrl_0   : in t_ctrl;
	ctrl_1   : in t_ctrl;
	ctrl_2   : in t_ctrl;
	ctrl_3   : in t_ctrl;
   
	src1_in_0		 : in word_t;
	src2_in_0		 : in word_t;
	
	src1_in_1		 : in word_t;
	src2_in_1		 : in word_t;
	
	src1_in_2		 : in word_t;
	src2_in_2		 : in word_t;
	
	src1_in_3		 : in word_t;
	src2_in_3		 : in word_t;				
	
	ex_stall			: out std_logic;	
	dep_stall			: out std_logic;
	
	wb_wait			: out std_logic;

	val_rd_0			: out std_logic;
	val_rd_1			: out std_logic;
	
	wb_dest_reg_0	: out std_logic_vector(REG_ADDR_SIZE-1 downto 0);
	wb_dest_reg_1	: out std_logic_vector(REG_ADDR_SIZE-1 downto 0);
	
	val_0				: out word_t;
	val_1				: out word_t;
	val_2				: out word_t;
	val_3				: out word_t
		
	);
end interlock;