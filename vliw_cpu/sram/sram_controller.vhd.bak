library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;
use work.cpu_typedef_package.all;

entity sram_controller is 
	port (
	  -- inputs:
	  address 		: IN STD_LOGIC_VECTOR (DATA_ADDR_SIZE-1 DOWNTO 0);
	  byteenable : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
	  chipselect 	: IN STD_LOGIC;
	  clk 					: IN STD_LOGIC;
	  clken 				: IN STD_LOGIC;
	  reset 				: IN STD_LOGIC;
	  reset_req 	: IN STD_LOGIC;
	  write 				: IN STD_LOGIC;
	  writedata 		: IN STD_LOGIC_VECTOR (31 DOWNTO 0);
	
	  -- outputs:
	  readdata 		: OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
	  waitrequest : out std_logic;
	  
	 ADSC_N :  out std_logic;
	 ADSP_N :  out std_logic;
	 ADV_N :  out std_logic;
	 BE :  out std_logic_vector( 3  downto 0  );
	
	GW_N :  out std_logic;
	OE_N :  out std_logic;
	WE_N :  out std_logic;
	CE_0_N :  out std_logic;
	CE_1_N :  out std_logic;
	FS_ADDR :  out std_logic_vector( 26  downto 0  );
	FS_DQ :  inout std_logic_vector( 31  downto 0  )
);
end entity sram_controller;

architecture rtl of sram_controller is


begin


	waitrequest <= '1';




end rtl;